{
  "abi": [],
  "allSourcePaths": {
    "36": "contracts/lib/math/SafeMath.sol",
    "48": "contracts/lib/utils/Counters.sol"
  },
  "ast": {
    "absolutePath": "contracts/lib/utils/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        13960
      ]
    },
    "id": 13961,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13912,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:48"
      },
      {
        "absolutePath": "contracts/lib/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 13913,
        "nodeType": "ImportDirective",
        "scope": 13961,
        "sourceUnit": 12060,
        "src": "58:30:48",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 13914,
          "nodeType": "StructuredDocumentation",
          "src": "90:571:48",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 13960,
        "linearizedBaseContracts": [
          13960
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13917,
            "libraryName": {
              "contractScope": null,
              "id": 13915,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11986,
              "src": "691:8:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11986",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "685:27:48",
            "typeName": {
              "id": 13916,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "704:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 13920,
            "members": [
              {
                "constant": false,
                "id": 13919,
                "mutability": "mutable",
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 13920,
                "src": "1057:14:48",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13918,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1057:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 13960,
            "src": "718:374:48",
            "visibility": "public"
          },
          {
            "body": {
              "id": 13930,
              "nodeType": "Block",
              "src": "1172:38:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 13927,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13922,
                      "src": "1189:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 13928,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 13919,
                    "src": "1189:14:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13926,
                  "id": 13929,
                  "nodeType": "Return",
                  "src": "1182:21:48"
                }
              ]
            },
            "documentation": null,
            "id": 13931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13922,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13931,
                  "src": "1115:23:48",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13921,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13920,
                    "src": "1115:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1114:25:48"
            },
            "returnParameters": {
              "id": 13926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13925,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13931,
                  "src": "1163:7:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1162:9:48"
            },
            "scope": 13960,
            "src": "1098:112:48",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13942,
              "nodeType": "Block",
              "src": "1269:125:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13936,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13933,
                        "src": "1368:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 13938,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13919,
                      "src": "1368:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 13939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1386:1:48",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1368:19:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13941,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:19:48"
                }
              ]
            },
            "documentation": null,
            "id": 13943,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13933,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13943,
                  "src": "1235:23:48",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13932,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13920,
                    "src": "1235:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1234:25:48"
            },
            "returnParameters": {
              "id": 13935,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1269:0:48"
            },
            "scope": 13960,
            "src": "1216:178:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13958,
              "nodeType": "Block",
              "src": "1453:55:48",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 13948,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13945,
                        "src": "1463:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 13950,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13919,
                      "src": "1463:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 13954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1499:1:48",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13951,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13945,
                            "src": "1480:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 13952,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13919,
                          "src": "1480:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11836,
                        "src": "1480:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1480:21:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1463:38:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13957,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:38:48"
                }
              ]
            },
            "documentation": null,
            "id": 13959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13945,
                  "mutability": "mutable",
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13959,
                  "src": "1419:23:48",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 13944,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13920,
                    "src": "1419:7:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$13920_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1418:25:48"
            },
            "returnParameters": {
              "id": 13947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:48"
            },
            "scope": 13960,
            "src": "1400:108:48",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 13961,
        "src": "662:848:48"
      }
    ],
    "src": "33:1478:48"
  },
  "bytecode": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220941ea46bea6555b11a3a312fe0906765a60c766d2db49c7f8766e483539e7a4564736f6c634300060c0033",
  "bytecodeSha1": "3b4158955f564edb18bd7a8ffdb49859c904f0b7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "Counters",
  "coverageMap": {
    "branches": {
      "36": {},
      "48": {}
    },
    "statements": {
      "36": {},
      "48": {}
    }
  },
  "dependencies": [
    "SafeMath"
  ],
  "deployedBytecode": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220941ea46bea6555b11a3a312fe0906765a60c766d2db49c7f8766e483539e7a4564736f6c634300060c0033",
  "deployedSourceMap": "662:848:48:-:0;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "offset": [
    662,
    1510
  ],
  "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x1E LOG4 PUSH12 0xEA6555B11A3A312FE0906765 0xA6 0xC PUSH23 0x6D2DB49C7F8766E483539E7A4564736F6C634300060C00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        662,
        1510
      ],
      "op": "PUSH20",
      "path": "48",
      "value": "0x0"
    },
    "21": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "ADDRESS",
      "path": "48"
    },
    "22": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "EQ",
      "path": "48"
    },
    "23": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x80"
    },
    "25": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x40"
    },
    "27": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "MSTORE",
      "path": "48"
    },
    "28": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "PUSH1",
      "path": "48",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "DUP1",
      "path": "48"
    },
    "31": {
      "fn": null,
      "offset": [
        662,
        1510
      ],
      "op": "REVERT",
      "path": "48"
    }
  },
  "sha1": "b62997e751f76109ee78515ceb4f468b22ce6789",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourceMap": "662:848:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/lib/utils/Counters.sol",
  "type": "library"
}
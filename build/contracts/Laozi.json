{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract YIToken",
          "name": "_yi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_yiPerBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bonusEndBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "pid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BONUS_MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20",
          "name": "_lpToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "add",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bonusEndBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devaddr",
          "type": "address"
        }
      ],
      "name": "dev",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devaddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_from",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_to",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "massUpdatePools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "migrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migrator",
      "outputs": [
        {
          "internalType": "contract IMigratorMaster",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "pendingYI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "lpToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastRewardBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "accYIPerShare",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_allocPoint",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_withUpdate",
          "type": "bool"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IMigratorMaster",
          "name": "_migrator",
          "type": "address"
        }
      ],
      "name": "setMigrator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalAllocPoint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        }
      ],
      "name": "updatePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardDebt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yi",
      "outputs": [
        {
          "internalType": "contract YIToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yiPerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/lib/GSN/Context.sol",
    "19": "contracts/lib/access/Ownable.sol",
    "3": "contracts/Laozi.sol",
    "36": "contracts/lib/math/SafeMath.sol",
    "44": "contracts/lib/token/ERC20/SafeERC20.sol",
    "46": "contracts/lib/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/Laozi.sol",
    "exportedSymbols": {
      "IMigratorMaster": [
        1428
      ],
      "Laozi": [
        2336
      ]
    },
    "id": 2337,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1417,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "contracts/lib/token/ERC20/SafeERC20.sol",
        "file": "./lib/token/ERC20/SafeERC20.sol",
        "id": 1418,
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 13523,
        "src": "67:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/utils/EnumerableSet.sol",
        "file": "./lib/utils/EnumerableSet.sol",
        "id": 1419,
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 14919,
        "src": "109:39:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/YIToken.sol",
        "file": "./YIToken.sol",
        "id": 1420,
        "nodeType": "ImportDirective",
        "scope": 2337,
        "sourceUnit": 4710,
        "src": "222:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1428,
        "linearizedBaseContracts": [
          1428
        ],
        "name": "IMigratorMaster",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "ce5494bb",
            "id": 1427,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1422,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1427,
                  "src": "797:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13309",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1421,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13309,
                    "src": "797:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13309",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "796:14:3"
            },
            "returnParameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1427,
                  "src": "829:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13309",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1424,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13309,
                    "src": "829:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13309",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "828:8:3"
            },
            "scope": 1428,
            "src": "780:57:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2337,
        "src": "248:591:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1429,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6286,
              "src": "1212:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6286",
                "typeString": "contract Ownable"
              }
            },
            "id": 1430,
            "nodeType": "InheritanceSpecifier",
            "src": "1212:7:3"
          }
        ],
        "contractDependencies": [
          4732,
          6286
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2336,
        "linearizedBaseContracts": [
          2336,
          6286,
          4732
        ],
        "name": "Laozi",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1433,
            "libraryName": {
              "contractScope": null,
              "id": 1431,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11986,
              "src": "1232:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$11986",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1226:27:3",
            "typeName": {
              "id": 1432,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1245:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1436,
            "libraryName": {
              "contractScope": null,
              "id": 1434,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13522,
              "src": "1264:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$13522",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1258:27:3",
            "typeName": {
              "contractScope": null,
              "id": 1435,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13309,
              "src": "1278:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13309",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "Laozi.UserInfo",
            "id": 1441,
            "members": [
              {
                "constant": false,
                "id": 1438,
                "mutability": "mutable",
                "name": "amount",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1441,
                "src": "1343:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1437,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1343:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1440,
                "mutability": "mutable",
                "name": "rewardDebt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1441,
                "src": "1416:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1439,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1416:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nodeType": "StructDefinition",
            "scope": 2336,
            "src": "1317:778:3",
            "visibility": "public"
          },
          {
            "canonicalName": "Laozi.PoolInfo",
            "id": 1450,
            "members": [
              {
                "constant": false,
                "id": 1443,
                "mutability": "mutable",
                "name": "lpToken",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1450,
                "src": "2153:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$13309",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 1442,
                  "name": "IERC20",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 13309,
                  "src": "2153:6:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13309",
                    "typeString": "contract IERC20"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1445,
                "mutability": "mutable",
                "name": "allocPoint",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1450,
                "src": "2220:18:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1444,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2220:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1447,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1450,
                "src": "2339:23:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1446,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2339:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1449,
                "mutability": "mutable",
                "name": "accYIPerShare",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1450,
                "src": "2427:21:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1448,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2427:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nodeType": "StructDefinition",
            "scope": 2336,
            "src": "2127:384:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c4391f14",
            "id": 1452,
            "mutability": "mutable",
            "name": "yi",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "2541:17:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_YIToken_$4709",
              "typeString": "contract YIToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 1451,
              "name": "YIToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4709,
              "src": "2541:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_YIToken_$4709",
                "typeString": "contract YIToken"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d49e77cd",
            "id": 1454,
            "mutability": "mutable",
            "name": "devaddr",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "2584:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1453,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2584:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1aed6553",
            "id": 1456,
            "mutability": "mutable",
            "name": "bonusEndBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "2662:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1455,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2662:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "de413820",
            "id": 1458,
            "mutability": "mutable",
            "name": "yiPerBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "2735:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1457,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2735:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "8aa28550",
            "id": 1461,
            "mutability": "constant",
            "name": "BONUS_MULTIPLIER",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "2810:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1459,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2810:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 1460,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2853:2:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7cd07e47",
            "id": 1463,
            "mutability": "mutable",
            "name": "migrator",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "2958:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
              "typeString": "contract IMigratorMaster"
            },
            "typeName": {
              "contractScope": null,
              "id": 1462,
              "name": "IMigratorMaster",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1428,
              "src": "2958:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                "typeString": "contract IMigratorMaster"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1526fe27",
            "id": 1466,
            "mutability": "mutable",
            "name": "poolInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "3022:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
              "typeString": "struct Laozi.PoolInfo[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1464,
                "name": "PoolInfo",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1450,
                "src": "3022:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                  "typeString": "struct Laozi.PoolInfo"
                }
              },
              "id": 1465,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "3022:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage_ptr",
                "typeString": "struct Laozi.PoolInfo[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "93f1a40b",
            "id": 1472,
            "mutability": "mutable",
            "name": "userInfo",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "3102:66:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$_$",
              "typeString": "mapping(uint256 => mapping(address => struct Laozi.UserInfo))"
            },
            "typeName": {
              "id": 1471,
              "keyType": {
                "id": 1467,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3111:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3102:50:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$_$",
                "typeString": "mapping(uint256 => mapping(address => struct Laozi.UserInfo))"
              },
              "valueType": {
                "id": 1470,
                "keyType": {
                  "id": 1468,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3131:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3122:29:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$",
                  "typeString": "mapping(address => struct Laozi.UserInfo)"
                },
                "valueType": {
                  "contractScope": null,
                  "id": 1469,
                  "name": "UserInfo",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1441,
                  "src": "3142:8:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                    "typeString": "struct Laozi.UserInfo"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "17caf6f1",
            "id": 1475,
            "mutability": "mutable",
            "name": "totalAllocPoint",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "3261:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1473,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3261:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 1474,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3294:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "48cd4cb1",
            "id": 1477,
            "mutability": "mutable",
            "name": "startBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2336,
            "src": "3351:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1476,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3351:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1485,
            "name": "Deposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1485,
                  "src": "3397:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3397:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1485,
                  "src": "3419:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1483,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1485,
                  "src": "3440:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3396:59:3"
            },
            "src": "3383:73:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1493,
            "name": "Withdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1487,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1493,
                  "src": "3476:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1489,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1493,
                  "src": "3498:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1493,
                  "src": "3519:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3519:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3475:59:3"
            },
            "src": "3461:74:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1501,
            "name": "EmergencyWithdraw",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1495,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1501,
                  "src": "3564:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1497,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1501,
                  "src": "3586:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1499,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1501,
                  "src": "3607:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3607:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3563:59:3"
            },
            "src": "3540:83:3"
          },
          {
            "body": {
              "id": 1534,
              "nodeType": "Block",
              "src": "3791:161:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1514,
                      "name": "yi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1452,
                      "src": "3801:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YIToken_$4709",
                        "typeString": "contract YIToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1515,
                      "name": "_yi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1503,
                      "src": "3806:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YIToken_$4709",
                        "typeString": "contract YIToken"
                      }
                    },
                    "src": "3801:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YIToken_$4709",
                      "typeString": "contract YIToken"
                    }
                  },
                  "id": 1517,
                  "nodeType": "ExpressionStatement",
                  "src": "3801:8:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1518,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1454,
                      "src": "3819:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1519,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1505,
                      "src": "3829:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3819:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1521,
                  "nodeType": "ExpressionStatement",
                  "src": "3819:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1522,
                      "name": "yiPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1458,
                      "src": "3847:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1523,
                      "name": "_yiPerBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1507,
                      "src": "3860:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3847:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1525,
                  "nodeType": "ExpressionStatement",
                  "src": "3847:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1526,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "3881:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1527,
                      "name": "_bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
                      "src": "3897:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3881:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1529,
                  "nodeType": "ExpressionStatement",
                  "src": "3881:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1530,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1477,
                      "src": "3921:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1531,
                      "name": "_startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1509,
                      "src": "3934:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3921:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:24:3"
                }
              ]
            },
            "documentation": null,
            "id": 1535,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "_yi",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1535,
                  "src": "3650:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_YIToken_$4709",
                    "typeString": "contract YIToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1502,
                    "name": "YIToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4709,
                    "src": "3650:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YIToken_$4709",
                      "typeString": "contract YIToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1535,
                  "src": "3671:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "_yiPerBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1535,
                  "src": "3697:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3697:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1509,
                  "mutability": "mutable",
                  "name": "_startBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1535,
                  "src": "3726:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3726:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1511,
                  "mutability": "mutable",
                  "name": "_bonusEndBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1535,
                  "src": "3755:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3755:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3640:143:3"
            },
            "returnParameters": {
              "id": 1513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3791:0:3"
            },
            "scope": 2336,
            "src": "3629:323:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1543,
              "nodeType": "Block",
              "src": "4012:39:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1540,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "4029:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 1541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4029:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1539,
                  "id": 1542,
                  "nodeType": "Return",
                  "src": "4022:22:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "081e3eda",
            "id": 1544,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "poolLength",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3977:2:3"
            },
            "returnParameters": {
              "id": 1539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1538,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1544,
                  "src": "4003:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1537,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4002:9:3"
            },
            "scope": 2336,
            "src": "3958:93:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1590,
              "nodeType": "Block",
              "src": "4302:413:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1555,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1550,
                    "src": "4316:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1560,
                  "nodeType": "IfStatement",
                  "src": "4312:59:3",
                  "trueBody": {
                    "id": 1559,
                    "nodeType": "Block",
                    "src": "4329:42:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1556,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1890,
                            "src": "4343:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4343:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1558,
                        "nodeType": "ExpressionStatement",
                        "src": "4343:17:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1562
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1562,
                      "mutability": "mutable",
                      "name": "lastRewardBlock",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1590,
                      "src": "4380:23:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1561,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4380:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1571,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1563,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4406:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4406:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1565,
                        "name": "startBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1477,
                        "src": "4421:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4406:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "id": 1569,
                      "name": "startBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1477,
                      "src": "4449:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4406:53:3",
                    "trueExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1567,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4434:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4434:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4380:79:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1572,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "4469:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1575,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1546,
                          "src": "4507:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1573,
                          "name": "totalAllocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1475,
                          "src": "4487:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11819,
                        "src": "4487:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4487:32:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4469:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "4469:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1583,
                            "name": "_lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1548,
                            "src": "4575:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$13309",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1584,
                            "name": "_allocPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1546,
                            "src": "4609:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1585,
                            "name": "lastRewardBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1562,
                            "src": "4651:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4695:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$13309",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1582,
                          "name": "PoolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1450,
                          "src": "4543:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PoolInfo_$1450_storage_ptr_$",
                            "typeString": "type(struct Laozi.PoolInfo storage pointer)"
                          }
                        },
                        "id": 1587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "lpToken",
                          "allocPoint",
                          "lastRewardBlock",
                          "accYIPerShare"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4543:164:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_memory_ptr",
                          "typeString": "struct Laozi.PoolInfo memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_memory_ptr",
                          "typeString": "struct Laozi.PoolInfo memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1579,
                        "name": "poolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1466,
                        "src": "4529:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                          "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                        }
                      },
                      "id": 1581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4529:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1450_storage_$returns$__$",
                        "typeString": "function (struct Laozi.PoolInfo storage ref)"
                      }
                    },
                    "id": 1588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4529:179:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1589,
                  "nodeType": "ExpressionStatement",
                  "src": "4529:179:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1eaaa045",
            "id": 1591,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1553,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1552,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6235,
                  "src": "4292:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4292:9:3"
              }
            ],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1546,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1591,
                  "src": "4229:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4229:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1548,
                  "mutability": "mutable",
                  "name": "_lpToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1591,
                  "src": "4250:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$13309",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1547,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 13309,
                    "src": "4250:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13309",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1550,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1591,
                  "src": "4267:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1549,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4228:56:3"
            },
            "returnParameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4302:0:3"
            },
            "scope": 2336,
            "src": "4216:499:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1628,
              "nodeType": "Block",
              "src": "4892:215:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1602,
                    "name": "_withUpdate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1597,
                    "src": "4906:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1607,
                  "nodeType": "IfStatement",
                  "src": "4902:59:3",
                  "trueBody": {
                    "id": 1606,
                    "nodeType": "Block",
                    "src": "4919:42:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1603,
                            "name": "massUpdatePools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1890,
                            "src": "4933:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4933:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1605,
                        "nodeType": "ExpressionStatement",
                        "src": "4933:17:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1608,
                      "name": "totalAllocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1475,
                      "src": "4970:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1617,
                          "name": "_allocPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "5039:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1611,
                                  "name": "poolInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1466,
                                  "src": "5008:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                                    "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                                  }
                                },
                                "id": 1613,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1612,
                                  "name": "_pid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1593,
                                  "src": "5017:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5008:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                                  "typeString": "struct Laozi.PoolInfo storage ref"
                                }
                              },
                              "id": 1614,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allocPoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1445,
                              "src": "5008:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1609,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "4988:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11836,
                            "src": "4988:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4988:46:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11819,
                        "src": "4988:50:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4988:63:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4970:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1621,
                          "name": "poolInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1466,
                          "src": "5061:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                            "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                          }
                        },
                        "id": 1623,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1622,
                          "name": "_pid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1593,
                          "src": "5070:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5061:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                          "typeString": "struct Laozi.PoolInfo storage ref"
                        }
                      },
                      "id": 1624,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "allocPoint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1445,
                      "src": "5061:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1625,
                      "name": "_allocPoint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "5089:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5061:39:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1627,
                  "nodeType": "ExpressionStatement",
                  "src": "5061:39:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "64482f79",
            "id": 1629,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1600,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1599,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6235,
                  "src": "4882:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4882:9:3"
              }
            ],
            "name": "set",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1593,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1629,
                  "src": "4822:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4822:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "_allocPoint",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1629,
                  "src": "4836:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4836:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "_withUpdate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1629,
                  "src": "4857:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4821:53:3"
            },
            "returnParameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4892:0:3"
            },
            "scope": 2336,
            "src": "4809:298:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "5245:37:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1636,
                      "name": "migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "5255:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                        "typeString": "contract IMigratorMaster"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1637,
                      "name": "_migrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1631,
                      "src": "5266:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                        "typeString": "contract IMigratorMaster"
                      }
                    },
                    "src": "5255:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                      "typeString": "contract IMigratorMaster"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "5255:20:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "23cf3118",
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 1634,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1633,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6235,
                  "src": "5235:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5235:9:3"
              }
            ],
            "name": "setMigrator",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1631,
                  "mutability": "mutable",
                  "name": "_migrator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1641,
                  "src": "5201:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                    "typeString": "contract IMigratorMaster"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1630,
                    "name": "IMigratorMaster",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1428,
                    "src": "5201:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                      "typeString": "contract IMigratorMaster"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5200:27:3"
            },
            "returnParameters": {
              "id": 1635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5245:0:3"
            },
            "scope": 2336,
            "src": "5180:102:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1716,
              "nodeType": "Block",
              "src": "5440:444:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1649,
                              "name": "migrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1463,
                              "src": "5466:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                                "typeString": "contract IMigratorMaster"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                                "typeString": "contract IMigratorMaster"
                              }
                            ],
                            "id": 1648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5458:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1647,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5458:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5458:17:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5487:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5479:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1651,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5479:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5479:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5458:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d6967726174653a206e6f206d69677261746f72",
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5491:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
                          "typeString": "literal_string \"migrate: no migrator\""
                        },
                        "value": "migrate: no migrator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2b78d14701a493fa40394b414840abc22dde75251115d332366fec4d94c3445",
                          "typeString": "literal_string \"migrate: no migrator\""
                        }
                      ],
                      "id": 1646,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5450:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5450:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1658,
                  "nodeType": "ExpressionStatement",
                  "src": "5450:64:3"
                },
                {
                  "assignments": [
                    1660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1660,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1716,
                      "src": "5524:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1659,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1450,
                        "src": "5524:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1664,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1661,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "5548:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 1663,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1662,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "5557:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5548:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                      "typeString": "struct Laozi.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5524:38:3"
                },
                {
                  "assignments": [
                    1666
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1666,
                      "mutability": "mutable",
                      "name": "lpToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1716,
                      "src": "5572:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13309",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1665,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13309,
                        "src": "5572:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1669,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1667,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1660,
                      "src": "5589:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo storage pointer"
                      }
                    },
                    "id": 1668,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "lpToken",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1443,
                    "src": "5589:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13309",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5572:29:3"
                },
                {
                  "assignments": [
                    1671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1671,
                      "mutability": "mutable",
                      "name": "bal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1716,
                      "src": "5611:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5611:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1679,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1676,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5651:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          ],
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5643:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1674,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5643:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1672,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "5625:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13248,
                      "src": "5625:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5625:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5611:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1685,
                            "name": "migrator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1463,
                            "src": "5695:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                              "typeString": "contract IMigratorMaster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                              "typeString": "contract IMigratorMaster"
                            }
                          ],
                          "id": 1684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5687:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1683,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5687:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5687:17:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1687,
                        "name": "bal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1671,
                        "src": "5706:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1680,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "5667:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13411,
                      "src": "5667:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13309_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13309_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5667:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1689,
                  "nodeType": "ExpressionStatement",
                  "src": "5667:43:3"
                },
                {
                  "assignments": [
                    1691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1691,
                      "mutability": "mutable",
                      "name": "newLpToken",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1716,
                      "src": "5720:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13309",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1690,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 13309,
                        "src": "5720:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1696,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1694,
                        "name": "lpToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1666,
                        "src": "5757:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1692,
                        "name": "migrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1463,
                        "src": "5740:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMigratorMaster_$1428",
                          "typeString": "contract IMigratorMaster"
                        }
                      },
                      "id": 1693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "migrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1427,
                      "src": "5740:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$13309_$returns$_t_contract$_IERC20_$13309_$",
                        "typeString": "function (contract IERC20) external returns (contract IERC20)"
                      }
                    },
                    "id": 1695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13309",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5720:45:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1698,
                          "name": "bal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1671,
                          "src": "5783:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1703,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "5819:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Laozi_$2336",
                                    "typeString": "contract Laozi"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Laozi_$2336",
                                    "typeString": "contract Laozi"
                                  }
                                ],
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5811:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1701,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5811:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5811:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1699,
                              "name": "newLpToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "5790:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13309",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13248,
                            "src": "5790:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5790:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5783:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d6967726174653a20626164",
                        "id": 1707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5827:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
                          "typeString": "literal_string \"migrate: bad\""
                        },
                        "value": "migrate: bad"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed1ac0ecd515e3d8f412b4c0ca319587a2238640d669089c98335a92c60abee8",
                          "typeString": "literal_string \"migrate: bad\""
                        }
                      ],
                      "id": 1697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5775:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5775:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1709,
                  "nodeType": "ExpressionStatement",
                  "src": "5775:67:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1710,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1660,
                        "src": "5852:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo storage pointer"
                        }
                      },
                      "id": 1712,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lpToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1443,
                      "src": "5852:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13309",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1713,
                      "name": "newLpToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1691,
                      "src": "5867:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$13309",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "5852:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$13309",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1715,
                  "nodeType": "ExpressionStatement",
                  "src": "5852:25:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "454b0608",
            "id": 1717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1643,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1717,
                  "src": "5419:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5419:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5418:14:3"
            },
            "returnParameters": {
              "id": 1645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5440:0:3"
            },
            "scope": 2336,
            "src": "5402:482:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1764,
              "nodeType": "Block",
              "src": "6038:332:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1726,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1721,
                      "src": "6052:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1727,
                      "name": "bonusEndBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1456,
                      "src": "6059:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6052:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1740,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1738,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1719,
                        "src": "6152:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 1739,
                        "name": "bonusEndBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1456,
                        "src": "6161:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6152:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 1761,
                      "nodeType": "Block",
                      "src": "6228:136:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1757,
                                    "name": "bonusEndBlock",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1456,
                                    "src": "6325:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1755,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1721,
                                    "src": "6317:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1756,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sub",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11836,
                                  "src": "6317:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6317:22:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1752,
                                    "name": "BONUS_MULTIPLIER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1461,
                                    "src": "6278:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1749,
                                        "name": "_from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1719,
                                        "src": "6267:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1747,
                                        "name": "bonusEndBlock",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1456,
                                        "src": "6249:13:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sub",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11836,
                                      "src": "6249:17:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6249:24:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "mul",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11899,
                                  "src": "6249:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1753,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6249:46:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11819,
                              "src": "6249:50:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6249:104:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1725,
                          "id": 1760,
                          "nodeType": "Return",
                          "src": "6242:111:3"
                        }
                      ]
                    },
                    "id": 1762,
                    "nodeType": "IfStatement",
                    "src": "6148:216:3",
                    "trueBody": {
                      "id": 1746,
                      "nodeType": "Block",
                      "src": "6176:46:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1743,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1719,
                                "src": "6205:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1741,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1721,
                                "src": "6197:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11836,
                              "src": "6197:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6197:14:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1725,
                          "id": 1745,
                          "nodeType": "Return",
                          "src": "6190:21:3"
                        }
                      ]
                    }
                  },
                  "id": 1763,
                  "nodeType": "IfStatement",
                  "src": "6048:316:3",
                  "trueBody": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "6074:68:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1734,
                              "name": "BONUS_MULTIPLIER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1461,
                              "src": "6114:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1731,
                                  "name": "_from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1719,
                                  "src": "6103:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1729,
                                  "name": "_to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1721,
                                  "src": "6095:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11836,
                                "src": "6095:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1732,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6095:14:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11899,
                            "src": "6095:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6095:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1725,
                        "id": 1736,
                        "nodeType": "Return",
                        "src": "6088:43:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8dbb1e3a",
            "id": 1765,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1719,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1765,
                  "src": "5980:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5980:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1721,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1765,
                  "src": "5995:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5995:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5979:28:3"
            },
            "returnParameters": {
              "id": 1725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1724,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1765,
                  "src": "6029:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6029:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6028:9:3"
            },
            "scope": 2336,
            "src": "5957:413:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1864,
              "nodeType": "Block",
              "src": "6512:650:3",
              "statements": [
                {
                  "assignments": [
                    1775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1775,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1864,
                      "src": "6522:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1774,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1450,
                        "src": "6522:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1779,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1776,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "6546:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 1778,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1777,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1767,
                      "src": "6555:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6546:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                      "typeString": "struct Laozi.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6522:38:3"
                },
                {
                  "assignments": [
                    1781
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1781,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1864,
                      "src": "6570:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                        "typeString": "struct Laozi.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1780,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1441,
                        "src": "6570:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1787,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1782,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "6594:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct Laozi.UserInfo storage ref))"
                        }
                      },
                      "id": 1784,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1783,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "6603:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6594:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$",
                        "typeString": "mapping(address => struct Laozi.UserInfo storage ref)"
                      }
                    },
                    "id": 1786,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1785,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1769,
                      "src": "6609:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6594:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$1441_storage",
                      "typeString": "struct Laozi.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6570:45:3"
                },
                {
                  "assignments": [
                    1789
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1789,
                      "mutability": "mutable",
                      "name": "accYIPerShare",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1864,
                      "src": "6625:21:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1788,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6625:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1792,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1790,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1775,
                      "src": "6649:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo storage pointer"
                      }
                    },
                    "id": 1791,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "accYIPerShare",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1449,
                    "src": "6649:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6625:42:3"
                },
                {
                  "assignments": [
                    1794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1794,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1864,
                      "src": "6677:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6677:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1803,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1800,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6727:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          ],
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6719:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1798,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6719:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6719:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1795,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1775,
                          "src": "6696:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                            "typeString": "struct Laozi.PoolInfo storage pointer"
                          }
                        },
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1443,
                        "src": "6696:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13248,
                      "src": "6696:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6696:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6677:56:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1804,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6747:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6747:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1806,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1775,
                          "src": "6762:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                            "typeString": "struct Laozi.PoolInfo storage pointer"
                          }
                        },
                        "id": 1807,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1447,
                        "src": "6762:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6747:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 1809,
                        "name": "lpSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1794,
                        "src": "6786:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6798:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6786:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6747:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1850,
                  "nodeType": "IfStatement",
                  "src": "6743:335:3",
                  "trueBody": {
                    "id": 1849,
                    "nodeType": "Block",
                    "src": "6801:277:3",
                    "statements": [
                      {
                        "assignments": [
                          1814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1814,
                            "mutability": "mutable",
                            "name": "multiplier",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1849,
                            "src": "6815:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1813,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6815:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1821,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1816,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1775,
                                "src": "6850:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                  "typeString": "struct Laozi.PoolInfo storage pointer"
                                }
                              },
                              "id": 1817,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lastRewardBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1447,
                              "src": "6850:20:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1818,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6872:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1819,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6872:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1815,
                            "name": "getMultiplier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1765,
                            "src": "6836:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6836:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6815:70:3"
                      },
                      {
                        "assignments": [
                          1823
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1823,
                            "mutability": "mutable",
                            "name": "yiReward",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 1849,
                            "src": "6899:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1822,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6899:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1835,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1833,
                              "name": "totalAllocPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1475,
                              "src": "6970:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1829,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1775,
                                    "src": "6949:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                      "typeString": "struct Laozi.PoolInfo storage pointer"
                                    }
                                  },
                                  "id": 1830,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allocPoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1445,
                                  "src": "6949:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1826,
                                      "name": "yiPerBlock",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1458,
                                      "src": "6933:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1824,
                                      "name": "multiplier",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1814,
                                      "src": "6918:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11899,
                                    "src": "6918:14:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 1827,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6918:26:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11899,
                                "src": "6918:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6918:47:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1832,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11916,
                            "src": "6918:51:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6918:68:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6899:87:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1836,
                            "name": "accYIPerShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1789,
                            "src": "7000:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1844,
                                    "name": "lpSupply",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1794,
                                    "src": "7057:8:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "31653132",
                                        "id": 1841,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7047:4:3",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        },
                                        "value": "1e12"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_1000000000000_by_1",
                                          "typeString": "int_const 1000000000000"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1839,
                                        "name": "yiReward",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1823,
                                        "src": "7034:8:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1840,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "mul",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11899,
                                      "src": "7034:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                                      }
                                    },
                                    "id": 1842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7034:18:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "div",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 11916,
                                  "src": "7034:22:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7034:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1837,
                                "name": "accYIPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1789,
                                "src": "7016:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11819,
                              "src": "7016:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7016:51:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7000:67:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1848,
                        "nodeType": "ExpressionStatement",
                        "src": "7000:67:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1860,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1781,
                          "src": "7139:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                            "typeString": "struct Laozi.UserInfo storage pointer"
                          }
                        },
                        "id": 1861,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1440,
                        "src": "7139:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 1857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7129:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1854,
                                "name": "accYIPerShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1789,
                                "src": "7110:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1851,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1781,
                                  "src": "7094:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                    "typeString": "struct Laozi.UserInfo storage pointer"
                                  }
                                },
                                "id": 1852,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "7094:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11899,
                              "src": "7094:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7094:30:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11916,
                          "src": "7094:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7094:40:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11836,
                      "src": "7094:44:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7094:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1773,
                  "id": 1863,
                  "nodeType": "Return",
                  "src": "7087:68:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f05e6c8c",
            "id": 1865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pendingYI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1767,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "6451:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6451:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1769,
                  "mutability": "mutable",
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "6465:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6465:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6450:29:3"
            },
            "returnParameters": {
              "id": 1773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1772,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1865,
                  "src": "6503:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6503:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6502:9:3"
            },
            "scope": 2336,
            "src": "6432:730:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1889,
              "nodeType": "Block",
              "src": "7276:141:3",
              "statements": [
                {
                  "assignments": [
                    1869
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1869,
                      "mutability": "mutable",
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1889,
                      "src": "7286:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1868,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7286:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1872,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1870,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "7303:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "7303:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7286:32:3"
                },
                {
                  "body": {
                    "id": 1887,
                    "nodeType": "Block",
                    "src": "7371:40:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1884,
                              "name": "pid",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1874,
                              "src": "7396:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1883,
                            "name": "updatePool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2000,
                            "src": "7385:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7385:15:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1886,
                        "nodeType": "ExpressionStatement",
                        "src": "7385:15:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1877,
                      "name": "pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1874,
                      "src": "7350:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1878,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1869,
                      "src": "7356:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7350:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1888,
                  "initializationExpression": {
                    "assignments": [
                      1874
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1874,
                        "mutability": "mutable",
                        "name": "pid",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1888,
                        "src": "7333:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7333:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1876,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7347:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7333:15:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "7364:5:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1880,
                        "name": "pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1874,
                        "src": "7366:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1882,
                    "nodeType": "ExpressionStatement",
                    "src": "7364:5:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "7328:83:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "630b5ba1",
            "id": 1890,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "massUpdatePools",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7266:2:3"
            },
            "returnParameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7276:0:3"
            },
            "scope": 2336,
            "src": "7242:175:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1999,
              "nodeType": "Block",
              "src": "7531:706:3",
              "statements": [
                {
                  "assignments": [
                    1896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1896,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1999,
                      "src": "7541:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1895,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1450,
                        "src": "7541:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1900,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1897,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "7565:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 1899,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1898,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1892,
                      "src": "7574:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7565:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                      "typeString": "struct Laozi.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7541:38:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1901,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7593:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7593:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1903,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "7609:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo storage pointer"
                        }
                      },
                      "id": 1904,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1447,
                      "src": "7609:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7593:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1908,
                  "nodeType": "IfStatement",
                  "src": "7589:73:3",
                  "trueBody": {
                    "id": 1907,
                    "nodeType": "Block",
                    "src": "7631:31:3",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1894,
                        "id": 1906,
                        "nodeType": "Return",
                        "src": "7645:7:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1910,
                      "mutability": "mutable",
                      "name": "lpSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1999,
                      "src": "7671:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1909,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7671:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1919,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1916,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7721:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          ],
                          "id": 1915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7713:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1914,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7713:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7713:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1911,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "7690:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                            "typeString": "struct Laozi.PoolInfo storage pointer"
                          }
                        },
                        "id": 1912,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1443,
                        "src": "7690:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13248,
                      "src": "7690:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7690:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7671:56:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1920,
                      "name": "lpSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1910,
                      "src": "7741:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7753:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7741:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1932,
                  "nodeType": "IfStatement",
                  "src": "7737:99:3",
                  "trueBody": {
                    "id": 1931,
                    "nodeType": "Block",
                    "src": "7756:80:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1923,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1896,
                              "src": "7770:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                "typeString": "struct Laozi.PoolInfo storage pointer"
                              }
                            },
                            "id": 1925,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastRewardBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1447,
                            "src": "7770:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1926,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "7793:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "7793:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7770:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1929,
                        "nodeType": "ExpressionStatement",
                        "src": "7770:35:3"
                      },
                      {
                        "expression": null,
                        "functionReturnParameters": 1894,
                        "id": 1930,
                        "nodeType": "Return",
                        "src": "7819:7:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1934,
                      "mutability": "mutable",
                      "name": "multiplier",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1999,
                      "src": "7845:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7845:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1941,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1936,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1896,
                          "src": "7880:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                            "typeString": "struct Laozi.PoolInfo storage pointer"
                          }
                        },
                        "id": 1937,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastRewardBlock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1447,
                        "src": "7880:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1938,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "7902:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "7902:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1935,
                      "name": "getMultiplier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1765,
                      "src": "7866:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 1940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7866:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7845:70:3"
                },
                {
                  "assignments": [
                    1943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1943,
                      "mutability": "mutable",
                      "name": "yiReward",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1999,
                      "src": "7925:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1942,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7925:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1955,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1953,
                        "name": "totalAllocPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "7996:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1949,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1896,
                              "src": "7975:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                "typeString": "struct Laozi.PoolInfo storage pointer"
                              }
                            },
                            "id": 1950,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allocPoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1445,
                            "src": "7975:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1946,
                                "name": "yiPerBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1458,
                                "src": "7959:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1944,
                                "name": "multiplier",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1934,
                                "src": "7944:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11899,
                              "src": "7944:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7944:26:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11899,
                          "src": "7944:30:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7944:47:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11916,
                      "src": "7944:51:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7944:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7925:87:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1959,
                        "name": "devaddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "8030:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 1962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8052:2:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1960,
                            "name": "yiReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1943,
                            "src": "8039:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11916,
                          "src": "8039:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8039:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1956,
                        "name": "yi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "8022:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YIToken_$4709",
                          "typeString": "contract YIToken"
                        }
                      },
                      "id": 1958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4107,
                      "src": "8022:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8022:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1971,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8082:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          ],
                          "id": 1970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8074:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8074:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 1972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8074:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1973,
                        "name": "yiReward",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1943,
                        "src": "8089:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1966,
                        "name": "yi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "8066:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YIToken_$4709",
                          "typeString": "contract YIToken"
                        }
                      },
                      "id": 1968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4107,
                      "src": "8066:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8066:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1975,
                  "nodeType": "ExpressionStatement",
                  "src": "8066:32:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1976,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "8108:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo storage pointer"
                        }
                      },
                      "id": 1978,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "accYIPerShare",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1449,
                      "src": "8108:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1987,
                              "name": "lpSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1910,
                              "src": "8175:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 1984,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8165:4:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1982,
                                  "name": "yiReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1943,
                                  "src": "8152:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1983,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11899,
                                "src": "8152:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1985,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8152:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11916,
                            "src": "8152:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8152:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1979,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1896,
                            "src": "8129:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                              "typeString": "struct Laozi.PoolInfo storage pointer"
                            }
                          },
                          "id": 1980,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "accYIPerShare",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1449,
                          "src": "8129:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11819,
                        "src": "8129:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8129:56:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8108:77:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "8108:77:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1992,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1896,
                        "src": "8195:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo storage pointer"
                        }
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastRewardBlock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1447,
                      "src": "8195:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1995,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8218:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8218:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8195:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1998,
                  "nodeType": "ExpressionStatement",
                  "src": "8195:35:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "51eb05a6",
            "id": 2000,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePool",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1892,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2000,
                  "src": "7510:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7510:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7509:14:3"
            },
            "returnParameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7531:0:3"
            },
            "scope": 2336,
            "src": "7490:747:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2112,
              "nodeType": "Block",
              "src": "8354:675:3",
              "statements": [
                {
                  "assignments": [
                    2008
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2008,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2112,
                      "src": "8364:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2007,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1450,
                        "src": "8364:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2012,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2009,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "8388:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2011,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2010,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "8397:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8388:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                      "typeString": "struct Laozi.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8364:38:3"
                },
                {
                  "assignments": [
                    2014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2014,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2112,
                      "src": "8412:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                        "typeString": "struct Laozi.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2013,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1441,
                        "src": "8412:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2021,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2015,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "8436:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct Laozi.UserInfo storage ref))"
                        }
                      },
                      "id": 2017,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2016,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "8445:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8436:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$",
                        "typeString": "mapping(address => struct Laozi.UserInfo storage ref)"
                      }
                    },
                    "id": 2020,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2018,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "8451:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8451:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8436:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$1441_storage",
                      "typeString": "struct Laozi.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8412:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2023,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "8483:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2022,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "8472:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8472:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2025,
                  "nodeType": "ExpressionStatement",
                  "src": "8472:16:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2026,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "8502:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo storage pointer"
                        }
                      },
                      "id": 2027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1438,
                      "src": "8502:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8516:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8502:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2058,
                  "nodeType": "IfStatement",
                  "src": "8498:227:3",
                  "trueBody": {
                    "id": 2057,
                    "nodeType": "Block",
                    "src": "8519:206:3",
                    "statements": [
                      {
                        "assignments": [
                          2031
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2031,
                            "mutability": "mutable",
                            "name": "pending",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 2057,
                            "src": "8533:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2030,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8533:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 2045,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2042,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2014,
                                "src": "8601:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                  "typeString": "struct Laozi.UserInfo storage pointer"
                                }
                              },
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardDebt",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1440,
                              "src": "8601:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31653132",
                                  "id": 2039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8591:4:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "value": "1e12"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2035,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2008,
                                        "src": "8567:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                          "typeString": "struct Laozi.PoolInfo storage pointer"
                                        }
                                      },
                                      "id": 2036,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "accYIPerShare",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1449,
                                      "src": "8567:18:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 2032,
                                        "name": "user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2014,
                                        "src": "8551:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                          "typeString": "struct Laozi.UserInfo storage pointer"
                                        }
                                      },
                                      "id": 2033,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "amount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1438,
                                      "src": "8551:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 2034,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "mul",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11899,
                                    "src": "8551:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 2037,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8551:35:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "div",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11916,
                                "src": "8551:39:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 2040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8551:45:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11836,
                            "src": "8551:49:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8551:66:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8533:84:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 2046,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2031,
                            "src": "8634:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8644:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8634:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 2056,
                        "nodeType": "IfStatement",
                        "src": "8631:84:3",
                        "trueBody": {
                          "id": 2055,
                          "nodeType": "Block",
                          "src": "8647:68:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 2050,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8680:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "8680:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2052,
                                    "name": "pending",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2031,
                                    "src": "8692:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2049,
                                  "name": "safeYITransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2317,
                                  "src": "8665:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8665:35:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2054,
                              "nodeType": "ExpressionStatement",
                              "src": "8665:35:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2059,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "8737:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8747:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8737:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2090,
                  "nodeType": "IfStatement",
                  "src": "8734:167:3",
                  "trueBody": {
                    "id": 2089,
                    "nodeType": "Block",
                    "src": "8750:151:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2069,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "8802:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2070,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8802:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2068,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8794:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2067,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8794:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8794:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 2074,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "8823:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Laozi_$2336",
                                    "typeString": "contract Laozi"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Laozi_$2336",
                                    "typeString": "contract Laozi"
                                  }
                                ],
                                "id": 2073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8815:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2072,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8815:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8815:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2076,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2004,
                              "src": "8830:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2062,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2008,
                                "src": "8764:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                  "typeString": "struct Laozi.PoolInfo storage pointer"
                                }
                              },
                              "id": 2065,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1443,
                              "src": "8764:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13309",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13368,
                            "src": "8764:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13309_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13309_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 2077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8764:74:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2078,
                        "nodeType": "ExpressionStatement",
                        "src": "8764:74:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2079,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2014,
                              "src": "8852:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                "typeString": "struct Laozi.UserInfo storage pointer"
                              }
                            },
                            "id": 2081,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1438,
                            "src": "8852:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2085,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2004,
                                "src": "8882:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2082,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2014,
                                  "src": "8866:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                    "typeString": "struct Laozi.UserInfo storage pointer"
                                  }
                                },
                                "id": 2083,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "8866:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11819,
                              "src": "8866:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8866:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8852:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2088,
                        "nodeType": "ExpressionStatement",
                        "src": "8852:38:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2091,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2014,
                        "src": "8910:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo storage pointer"
                        }
                      },
                      "id": 2093,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "8910:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 2101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8968:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2097,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2008,
                                "src": "8944:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                  "typeString": "struct Laozi.PoolInfo storage pointer"
                                }
                              },
                              "id": 2098,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accYIPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1449,
                              "src": "8944:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2094,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2014,
                                "src": "8928:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                  "typeString": "struct Laozi.UserInfo storage pointer"
                                }
                              },
                              "id": 2095,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1438,
                              "src": "8928:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11899,
                            "src": "8928:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8928:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11916,
                        "src": "8928:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8928:45:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8910:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2104,
                  "nodeType": "ExpressionStatement",
                  "src": "8910:63:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2106,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8996:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8996:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2108,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "9008:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2109,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2004,
                        "src": "9014:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2105,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1485,
                      "src": "8988:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8988:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2111,
                  "nodeType": "EmitStatement",
                  "src": "8983:39:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e2bbb158",
            "id": 2113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2002,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2113,
                  "src": "8316:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8316:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2113,
                  "src": "8330:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8330:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8315:31:3"
            },
            "returnParameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8354:0:3"
            },
            "scope": 2336,
            "src": "8299:730:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2223,
              "nodeType": "Block",
              "src": "9129:663:3",
              "statements": [
                {
                  "assignments": [
                    2121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2121,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2223,
                      "src": "9139:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2120,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1450,
                        "src": "9139:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2125,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2122,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "9163:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2124,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2123,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2115,
                      "src": "9172:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9163:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                      "typeString": "struct Laozi.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9139:38:3"
                },
                {
                  "assignments": [
                    2127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2127,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2223,
                      "src": "9187:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                        "typeString": "struct Laozi.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2126,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1441,
                        "src": "9187:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2134,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2128,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "9211:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct Laozi.UserInfo storage ref))"
                        }
                      },
                      "id": 2130,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2129,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "9220:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9211:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$",
                        "typeString": "mapping(address => struct Laozi.UserInfo storage ref)"
                      }
                    },
                    "id": 2133,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2131,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9226:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "9226:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9211:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$1441_storage",
                      "typeString": "struct Laozi.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9187:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2136,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2127,
                            "src": "9255:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                              "typeString": "struct Laozi.UserInfo storage pointer"
                            }
                          },
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1438,
                          "src": "9255:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2138,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "9270:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9255:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "77697468647261773a206e6f7420676f6f64",
                        "id": 2140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9279:20:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        },
                        "value": "withdraw: not good"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
                          "typeString": "literal_string \"withdraw: not good\""
                        }
                      ],
                      "id": 2135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9247:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9247:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2142,
                  "nodeType": "ExpressionStatement",
                  "src": "9247:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2144,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "9321:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2143,
                      "name": "updatePool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2000,
                      "src": "9310:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9310:16:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2146,
                  "nodeType": "ExpressionStatement",
                  "src": "9310:16:3"
                },
                {
                  "assignments": [
                    2148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2148,
                      "mutability": "mutable",
                      "name": "pending",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2223,
                      "src": "9336:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9336:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2162,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2159,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2127,
                          "src": "9404:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                            "typeString": "struct Laozi.UserInfo storage pointer"
                          }
                        },
                        "id": 2160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardDebt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1440,
                        "src": "9404:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31653132",
                            "id": 2156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9394:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "value": "1e12"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2152,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2121,
                                  "src": "9370:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                    "typeString": "struct Laozi.PoolInfo storage pointer"
                                  }
                                },
                                "id": 2153,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "accYIPerShare",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1449,
                                "src": "9370:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2149,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9354:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                    "typeString": "struct Laozi.UserInfo storage pointer"
                                  }
                                },
                                "id": 2150,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "9354:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11899,
                              "src": "9354:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9354:35:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 11916,
                          "src": "9354:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9354:45:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11836,
                      "src": "9354:49:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9354:66:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9336:84:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2163,
                      "name": "pending",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "9433:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9443:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9433:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2173,
                  "nodeType": "IfStatement",
                  "src": "9430:76:3",
                  "trueBody": {
                    "id": 2172,
                    "nodeType": "Block",
                    "src": "9446:60:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2167,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9475:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2168,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "9475:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2169,
                              "name": "pending",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2148,
                              "src": "9487:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2166,
                            "name": "safeYITransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2317,
                            "src": "9460:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9460:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2171,
                        "nodeType": "ExpressionStatement",
                        "src": "9460:35:3"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2174,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2117,
                      "src": "9518:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9528:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9518:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2201,
                  "nodeType": "IfStatement",
                  "src": "9515:148:3",
                  "trueBody": {
                    "id": 2200,
                    "nodeType": "Block",
                    "src": "9531:132:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2177,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2127,
                              "src": "9545:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                "typeString": "struct Laozi.UserInfo storage pointer"
                              }
                            },
                            "id": 2179,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1438,
                            "src": "9545:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2183,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2117,
                                "src": "9575:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2180,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2127,
                                  "src": "9559:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                    "typeString": "struct Laozi.UserInfo storage pointer"
                                  }
                                },
                                "id": 2181,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1438,
                                "src": "9559:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11836,
                              "src": "9559:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9559:24:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9545:38:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2186,
                        "nodeType": "ExpressionStatement",
                        "src": "9545:38:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2194,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9631:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "9631:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 2193,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9623:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2192,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9623:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 2196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9623:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2197,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2117,
                              "src": "9644:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2187,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2121,
                                "src": "9597:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                  "typeString": "struct Laozi.PoolInfo storage pointer"
                                }
                              },
                              "id": 2190,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lpToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1443,
                              "src": "9597:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$13309",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13343,
                            "src": "9597:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13309_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13309_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 2198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9597:55:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2199,
                        "nodeType": "ExpressionStatement",
                        "src": "9597:55:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2202,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2127,
                        "src": "9672:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo storage pointer"
                        }
                      },
                      "id": 2204,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "9672:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31653132",
                          "id": 2212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9730:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          },
                          "value": "1e12"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000_by_1",
                            "typeString": "int_const 1000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2208,
                                "name": "pool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2121,
                                "src": "9706:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                                  "typeString": "struct Laozi.PoolInfo storage pointer"
                                }
                              },
                              "id": 2209,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "accYIPerShare",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1449,
                              "src": "9706:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2205,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2127,
                                "src": "9690:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                                  "typeString": "struct Laozi.UserInfo storage pointer"
                                }
                              },
                              "id": 2206,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1438,
                              "src": "9690:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11899,
                            "src": "9690:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 2210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9690:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11916,
                        "src": "9690:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9690:45:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9672:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2215,
                  "nodeType": "ExpressionStatement",
                  "src": "9672:63:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2217,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9759:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9759:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2219,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "9771:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2220,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "9777:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2216,
                      "name": "Withdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1493,
                      "src": "9750:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9750:35:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2222,
                  "nodeType": "EmitStatement",
                  "src": "9745:40:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "441a3e70",
            "id": 2224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2224,
                  "src": "9091:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9091:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2224,
                  "src": "9105:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9105:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9090:31:3"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9129:0:3"
            },
            "scope": 2336,
            "src": "9073:719:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2278,
              "nodeType": "Block",
              "src": "9908:301:3",
              "statements": [
                {
                  "assignments": [
                    2230
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2230,
                      "mutability": "mutable",
                      "name": "pool",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2278,
                      "src": "9918:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                        "typeString": "struct Laozi.PoolInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2229,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1450,
                        "src": "9918:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                          "typeString": "struct Laozi.PoolInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2234,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 2231,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1466,
                      "src": "9942:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1450_storage_$dyn_storage",
                        "typeString": "struct Laozi.PoolInfo storage ref[] storage ref"
                      }
                    },
                    "id": 2233,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2232,
                      "name": "_pid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2226,
                      "src": "9951:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9942:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$1450_storage",
                      "typeString": "struct Laozi.PoolInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9918:38:3"
                },
                {
                  "assignments": [
                    2236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2236,
                      "mutability": "mutable",
                      "name": "user",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2278,
                      "src": "9966:21:3",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                        "typeString": "struct Laozi.UserInfo"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2235,
                        "name": "UserInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1441,
                        "src": "9966:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2243,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2237,
                        "name": "userInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "9990:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$_$",
                          "typeString": "mapping(uint256 => mapping(address => struct Laozi.UserInfo storage ref))"
                        }
                      },
                      "id": 2239,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2238,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "9999:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9990:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1441_storage_$",
                        "typeString": "mapping(address => struct Laozi.UserInfo storage ref)"
                      }
                    },
                    "id": 2242,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2240,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "10005:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "10005:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9990:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$1441_storage",
                      "typeString": "struct Laozi.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9966:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2251,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10060:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10060:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 2250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10052:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2249,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10052:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10052:19:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2254,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2236,
                          "src": "10073:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                            "typeString": "struct Laozi.UserInfo storage pointer"
                          }
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1438,
                        "src": "10073:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2244,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2230,
                          "src": "10026:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolInfo_$1450_storage_ptr",
                            "typeString": "struct Laozi.PoolInfo storage pointer"
                          }
                        },
                        "id": 2247,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lpToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1443,
                        "src": "10026:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$13309",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13343,
                      "src": "10026:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$13309_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$13309_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10026:59:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2257,
                  "nodeType": "ExpressionStatement",
                  "src": "10026:59:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2259,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10118:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "10118:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2261,
                        "name": "_pid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2226,
                        "src": "10130:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2262,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2236,
                          "src": "10136:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                            "typeString": "struct Laozi.UserInfo storage pointer"
                          }
                        },
                        "id": 2263,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1438,
                        "src": "10136:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2258,
                      "name": "EmergencyWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1501,
                      "src": "10100:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 2264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10100:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2265,
                  "nodeType": "EmitStatement",
                  "src": "10095:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2266,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "10158:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo storage pointer"
                        }
                      },
                      "id": 2268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1438,
                      "src": "10158:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10172:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10158:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2271,
                  "nodeType": "ExpressionStatement",
                  "src": "10158:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2272,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2236,
                        "src": "10183:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$1441_storage_ptr",
                          "typeString": "struct Laozi.UserInfo storage pointer"
                        }
                      },
                      "id": 2274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "rewardDebt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1440,
                      "src": "10183:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10201:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10183:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "10183:19:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "5312ea8e",
            "id": 2279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyWithdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2226,
                  "mutability": "mutable",
                  "name": "_pid",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2279,
                  "src": "9887:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9887:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9886:14:3"
            },
            "returnParameters": {
              "id": 2228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9908:0:3"
            },
            "scope": 2336,
            "src": "9860:349:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2316,
              "nodeType": "Block",
              "src": "10382:194:3",
              "statements": [
                {
                  "assignments": [
                    2287
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2287,
                      "mutability": "mutable",
                      "name": "yiBal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2316,
                      "src": "10392:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2286,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10392:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2295,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2292,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10429:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Laozi_$2336",
                              "typeString": "contract Laozi"
                            }
                          ],
                          "id": 2291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10421:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10421:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10421:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2288,
                        "name": "yi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1452,
                        "src": "10408:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YIToken_$4709",
                          "typeString": "contract YIToken"
                        }
                      },
                      "id": 2289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12345,
                      "src": "10408:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10408:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10392:43:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2296,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2283,
                      "src": "10449:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2297,
                      "name": "yiBal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2287,
                      "src": "10459:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10449:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2314,
                    "nodeType": "Block",
                    "src": "10520:50:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2310,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2281,
                              "src": "10546:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2311,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2283,
                              "src": "10551:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2307,
                              "name": "yi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1452,
                              "src": "10534:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_YIToken_$4709",
                                "typeString": "contract YIToken"
                              }
                            },
                            "id": 2309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12366,
                            "src": "10534:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10534:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2313,
                        "nodeType": "ExpressionStatement",
                        "src": "10534:25:3"
                      }
                    ]
                  },
                  "id": 2315,
                  "nodeType": "IfStatement",
                  "src": "10445:125:3",
                  "trueBody": {
                    "id": 2306,
                    "nodeType": "Block",
                    "src": "10466:48:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2302,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2281,
                              "src": "10492:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2303,
                              "name": "yiBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2287,
                              "src": "10497:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2299,
                              "name": "yi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1452,
                              "src": "10480:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_YIToken_$4709",
                                "typeString": "contract YIToken"
                              }
                            },
                            "id": 2301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12366,
                            "src": "10480:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10480:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2305,
                        "nodeType": "ExpressionStatement",
                        "src": "10480:23:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 2317,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeYITransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2281,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2317,
                  "src": "10343:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2280,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10343:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2283,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2317,
                  "src": "10356:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10356:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10342:30:3"
            },
            "returnParameters": {
              "id": 2285,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10382:0:3"
            },
            "scope": 2336,
            "src": "10319:257:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2334,
              "nodeType": "Block",
              "src": "10667:88:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2323,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10685:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10685:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2325,
                          "name": "devaddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1454,
                          "src": "10699:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10685:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6465763a207775743f",
                        "id": 2327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10708:11:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        },
                        "value": "dev: wut?"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fcc700055b9df5369397ebf1ef5d07935f188b528e5b3ab19095b69aeecc530",
                          "typeString": "literal_string \"dev: wut?\""
                        }
                      ],
                      "id": 2322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10677:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10677:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2329,
                  "nodeType": "ExpressionStatement",
                  "src": "10677:43:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2330,
                      "name": "devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1454,
                      "src": "10730:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2331,
                      "name": "_devaddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2319,
                      "src": "10740:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10730:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2333,
                  "nodeType": "ExpressionStatement",
                  "src": "10730:18:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "8d88a90e",
            "id": 2335,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "dev",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2319,
                  "mutability": "mutable",
                  "name": "_devaddr",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2335,
                  "src": "10642:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10642:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10641:18:3"
            },
            "returnParameters": {
              "id": 2321,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10667:0:3"
            },
            "scope": 2336,
            "src": "10629:126:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2337,
        "src": "1194:9563:3"
      }
    ],
    "src": "0:10758:3"
  },
  "bytecode": "6080604052600060085534801561001557600080fd5b50604051611d4b380380611d4b833981810160405260a081101561003857600080fd5b5080516020820151604083015160608401516080909401519293919290919060006100616100e9565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b039687166001600160a01b03199182161790915560028054959096169416939093179093556004556003556009556100ed565b3390565b611c4f806100fc6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de57806393f1a40b11610097578063de41382011610071578063de413820146103f5578063e2bbb158146103fd578063f05e6c8c14610420578063f2fde38b1461044c5761018e565b806393f1a40b146103a0578063c4391f14146103e5578063d49e77cd146103ed5761018e565b8063715018a61461031b5780637cd07e47146103235780638aa28550146103475780638d88a90e1461034f5780638da5cb5b146103755780638dbb1e3a1461037d5761018e565b8063441a3e701161014b57806351eb05a61161012557806351eb05a6146102ae5780635312ea8e146102cb578063630b5ba1146102e857806364482f79146102f05761018e565b8063441a3e7014610266578063454b06081461028957806348cd4cb1146102a65761018e565b8063081e3eda146101935780631526fe27146101ad57806317caf6f1146101fa5780631aed6553146102025780631eaaa0451461020a57806323cf311814610240575b600080fd5b61019b610472565b60408051918252519081900360200190f35b6101ca600480360360208110156101c357600080fd5b5035610478565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b61019b6104b9565b61019b6104bf565b61023e6004803603606081101561022057600080fd5b508035906001600160a01b03602082013516906040013515156104c5565b005b61023e6004803603602081101561025657600080fd5b50356001600160a01b0316610640565b61023e6004803603604081101561027c57600080fd5b50803590602001356106ba565b61023e6004803603602081101561029f57600080fd5b5035610819565b61019b610a75565b61023e600480360360208110156102c457600080fd5b5035610a7b565b61023e600480360360208110156102e157600080fd5b5035610ca2565b61023e610d3d565b61023e6004803603606081101561030657600080fd5b50803590602081013590604001351515610d60565b61023e610e31565b61032b610ed3565b604080516001600160a01b039092168252519081900360200190f35b61019b610ee2565b61023e6004803603602081101561036557600080fd5b50356001600160a01b0316610ee7565b61032b610f54565b61019b6004803603604081101561039357600080fd5b5080359060200135610f63565b6103cc600480360360408110156103b657600080fd5b50803590602001356001600160a01b0316610fcf565b6040805192835260208301919091528051918290030190f35b61032b610ff3565b61032b611002565b61019b611011565b61023e6004803603604081101561041357600080fd5b5080359060200135611017565b61019b6004803603604081101561043657600080fd5b50803590602001356001600160a01b0316611129565b61023e6004803603602081101561046257600080fd5b50356001600160a01b031661128b565b60065490565b6006818154811061048557fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60085481565b60035481565b6104cd611383565b6000546001600160a01b0390811691161461051d576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b801561052b5761052b610d3d565b6000600954431161053e57600954610540565b435b6008549091506105509085611387565b600855604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260068054600181018255925291517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919096161790945593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40840155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418301555090517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4290910155565b610648611383565b6000546001600160a01b03908116911614610698576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600683815481106106c957fe5b60009182526020808320868452600782526040808520338652909252922080546004909202909201925083111561073c576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b61074584610a7b565b600061077f826001015461077964e8d4a51000610773876003015487600001546113e890919063ffffffff16565b90611441565b90611483565b905080156107915761079133826114c5565b83156107bb5781546107a39085611483565b825582546107bb906001600160a01b03163386611656565b600383015482546107d69164e8d4a5100091610773916113e8565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b6005546001600160a01b031661086d576040805162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b604482015290519081900360640190fd5b60006006828154811061087c57fe5b600091825260208083206004928302018054604080516370a0823160e01b81523095810195909552519195506001600160a01b0316939284926370a0823192602480840193829003018186803b1580156108d557600080fd5b505afa1580156108e9573d6000803e3d6000fd5b505050506040513d60208110156108ff57600080fd5b505160055490915061091e906001600160a01b038481169116836116a8565b6005546040805163ce5494bb60e01b81526001600160a01b0385811660048301529151600093929092169163ce5494bb9160248082019260209290919082900301818787803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506040513d602081101561099a57600080fd5b5051604080516370a0823160e01b815230600482015290519192506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156109e657600080fd5b505afa1580156109fa573d6000803e3d6000fd5b505050506040513d6020811015610a1057600080fd5b50518214610a54576040805162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b604482015290519081900360640190fd5b83546001600160a01b0319166001600160a01b039190911617909255505050565b60095481565b600060068281548110610a8a57fe5b9060005260206000209060040201905080600201544311610aab5750610c9f565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610af557600080fd5b505afa158015610b09573d6000803e3d6000fd5b505050506040513d6020811015610b1f57600080fd5b5051905080610b35575043600290910155610c9f565b6000610b45836002015443610f63565b90506000610b726008546107738660010154610b6c600454876113e890919063ffffffff16565b906113e8565b6001546002549192506001600160a01b03908116916340c10f199116610b9984600a611441565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610bdf57600080fd5b505af1158015610bf3573d6000803e3d6000fd5b5050600154604080516340c10f1960e01b81523060048201526024810186905290516001600160a01b0390921693506340c10f19925060448082019260009290919082900301818387803b158015610c4a57600080fd5b505af1158015610c5e573d6000803e3d6000fd5b50505050610c8c610c818461077364e8d4a51000856113e890919063ffffffff16565b600386015490611387565b6003850155505043600290920191909155505b50565b600060068281548110610cb157fe5b60009182526020808320858452600782526040808520338087529352909320805460049093029093018054909450610cf6926001600160a01b03919091169190611656565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a360008082556001909101555050565b60065460005b81811015610d5c57610d5481610a7b565b600101610d43565b5050565b610d68611383565b6000546001600160a01b03908116911614610db8576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b8015610dc657610dc6610d3d565b610e0382610dfd60068681548110610dda57fe5b90600052602060002090600402016001015460085461148390919063ffffffff16565b90611387565b6008819055508160068481548110610e1757fe5b906000526020600020906004020160010181905550505050565b610e39611383565b6000546001600160a01b03908116911614610e89576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b031681565b600a81565b6002546001600160a01b03163314610f32576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60006003548211610f8457610f7d600a610b6c8486611483565b9050610fc9565b6003548310610f9757610f7d8284611483565b610f7d610faf6003548461148390919063ffffffff16565b610dfd600a610b6c8760035461148390919063ffffffff16565b92915050565b60076020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b6002546001600160a01b031681565b60045481565b60006006838154811061102657fe5b6000918252602080832086845260078252604080852033865290925292206004909102909101915061105784610a7b565b8054156110a057600061108c826001015461077964e8d4a51000610773876003015487600001546113e890919063ffffffff16565b9050801561109e5761109e33826114c5565b505b82156110cc5781546110bd906001600160a01b03163330866117bb565b80546110c99084611387565b81555b600382015481546110e79164e8d4a5100091610773916113e8565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b6000806006848154811061113957fe5b600091825260208083208784526007825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d60208110156111e157600080fd5b50516002850154909150431180156111f857508015155b1561125857600061120d856002015443610f63565b905060006112346008546107738860010154610b6c600454876113e890919063ffffffff16565b905061125361124c846107738464e8d4a510006113e8565b8590611387565b935050505b611280836001015461077964e8d4a510006107738688600001546113e890919063ffffffff16565b979650505050505050565b611293611383565b6000546001600160a01b039081169116146112e3576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b6001600160a01b0381166113285760405162461bcd60e51b8152600401808060200182810382526026815260200180611b536026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000828201838110156113e1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000826113f757506000610fc9565b8282028284828161140457fe5b04146113e15760405162461bcd60e51b8152600401808060200182810382526021815260200180611b796021913960400191505060405180910390fd5b60006113e183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061181b565b60006113e183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506118bd565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561151057600080fd5b505afa158015611524573d6000803e3d6000fd5b505050506040513d602081101561153a57600080fd5b50519050808211156115ce576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561159c57600080fd5b505af11580156115b0573d6000803e3d6000fd5b505050506040513d60208110156115c657600080fd5b506116519050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561162457600080fd5b505af1158015611638573d6000803e3d6000fd5b505050506040513d602081101561164e57600080fd5b50505b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611651908490611917565b80158061172e575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561170057600080fd5b505afa158015611714573d6000803e3d6000fd5b505050506040513d602081101561172a57600080fd5b5051155b6117695760405162461bcd60e51b8152600401808060200182810382526036815260200180611be46036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611651908490611917565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611815908590611917565b50505050565b600081836118a75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561186c578181015183820152602001611854565b50505050905090810190601f1680156118995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816118b357fe5b0495945050505050565b6000818484111561190f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561186c578181015183820152602001611854565b505050900390565b606061196c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119c89092919063ffffffff16565b8051909150156116515780806020019051602081101561198b57600080fd5b50516116515760405162461bcd60e51b815260040180806020018281038252602a815260200180611bba602a913960400191505060405180910390fd5b60606119d784846000856119df565b949350505050565b60606119ea85611b4c565b611a3b576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611a7a5780518252601f199092019160209182019101611a5b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611adc576040519150601f19603f3d011682016040523d82523d6000602084013e611ae1565b606091505b50915091508115611af55791506119d79050565b805115611b055780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561186c578181015183820152602001611854565b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122028eb50bc5a21b7aee64cb074dece58505d4ecf7bedd47c3b26a3ac55acfd7b1b64736f6c634300060c0033",
  "bytecodeSha1": "fcb8d89547f43356375e24a1528b36901ccdbe26",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "Laozi",
  "coverageMap": {
    "branches": {
      "12": {},
      "19": {
        "Ownable.transferOwnership": {
          "93": [
            1237,
            1259,
            true
          ],
          "94": [
            2038,
            2060,
            true
          ]
        }
      },
      "3": {
        "Laozi.add": {
          "72": [
            4316,
            4327,
            false
          ],
          "73": [
            4406,
            4431,
            true
          ]
        },
        "Laozi.deposit": {
          "84": [
            8502,
            8517,
            false
          ],
          "85": [
            8634,
            8645,
            false
          ],
          "86": [
            8737,
            8748,
            false
          ]
        },
        "Laozi.dev": {
          "81": [
            10685,
            10706,
            true
          ]
        },
        "Laozi.getMultiplier": {
          "82": [
            6052,
            6072,
            false
          ],
          "83": [
            6152,
            6174,
            false
          ]
        },
        "Laozi.migrate": {
          "77": [
            5783,
            5825,
            true
          ]
        },
        "Laozi.pendingYI": {
          "87": [
            6747,
            6782,
            false
          ],
          "88": [
            6786,
            6799,
            false
          ]
        },
        "Laozi.safeYITransfer": {
          "89": [
            10449,
            10464,
            false
          ]
        },
        "Laozi.set": {
          "80": [
            4906,
            4917,
            false
          ]
        },
        "Laozi.updatePool": {
          "78": [
            7593,
            7629,
            false
          ],
          "79": [
            7741,
            7754,
            false
          ]
        },
        "Laozi.withdraw": {
          "74": [
            9255,
            9277,
            true
          ],
          "75": [
            9433,
            9444,
            false
          ],
          "76": [
            9518,
            9529,
            false
          ]
        }
      },
      "36": {
        "SafeMath.add": {
          "97": [
            953,
            959,
            true
          ]
        },
        "SafeMath.div": {
          "100": [
            3793,
            3798,
            true
          ]
        },
        "SafeMath.mul": {
          "98": [
            2446,
            2452,
            false
          ],
          "99": [
            2532,
            2542,
            true
          ]
        },
        "SafeMath.sub": {
          "101": [
            1826,
            1832,
            true
          ]
        }
      },
      "44": {
        "SafeERC20._callOptionalReturn": {
          "95": [
            3455,
            3476,
            false
          ],
          "96": [
            3584,
            3614,
            true
          ]
        }
      },
      "46": {
        "Address._functionCallWithValue": {
          "90": [
            5049,
            5067,
            true
          ],
          "91": [
            5263,
            5270,
            false
          ],
          "92": [
            5404,
            5425,
            false
          ]
        }
      }
    },
    "statements": {
      "12": {
        "Context._msgSender": {
          "51": [
            637,
            654
          ]
        }
      },
      "19": {
        "Ownable.owner": {
          "36": [
            1090,
            1103
          ]
        },
        "Ownable.renounceOwnership": {
          "32": [
            1720,
            1765
          ],
          "33": [
            1775,
            1794
          ]
        },
        "Ownable.transferOwnership": {
          "48": [
            2030,
            2103
          ],
          "49": [
            2113,
            2156
          ],
          "50": [
            2166,
            2183
          ]
        }
      },
      "3": {
        "Laozi.add": {
          "1": [
            4343,
            4360
          ],
          "2": [
            4469,
            4519
          ],
          "3": [
            4529,
            4708
          ]
        },
        "Laozi.deposit": {
          "40": [
            8472,
            8488
          ],
          "41": [
            8665,
            8700
          ],
          "42": [
            8764,
            8838
          ],
          "43": [
            8852,
            8890
          ],
          "44": [
            8910,
            8973
          ],
          "45": [
            8983,
            9022
          ]
        },
        "Laozi.dev": {
          "34": [
            10677,
            10720
          ],
          "35": [
            10730,
            10748
          ]
        },
        "Laozi.emergencyWithdraw": {
          "23": [
            10026,
            10085
          ],
          "24": [
            10095,
            10148
          ],
          "25": [
            10158,
            10173
          ],
          "26": [
            10183,
            10202
          ]
        },
        "Laozi.getMultiplier": {
          "37": [
            6088,
            6131
          ],
          "38": [
            6190,
            6211
          ],
          "39": [
            6242,
            6353
          ]
        },
        "Laozi.massUpdatePools": {
          "27": [
            7385,
            7400
          ],
          "28": [
            7364,
            7369
          ]
        },
        "Laozi.migrate": {
          "12": [
            5450,
            5514
          ],
          "13": [
            5667,
            5710
          ],
          "14": [
            5775,
            5842
          ],
          "15": [
            5852,
            5877
          ]
        },
        "Laozi.pendingYI": {
          "46": [
            7000,
            7067
          ],
          "47": [
            7087,
            7155
          ]
        },
        "Laozi.poolLength": {
          "0": [
            4022,
            4044
          ]
        },
        "Laozi.safeYITransfer": {
          "58": [
            10480,
            10503
          ],
          "59": [
            10534,
            10559
          ]
        },
        "Laozi.set": {
          "29": [
            4933,
            4950
          ],
          "30": [
            4970,
            5051
          ],
          "31": [
            5061,
            5100
          ]
        },
        "Laozi.setMigrator": {
          "4": [
            5255,
            5275
          ]
        },
        "Laozi.updatePool": {
          "16": [
            7645,
            7652
          ],
          "17": [
            7770,
            7805
          ],
          "18": [
            7819,
            7826
          ],
          "19": [
            8022,
            8056
          ],
          "20": [
            8066,
            8098
          ],
          "21": [
            8108,
            8185
          ],
          "22": [
            8195,
            8230
          ]
        },
        "Laozi.withdraw": {
          "5": [
            9247,
            9300
          ],
          "6": [
            9310,
            9326
          ],
          "7": [
            9460,
            9495
          ],
          "8": [
            9545,
            9583
          ],
          "9": [
            9597,
            9652
          ],
          "10": [
            9672,
            9735
          ],
          "11": [
            9745,
            9785
          ]
        }
      },
      "36": {
        "SafeMath.add": {
          "52": [
            945,
            991
          ],
          "53": [
            1002,
            1010
          ]
        },
        "SafeMath.div": {
          "56": [
            3145,
            3191
          ],
          "64": [
            3785,
            3813
          ]
        },
        "SafeMath.mul": {
          "54": [
            2468,
            2476
          ],
          "55": [
            2524,
            2580
          ]
        },
        "SafeMath.sub": {
          "57": [
            1365,
            1415
          ],
          "65": [
            1818,
            1847
          ]
        }
      },
      "44": {
        "SafeERC20._callOptionalReturn": {
          "66": [
            3576,
            3661
          ]
        },
        "SafeERC20.safeApprove": {
          "61": [
            1664,
            1814
          ],
          "62": [
            1824,
            1914
          ]
        },
        "SafeERC20.safeTransfer": {
          "60": [
            746,
            832
          ]
        },
        "SafeERC20.safeTransferFrom": {
          "63": [
            945,
            1041
          ]
        }
      },
      "46": {
        "Address._functionCallWithValue": {
          "68": [
            5041,
            5101
          ],
          "69": [
            5286,
            5303
          ],
          "70": [
            5794,
            5814
          ]
        },
        "Address.functionCall": {
          "67": [
            3667,
            3727
          ]
        },
        "Address.isContract": {
          "71": [
            1076,
            1091
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "Ownable",
    "SafeERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061018e5760003560e01c8063715018a6116100de57806393f1a40b11610097578063de41382011610071578063de413820146103f5578063e2bbb158146103fd578063f05e6c8c14610420578063f2fde38b1461044c5761018e565b806393f1a40b146103a0578063c4391f14146103e5578063d49e77cd146103ed5761018e565b8063715018a61461031b5780637cd07e47146103235780638aa28550146103475780638d88a90e1461034f5780638da5cb5b146103755780638dbb1e3a1461037d5761018e565b8063441a3e701161014b57806351eb05a61161012557806351eb05a6146102ae5780635312ea8e146102cb578063630b5ba1146102e857806364482f79146102f05761018e565b8063441a3e7014610266578063454b06081461028957806348cd4cb1146102a65761018e565b8063081e3eda146101935780631526fe27146101ad57806317caf6f1146101fa5780631aed6553146102025780631eaaa0451461020a57806323cf311814610240575b600080fd5b61019b610472565b60408051918252519081900360200190f35b6101ca600480360360208110156101c357600080fd5b5035610478565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b61019b6104b9565b61019b6104bf565b61023e6004803603606081101561022057600080fd5b508035906001600160a01b03602082013516906040013515156104c5565b005b61023e6004803603602081101561025657600080fd5b50356001600160a01b0316610640565b61023e6004803603604081101561027c57600080fd5b50803590602001356106ba565b61023e6004803603602081101561029f57600080fd5b5035610819565b61019b610a75565b61023e600480360360208110156102c457600080fd5b5035610a7b565b61023e600480360360208110156102e157600080fd5b5035610ca2565b61023e610d3d565b61023e6004803603606081101561030657600080fd5b50803590602081013590604001351515610d60565b61023e610e31565b61032b610ed3565b604080516001600160a01b039092168252519081900360200190f35b61019b610ee2565b61023e6004803603602081101561036557600080fd5b50356001600160a01b0316610ee7565b61032b610f54565b61019b6004803603604081101561039357600080fd5b5080359060200135610f63565b6103cc600480360360408110156103b657600080fd5b50803590602001356001600160a01b0316610fcf565b6040805192835260208301919091528051918290030190f35b61032b610ff3565b61032b611002565b61019b611011565b61023e6004803603604081101561041357600080fd5b5080359060200135611017565b61019b6004803603604081101561043657600080fd5b50803590602001356001600160a01b0316611129565b61023e6004803603602081101561046257600080fd5b50356001600160a01b031661128b565b60065490565b6006818154811061048557fe5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b60085481565b60035481565b6104cd611383565b6000546001600160a01b0390811691161461051d576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b801561052b5761052b610d3d565b6000600954431161053e57600954610540565b435b6008549091506105509085611387565b600855604080516080810182526001600160a01b0394851681526020810195865290810191825260006060820181815260068054600181018255925291517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600490920291820180546001600160a01b031916919096161790945593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40840155517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d418301555090517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4290910155565b610648611383565b6000546001600160a01b03908116911614610698576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000600683815481106106c957fe5b60009182526020808320868452600782526040808520338652909252922080546004909202909201925083111561073c576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b61074584610a7b565b600061077f826001015461077964e8d4a51000610773876003015487600001546113e890919063ffffffff16565b90611441565b90611483565b905080156107915761079133826114c5565b83156107bb5781546107a39085611483565b825582546107bb906001600160a01b03163386611656565b600383015482546107d69164e8d4a5100091610773916113e8565b6001830155604080518581529051869133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a35050505050565b6005546001600160a01b031661086d576040805162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b604482015290519081900360640190fd5b60006006828154811061087c57fe5b600091825260208083206004928302018054604080516370a0823160e01b81523095810195909552519195506001600160a01b0316939284926370a0823192602480840193829003018186803b1580156108d557600080fd5b505afa1580156108e9573d6000803e3d6000fd5b505050506040513d60208110156108ff57600080fd5b505160055490915061091e906001600160a01b038481169116836116a8565b6005546040805163ce5494bb60e01b81526001600160a01b0385811660048301529151600093929092169163ce5494bb9160248082019260209290919082900301818787803b15801561097057600080fd5b505af1158015610984573d6000803e3d6000fd5b505050506040513d602081101561099a57600080fd5b5051604080516370a0823160e01b815230600482015290519192506001600160a01b038316916370a0823191602480820192602092909190829003018186803b1580156109e657600080fd5b505afa1580156109fa573d6000803e3d6000fd5b505050506040513d6020811015610a1057600080fd5b50518214610a54576040805162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b604482015290519081900360640190fd5b83546001600160a01b0319166001600160a01b039190911617909255505050565b60095481565b600060068281548110610a8a57fe5b9060005260206000209060040201905080600201544311610aab5750610c9f565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610af557600080fd5b505afa158015610b09573d6000803e3d6000fd5b505050506040513d6020811015610b1f57600080fd5b5051905080610b35575043600290910155610c9f565b6000610b45836002015443610f63565b90506000610b726008546107738660010154610b6c600454876113e890919063ffffffff16565b906113e8565b6001546002549192506001600160a01b03908116916340c10f199116610b9984600a611441565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050600060405180830381600087803b158015610bdf57600080fd5b505af1158015610bf3573d6000803e3d6000fd5b5050600154604080516340c10f1960e01b81523060048201526024810186905290516001600160a01b0390921693506340c10f19925060448082019260009290919082900301818387803b158015610c4a57600080fd5b505af1158015610c5e573d6000803e3d6000fd5b50505050610c8c610c818461077364e8d4a51000856113e890919063ffffffff16565b600386015490611387565b6003850155505043600290920191909155505b50565b600060068281548110610cb157fe5b60009182526020808320858452600782526040808520338087529352909320805460049093029093018054909450610cf6926001600160a01b03919091169190611656565b80546040805191825251849133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a360008082556001909101555050565b60065460005b81811015610d5c57610d5481610a7b565b600101610d43565b5050565b610d68611383565b6000546001600160a01b03908116911614610db8576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b8015610dc657610dc6610d3d565b610e0382610dfd60068681548110610dda57fe5b90600052602060002090600402016001015460085461148390919063ffffffff16565b90611387565b6008819055508160068481548110610e1757fe5b906000526020600020906004020160010181905550505050565b610e39611383565b6000546001600160a01b03908116911614610e89576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6005546001600160a01b031681565b600a81565b6002546001600160a01b03163314610f32576040805162461bcd60e51b81526020600482015260096024820152686465763a207775743f60b81b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b60006003548211610f8457610f7d600a610b6c8486611483565b9050610fc9565b6003548310610f9757610f7d8284611483565b610f7d610faf6003548461148390919063ffffffff16565b610dfd600a610b6c8760035461148390919063ffffffff16565b92915050565b60076020908152600092835260408084209091529082529020805460019091015482565b6001546001600160a01b031681565b6002546001600160a01b031681565b60045481565b60006006838154811061102657fe5b6000918252602080832086845260078252604080852033865290925292206004909102909101915061105784610a7b565b8054156110a057600061108c826001015461077964e8d4a51000610773876003015487600001546113e890919063ffffffff16565b9050801561109e5761109e33826114c5565b505b82156110cc5781546110bd906001600160a01b03163330866117bb565b80546110c99084611387565b81555b600382015481546110e79164e8d4a5100091610773916113e8565b6001820155604080518481529051859133917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a350505050565b6000806006848154811061113957fe5b600091825260208083208784526007825260408085206001600160a01b03898116875290845281862060049586029093016003810154815484516370a0823160e01b81523098810198909852935191985093969395939492909116926370a08231926024808301939192829003018186803b1580156111b757600080fd5b505afa1580156111cb573d6000803e3d6000fd5b505050506040513d60208110156111e157600080fd5b50516002850154909150431180156111f857508015155b1561125857600061120d856002015443610f63565b905060006112346008546107738860010154610b6c600454876113e890919063ffffffff16565b905061125361124c846107738464e8d4a510006113e8565b8590611387565b935050505b611280836001015461077964e8d4a510006107738688600001546113e890919063ffffffff16565b979650505050505050565b611293611383565b6000546001600160a01b039081169116146112e3576040805162461bcd60e51b81526020600482018190526024820152600080516020611b9a833981519152604482015290519081900360640190fd5b6001600160a01b0381166113285760405162461bcd60e51b8152600401808060200182810382526026815260200180611b536026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b6000828201838110156113e1576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6000826113f757506000610fc9565b8282028284828161140457fe5b04146113e15760405162461bcd60e51b8152600401808060200182810382526021815260200180611b796021913960400191505060405180910390fd5b60006113e183836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061181b565b60006113e183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506118bd565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561151057600080fd5b505afa158015611524573d6000803e3d6000fd5b505050506040513d602081101561153a57600080fd5b50519050808211156115ce576001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018590529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561159c57600080fd5b505af11580156115b0573d6000803e3d6000fd5b505050506040513d60208110156115c657600080fd5b506116519050565b6001546040805163a9059cbb60e01b81526001600160a01b038681166004830152602482018690529151919092169163a9059cbb9160448083019260209291908290030181600087803b15801561162457600080fd5b505af1158015611638573d6000803e3d6000fd5b505050506040513d602081101561164e57600080fd5b50505b505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611651908490611917565b80158061172e575060408051636eb1769f60e11b81523060048201526001600160a01b03848116602483015291519185169163dd62ed3e91604480820192602092909190829003018186803b15801561170057600080fd5b505afa158015611714573d6000803e3d6000fd5b505050506040513d602081101561172a57600080fd5b5051155b6117695760405162461bcd60e51b8152600401808060200182810382526036815260200180611be46036913960400191505060405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052611651908490611917565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052611815908590611917565b50505050565b600081836118a75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561186c578181015183820152602001611854565b50505050905090810190601f1680156118995780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816118b357fe5b0495945050505050565b6000818484111561190f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561186c578181015183820152602001611854565b505050900390565b606061196c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119c89092919063ffffffff16565b8051909150156116515780806020019051602081101561198b57600080fd5b50516116515760405162461bcd60e51b815260040180806020018281038252602a815260200180611bba602a913960400191505060405180910390fd5b60606119d784846000856119df565b949350505050565b60606119ea85611b4c565b611a3b576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310611a7a5780518252601f199092019160209182019101611a5b565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611adc576040519150601f19603f3d011682016040523d82523d6000602084013e611ae1565b606091505b50915091508115611af55791506119d79050565b805115611b055780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561186c578181015183820152602001611854565b3b15159056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a264697066735822122028eb50bc5a21b7aee64cb074dece58505d4ecf7bedd47c3b26a3ac55acfd7b1b64736f6c634300060c0033",
  "deployedSourceMap": "1194:9563:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3958:93;;;:::i;:::-;;;;;;;;;;;;;;;;3022:26;;;;;;;;;;;;;;;;-1:-1:-1;3022:26:3;;:::i;:::-;;;;-1:-1:-1;;;;;3022:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3261:34;;;:::i;2662:28::-;;;:::i;4216:499::-;;;;;;;;;;;;;;;;-1:-1:-1;4216:499:3;;;-1:-1:-1;;;;;4216:499:3;;;;;;;;;;;;:::i;:::-;;5180:102;;;;;;;;;;;;;;;;-1:-1:-1;5180:102:3;-1:-1:-1;;;;;5180:102:3;;:::i;9073:719::-;;;;;;;;;;;;;;;;-1:-1:-1;9073:719:3;;;;;;;:::i;5402:482::-;;;;;;;;;;;;;;;;-1:-1:-1;5402:482:3;;:::i;3351:25::-;;;:::i;7490:747::-;;;;;;;;;;;;;;;;-1:-1:-1;7490:747:3;;:::i;9860:349::-;;;;;;;;;;;;;;;;-1:-1:-1;9860:349:3;;:::i;7242:175::-;;;:::i;4809:298::-;;;;;;;;;;;;;;;;-1:-1:-1;4809:298:3;;;;;;;;;;;;;;:::i;1656:145:19:-;;;:::i;2958:31:3:-;;;:::i;:::-;;;;-1:-1:-1;;;;;2958:31:3;;;;;;;;;;;;;;2810:45;;;:::i;10629:126::-;;;;;;;;;;;;;;;;-1:-1:-1;10629:126:3;-1:-1:-1;;;;;10629:126:3;;:::i;1033:77:19:-;;;:::i;5957:413:3:-;;;;;;;;;;;;;;;;-1:-1:-1;5957:413:3;;;;;;;:::i;3102:66::-;;;;;;;;;;;;;;;;-1:-1:-1;3102:66:3;;;;;;-1:-1:-1;;;;;3102:66:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2541:17;;;:::i;2584:22::-;;;:::i;2735:25::-;;;:::i;8299:730::-;;;;;;;;;;;;;;;;-1:-1:-1;8299:730:3;;;;;;;:::i;6432:::-;;;;;;;;;;;;;;;;-1:-1:-1;6432:730:3;;;;;;-1:-1:-1;;;;;6432:730:3;;:::i;1950:240:19:-;;;;;;;;;;;;;;;;-1:-1:-1;1950:240:19;-1:-1:-1;;;;;1950:240:19;;:::i;3958:93:3:-;4029:8;:15;3958:93;:::o;3022:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3022:26:3;;;;-1:-1:-1;3022:26:3;;;:::o;3261:34::-;;;;:::o;2662:28::-;;;;:::o;4216:499::-;1247:12:19;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:19;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:19;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:19;;;;;;;;;;;;;;;4316:11:3::1;4312:59;;;4343:17;:15;:17::i;:::-;4380:23;4421:10;;4406:12;:25;:53;;4449:10;;4406:53;;;4434:12;4406:53;4487:15;::::0;4380:79;;-1:-1:-1;4487:32:3::1;::::0;4507:11;4487:19:::1;:32::i;:::-;4469:15;:50:::0;4543:164:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4543:164:3;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;4543:164:3;;;;;;4529:8:::1;:179:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4529:179:3::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;-1:-1:-1;4529:179:3;;;;;;;4216:499::o;5180:102::-;1247:12:19;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:19;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:19;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:19;;;;;;;;;;;;;;;5255:8:3::1;:20:::0;;-1:-1:-1;;;;;;5255:20:3::1;-1:-1:-1::0;;;;;5255:20:3;;;::::1;::::0;;;::::1;::::0;;5180:102::o;9073:719::-;9139:21;9163:8;9172:4;9163:14;;;;;;;;;;;;;;;;9211;;;:8;:14;;;;;;9226:10;9211:26;;;;;;;9255:11;;9163:14;;;;;;;;-1:-1:-1;9255:22:3;-1:-1:-1;9255:22:3;9247:53;;;;;-1:-1:-1;;;9247:53:3;;;;;;;;;;;;-1:-1:-1;;;9247:53:3;;;;;;;;;;;;;;;9310:16;9321:4;9310:10;:16::i;:::-;9336:15;9354:66;9404:4;:15;;;9354:45;9394:4;9354:35;9370:4;:18;;;9354:4;:11;;;:15;;:35;;;;:::i;:::-;:39;;:45::i;:::-;:49;;:66::i;:::-;9336:84;-1:-1:-1;9433:11:3;;9430:76;;9460:35;9475:10;9487:7;9460:14;:35::i;:::-;9518:11;;9515:148;;9559:11;;:24;;9575:7;9559:15;:24::i;:::-;9545:38;;9597:12;;:55;;-1:-1:-1;;;;;9597:12:3;9631:10;9644:7;9597:25;:55::i;:::-;9706:18;;;;9690:11;;:45;;9730:4;;9690:35;;:15;:35::i;:45::-;9672:15;;;:63;9750:35;;;;;;;;9771:4;;9759:10;;9750:35;;;;;;;;;9073:719;;;;;:::o;5402:482::-;5466:8;;-1:-1:-1;;;;;5466:8:3;5450:64;;;;;-1:-1:-1;;;5450:64:3;;;;;;;;;;;;-1:-1:-1;;;5450:64:3;;;;;;;;;;;;;;;5524:21;5548:8;5557:4;5548:14;;;;;;;;;;;;;;;;;;;;;5589:12;;5625:32;;;-1:-1:-1;;;5625:32:3;;5651:4;5625:32;;;;;;;;5548:14;;-1:-1:-1;;;;;;5589:12:3;;5548:14;5589:12;;5625:17;;:32;;;;;;;;;;5589:12;5625:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5625:32:3;5695:8;;5625:32;;-1:-1:-1;5667:43:3;;-1:-1:-1;;;;;5667:19:3;;;;5695:8;5625:32;5667:19;:43::i;:::-;5740:8;;:25;;;-1:-1:-1;;;5740:25:3;;-1:-1:-1;;;;;5740:25:3;;;;;;;;;5720:17;;5740:8;;;;;:16;;:25;;;;;;;;;;;;;;;5720:17;5740:8;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5740:25:3;5790:35;;;-1:-1:-1;;;5790:35:3;;5819:4;5790:35;;;;;;5740:25;;-1:-1:-1;;;;;;5790:20:3;;;;;:35;;;;;5740:25;;5790:35;;;;;;;;:20;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5790:35:3;5783:42;;5775:67;;;;;-1:-1:-1;;;5775:67:3;;;;;;;;;;;;-1:-1:-1;;;5775:67:3;;;;;;;;;;;;;;;5852:25;;-1:-1:-1;;;;;;5852:25:3;-1:-1:-1;;;;;5852:25:3;;;;;;;;-1:-1:-1;;;5402:482:3:o;3351:25::-;;;;:::o;7490:747::-;7541:21;7565:8;7574:4;7565:14;;;;;;;;;;;;;;;;;;7541:38;;7609:4;:20;;;7593:12;:36;7589:73;;7645:7;;;7589:73;7690:12;;:37;;;-1:-1:-1;;;7690:37:3;;7721:4;7690:37;;;;;;7671:16;;-1:-1:-1;;;;;7690:12:3;;:22;;:37;;;;;;;;;;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7690:37:3;;-1:-1:-1;7741:13:3;7737:99;;-1:-1:-1;7793:12:3;7770:20;;;;:35;7819:7;;7737:99;7845:18;7866:49;7880:4;:20;;;7902:12;7866:13;:49::i;:::-;7845:70;;7925:16;7944:68;7996:15;;7944:47;7975:4;:15;;;7944:26;7959:10;;7944;:14;;:26;;;;:::i;:::-;:30;;:47::i;:68::-;8022:2;;8030:7;;7925:87;;-1:-1:-1;;;;;;8022:2:3;;;;:7;;8030;8039:16;7925:87;8052:2;8039:12;:16::i;:::-;8022:34;;;;;;;;;;;;;-1:-1:-1;;;;;8022:34:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8066:2:3;;:32;;;-1:-1:-1;;;8066:32:3;;8082:4;8066:32;;;;;;;;;;;;-1:-1:-1;;;;;8066:2:3;;;;-1:-1:-1;8066:7:3;;-1:-1:-1;8066:32:3;;;;;:2;;:32;;;;;;;;:2;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8129:56;8152:32;8175:8;8152:18;8165:4;8152:8;:12;;:18;;;;:::i;:32::-;8129:18;;;;;:22;:56::i;:::-;8108:18;;;:77;-1:-1:-1;;8218:12:3;8195:20;;;;:35;;;;-1:-1:-1;7490:747:3;;:::o;9860:349::-;9918:21;9942:8;9951:4;9942:14;;;;;;;;;;;;;;;;9990;;;:8;:14;;;;;;10005:10;9990:26;;;;;;;;10073:11;;9942:14;;;;;;;10026:12;;9942:14;;-1:-1:-1;10026:59:3;;-1:-1:-1;;;;;10026:12:3;;;;;10005:10;10026:25;:59::i;:::-;10136:11;;10100:48;;;;;;;10130:4;;10118:10;;10100:48;;;;;;;;;10172:1;10158:15;;;10183;;;;:19;-1:-1:-1;;9860:349:3:o;7242:175::-;7303:8;:15;7286:14;7328:83;7356:6;7350:3;:12;7328:83;;;7385:15;7396:3;7385:10;:15::i;:::-;7364:5;;7328:83;;;;7242:175;:::o;4809:298::-;1247:12:19;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:19;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:19;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:19;;;;;;;;;;;;;;;4906:11:3::1;4902:59;;;4933:17;:15;:17::i;:::-;4988:63;5039:11;4988:46;5008:8;5017:4;5008:14;;;;;;;;;;;;;;;;;;:25;;;4988:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:63::i;:::-;4970:15;:81;;;;5089:11;5061:8;5070:4;5061:14;;;;;;;;;;;;;;;;;;:25;;:39;;;;4809:298:::0;;;:::o;1656:145:19:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:19;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:19;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:19;;;;;;;;;;;;;;;1762:1:::1;1746:6:::0;;1725:40:::1;::::0;-1:-1:-1;;;;;1746:6:19;;::::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1792:1;1775:19:::0;;-1:-1:-1;;;;;;1775:19:19::1;::::0;;1656:145::o;2958:31:3:-;;;-1:-1:-1;;;;;2958:31:3;;:::o;2810:45::-;2853:2;2810:45;:::o;10629:126::-;10699:7;;-1:-1:-1;;;;;10699:7:3;10685:10;:21;10677:43;;;;;-1:-1:-1;;;10677:43:3;;;;;;;;;;;;-1:-1:-1;;;10677:43:3;;;;;;;;;;;;;;;10730:7;:18;;-1:-1:-1;;;;;;10730:18:3;-1:-1:-1;;;;;10730:18:3;;;;;;;;;;10629:126::o;1033:77:19:-;1071:7;1097:6;-1:-1:-1;;;;;1097:6:19;1033:77;:::o;5957:413:3:-;6029:7;6059:13;;6052:3;:20;6048:316;;6095:36;2853:2;6095:14;:3;6103:5;6095:7;:14::i;:36::-;6088:43;;;;6048:316;6161:13;;6152:5;:22;6148:216;;6197:14;:3;6205:5;6197:7;:14::i;6148:216::-;6249:104;6317:22;6325:13;;6317:3;:7;;:22;;;;:::i;:::-;6249:46;2853:2;6249:24;6267:5;6249:13;;:17;;:24;;;;:::i;6148:216::-;5957:413;;;;:::o;3102:66::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2541:17::-;;;-1:-1:-1;;;;;2541:17:3;;:::o;2584:22::-;;;-1:-1:-1;;;;;2584:22:3;;:::o;2735:25::-;;;;:::o;8299:730::-;8364:21;8388:8;8397:4;8388:14;;;;;;;;;;;;;;;;8436;;;:8;:14;;;;;;8451:10;8436:26;;;;;;;8388:14;;;;;;;;-1:-1:-1;8472:16:3;8445:4;8472:10;:16::i;:::-;8502:11;;:15;8498:227;;8533:15;8551:66;8601:4;:15;;;8551:45;8591:4;8551:35;8567:4;:18;;;8551:4;:11;;;:15;;:35;;;;:::i;:66::-;8533:84;-1:-1:-1;8634:11:3;;8631:84;;8665:35;8680:10;8692:7;8665:14;:35::i;:::-;8498:227;;8737:11;;8734:167;;8764:12;;:74;;-1:-1:-1;;;;;8764:12:3;8802:10;8823:4;8830:7;8764:29;:74::i;:::-;8866:11;;:24;;8882:7;8866:15;:24::i;:::-;8852:38;;8734:167;8944:18;;;;8928:11;;:45;;8968:4;;8928:35;;:15;:35::i;:45::-;8910:15;;;:63;8988:34;;;;;;;;9008:4;;8996:10;;8988:34;;;;;;;;;8299:730;;;;:::o;6432:::-;6503:7;6522:21;6546:8;6555:4;6546:14;;;;;;;;;;;;;;;;6594;;;:8;:14;;;;;;-1:-1:-1;;;;;6594:21:3;;;;;;;;;;;6546:14;;;;;;;6649:18;;;;6696:12;;:37;;-1:-1:-1;;;6696:37:3;;6727:4;6696:37;;;;;;;;;6546:14;;-1:-1:-1;6594:21:3;;6649:18;;6546:14;;6696:12;;;;;:22;;:37;;;;;6546:14;;6696:37;;;;;:12;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6696:37:3;6762:20;;;;6696:37;;-1:-1:-1;6747:12:3;:35;:52;;;;-1:-1:-1;6786:13:3;;;6747:52;6743:335;;;6815:18;6836:49;6850:4;:20;;;6872:12;6836:13;:49::i;:::-;6815:70;;6899:16;6918:68;6970:15;;6918:47;6949:4;:15;;;6918:26;6933:10;;6918;:14;;:26;;;;:::i;:68::-;6899:87;-1:-1:-1;7016:51:3;7034:32;7057:8;7034:18;6899:87;7047:4;7034:12;:18::i;:32::-;7016:13;;:17;:51::i;:::-;7000:67;;6743:335;;;7094:61;7139:4;:15;;;7094:40;7129:4;7094:30;7110:13;7094:4;:11;;;:15;;:30;;;;:::i;:61::-;7087:68;6432:730;-1:-1:-1;;;;;;;6432:730:3:o;1950:240:19:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:19;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:19;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1229:67:19;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:22:19;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:19::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:6;::::0;;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:19;;::::1;::::0;2139:6;::::1;::::0;2118:38:::1;::::0;::::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:19::1;-1:-1:-1::0;;;;;2166:17:19;;;::::1;::::0;;;::::1;::::0;;1950:240::o;557:104:12:-;644:10;557:104;:::o;841:176:36:-;899:7;930:5;;;953:6;;;;945:46;;;;;-1:-1:-1;;;945:46:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:1;841:176;-1:-1:-1;;;841:176:36:o;2147:459::-;2205:7;2446:6;2442:45;;-1:-1:-1;2475:1:36;2468:8;;2442:45;2509:5;;;2513:1;2509;:5;:1;2532:5;;;;;:10;2524:56;;;;-1:-1:-1;;;2524:56:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3068:130;3126:7;3152:39;3156:1;3159;3152:39;;;;;;;;;;;;;;;;;:3;:39::i;1288:134::-;1346:7;1372:43;1376:1;1379;1372:43;;;;;;;;;;;;;;;;;:3;:43::i;10319:257:3:-;10408:2;;:27;;;-1:-1:-1;;;10408:27:3;;10429:4;10408:27;;;;;;10392:13;;-1:-1:-1;;;;;10408:2:3;;:12;;:27;;;;;;;;;;;;;;:2;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10408:27:3;;-1:-1:-1;10449:15:3;;;10445:125;;;10480:2;;:23;;;-1:-1:-1;;;10480:23:3;;-1:-1:-1;;;;;10480:23:3;;;;;;;;;;;;;;;:2;;;;;:11;;:23;;;;;;;;;;;;;;:2;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10445:125:3;;-1:-1:-1;10445:125:3;;10534:2;;:25;;;-1:-1:-1;;;10534:25:3;;-1:-1:-1;;;;;10534:25:3;;;;;;;;;;;;;;;:2;;;;;:11;;:25;;;;;;;;;;;;;;:2;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10445:125:3;10319:257;;;:::o;664:175:44:-;773:58;;;-1:-1:-1;;;;;773:58:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;773:58:44;-1:-1:-1;;;773:58:44;;;746:86;;766:5;;746:19;:86::i;1308:613::-;1673:10;;;1672:62;;-1:-1:-1;1689:39:44;;;-1:-1:-1;;;1689:39:44;;1713:4;1689:39;;;;-1:-1:-1;;;;;1689:39:44;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1689:39:44;:44;1672:62;1664:150;;;;-1:-1:-1;;;1664:150:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1851:62;;;-1:-1:-1;;;;;1851:62:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1851:62:44;-1:-1:-1;;;1851:62:44;;;1824:90;;1844:5;;1824:19;:90::i;845:203::-;972:68;;;-1:-1:-1;;;;;972:68:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;972:68:44;-1:-1:-1;;;972:68:44;;;945:96;;965:5;;945:19;:96::i;:::-;845:203;;;;:::o;3680:272:36:-;3766:7;3800:12;3793:5;3785:28;;;;-1:-1:-1;;;3785:28:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:9;3839:1;3835;:5;;;;;;;3680:272;-1:-1:-1;;;;;3680:272:36:o;1713:187::-;1799:7;1834:12;1826:6;;;;1818:29;;;;-1:-1:-1;;;1818:29:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1869:5:36;;;1713:187::o;2927:751:44:-;3346:23;3372:69;3400:4;3372:69;;;;;;;;;;;;;;;;;3380:5;-1:-1:-1;;;;;3372:27:44;;;:69;;;;;:::i;:::-;3455:17;;3346:95;;-1:-1:-1;3455:21:44;3451:221;;3595:10;3584:30;;;;;;;;;;;;;;;-1:-1:-1;3584:30:44;3576:85;;;;-1:-1:-1;;;3576:85:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3540:194:46;3643:12;3674:53;3697:6;3705:4;3711:1;3714:12;3674:22;:53::i;:::-;3667:60;3540:194;-1:-1:-1;;;;3540:194:46:o;4887:958::-;5017:12;5049:18;5060:6;5049:10;:18::i;:::-;5041:60;;;;;-1:-1:-1;;;5041:60:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;5172:12;5186:23;5213:6;-1:-1:-1;;;;;5213:11:46;5233:8;5244:4;5213:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5213:36:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:78;;;;5263:7;5259:580;;;5293:10;-1:-1:-1;5286:17:46;;-1:-1:-1;5286:17:46;5259:580;5404:17;;:21;5400:429;;5662:10;5656:17;5722:15;5709:10;5705:2;5701:19;5694:44;5611:145;5794:20;;-1:-1:-1;;;5794:20:46;;;;;;;;;;;;;;;;;5801:12;;5794:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:413;1045:20;1083:8;;;685:413::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    1194,
    10757
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x93F1A40B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDE413820 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDE413820 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0xF05E6C8C EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x44C JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0xC4391F14 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xD49E77CD EQ PUSH2 0x3ED JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x7CD07E47 EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x8AA28550 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x8D88A90E EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x8DBB1E3A EQ PUSH2 0x37D JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x2F0 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x454B0608 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x2A6 JUMPI PUSH2 0x18E JUMP JUMPDEST DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x1AED6553 EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x23CF3118 EQ PUSH2 0x240 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19B PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1CA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP4 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x4C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x640 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x819 JUMP JUMPDEST PUSH2 0x19B PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA7B JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xCA2 JUMP JUMPDEST PUSH2 0x23E PUSH2 0xD3D JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x23E PUSH2 0xE31 JUMP JUMPDEST PUSH2 0x32B PUSH2 0xED3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0xEE2 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE7 JUMP JUMPDEST PUSH2 0x32B PUSH2 0xF54 JUMP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x393 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xF63 JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFCF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH2 0xFF3 JUMP JUMPDEST PUSH2 0x32B PUSH2 0x1002 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1011 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1017 JUMP JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x128B JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x485 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4CD PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x51D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x52B JUMPI PUSH2 0x52B PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD NUMBER GT PUSH2 0x53E JUMPI PUSH1 0x9 SLOAD PUSH2 0x540 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0x8 SLOAD SWAP1 SWAP2 POP PUSH2 0x550 SWAP1 DUP6 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP6 DUP7 MSTORE SWAP1 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x0 PUSH1 0x60 DUP3 ADD DUP2 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP4 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP5 ADD SSTORE MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 DUP4 ADD SSTORE POP SWAP1 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D42 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0x648 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x698 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6C9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP4 GT ISZERO PUSH2 0x73C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x745 DUP5 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77F DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x779 PUSH5 0xE8D4A51000 PUSH2 0x773 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x13E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1441 JUMP JUMPDEST SWAP1 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x791 JUMPI PUSH2 0x791 CALLER DUP3 PUSH2 0x14C5 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x7BB JUMPI DUP2 SLOAD PUSH2 0x7A3 SWAP1 DUP6 PUSH2 0x1483 JUMP JUMPDEST DUP3 SSTORE DUP3 SLOAD PUSH2 0x7BB SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP7 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x7D6 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x773 SWAP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x36B4B3B930BA329D1037379036B4B3B930BA37B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x87C JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x4 SWAP3 DUP4 MUL ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE MLOAD SWAP2 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SWAP3 DUP5 SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH2 0x91E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND DUP4 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xCE5494BB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP4 SWAP3 SWAP1 SWAP3 AND SWAP2 PUSH4 0xCE5494BB SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP8 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x984 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x99A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 EQ PUSH2 0xA54 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x1B5A59DC985D194E88189859 PUSH1 0xA2 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA8A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0xAAB JUMPI POP PUSH2 0xC9F JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0xB35 JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB45 DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB72 PUSH1 0x8 SLOAD PUSH2 0x773 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0xB6C PUSH1 0x4 SLOAD DUP8 PUSH2 0x13E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH4 0x40C10F19 SWAP2 AND PUSH2 0xB99 DUP5 PUSH1 0xA PUSH2 0x1441 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP PUSH4 0x40C10F19 SWAP3 POP PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC5E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC8C PUSH2 0xC81 DUP5 PUSH2 0x773 PUSH5 0xE8D4A51000 DUP6 PUSH2 0x13E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP NUMBER PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xCB1 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP4 ADD DUP1 SLOAD SWAP1 SWAP5 POP PUSH2 0xCF6 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH2 0x1656 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD5C JUMPI PUSH2 0xD54 DUP2 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD43 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD68 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xDB8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC6 PUSH2 0xD3D JUMP JUMPDEST PUSH2 0xE03 DUP3 PUSH2 0xDFD PUSH1 0x6 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0xDDA JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x1483 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE17 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xE39 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xE89 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF32 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x6465763A207775743F PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0xF84 JUMPI PUSH2 0xF7D PUSH1 0xA PUSH2 0xB6C DUP5 DUP7 PUSH2 0x1483 JUMP JUMPDEST SWAP1 POP PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP4 LT PUSH2 0xF97 JUMPI PUSH2 0xF7D DUP3 DUP5 PUSH2 0x1483 JUMP JUMPDEST PUSH2 0xF7D PUSH2 0xFAF PUSH1 0x3 SLOAD DUP5 PUSH2 0x1483 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xDFD PUSH1 0xA PUSH2 0xB6C DUP8 PUSH1 0x3 SLOAD PUSH2 0x1483 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1026 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x1057 DUP5 PUSH2 0xA7B JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x10A0 JUMPI PUSH1 0x0 PUSH2 0x108C DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x779 PUSH5 0xE8D4A51000 PUSH2 0x773 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x13E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x109E JUMPI PUSH2 0x109E CALLER DUP3 PUSH2 0x14C5 JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0x10CC JUMPI DUP2 SLOAD PUSH2 0x10BD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP7 PUSH2 0x17BB JUMP JUMPDEST DUP1 SLOAD PUSH2 0x10C9 SWAP1 DUP5 PUSH2 0x1387 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x10E7 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x773 SWAP2 PUSH2 0x13E8 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1139 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP8 MSTORE SWAP1 DUP5 MSTORE DUP2 DUP7 KECCAK256 PUSH1 0x4 SWAP6 DUP7 MUL SWAP1 SWAP4 ADD PUSH1 0x3 DUP2 ADD SLOAD DUP2 SLOAD DUP5 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP9 DUP2 ADD SWAP9 SWAP1 SWAP9 MSTORE SWAP4 MLOAD SWAP2 SWAP9 POP SWAP4 SWAP7 SWAP4 SWAP6 SWAP4 SWAP5 SWAP3 SWAP1 SWAP2 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP4 ADD SWAP4 SWAP2 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP NUMBER GT DUP1 ISZERO PUSH2 0x11F8 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 PUSH2 0x120D DUP6 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1234 PUSH1 0x8 SLOAD PUSH2 0x773 DUP9 PUSH1 0x1 ADD SLOAD PUSH2 0xB6C PUSH1 0x4 SLOAD DUP8 PUSH2 0x13E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1253 PUSH2 0x124C DUP5 PUSH2 0x773 DUP5 PUSH5 0xE8D4A51000 PUSH2 0x13E8 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1387 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x1280 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x779 PUSH5 0xE8D4A51000 PUSH2 0x773 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x13E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1293 PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x12E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1B9A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B53 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x13E1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13F7 JUMPI POP PUSH1 0x0 PUSH2 0xFC9 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x1404 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x13E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B79 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13E1 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x181B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E1 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x18BD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1524 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x153A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15CE JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x159C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x15C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1651 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1638 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x164E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1651 SWAP1 DUP5 SWAP1 PUSH2 0x1917 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x172E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1714 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x1769 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BE4 PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1651 SWAP1 DUP5 SWAP1 PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1815 SWAP1 DUP6 SWAP1 PUSH2 0x1917 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1899 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x18B3 JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x190F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x186C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1854 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x196C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19C8 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1651 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x198B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x1651 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BBA PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x19D7 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x19DF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x19EA DUP6 PUSH2 0x1B4C JUMP JUMPDEST PUSH2 0x1A3B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1A7A JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1ADC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x1AF5 JUMPI SWAP2 POP PUSH2 0x19D7 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1B05 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x186C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1854 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F774F776E61626C653A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F776E6572 MSTORE8 PUSH2 0x6665 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A264697066735822122028EB50 0xBC GAS 0x21 0xB7 0xAE 0xE6 0x4C 0xB0 PUSH21 0xDECE58505D4ECF7BEDD47C3B26A3AC55ACFD7B1B64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E"
    },
    "25": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDE"
    },
    "42": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x93F1A40B"
    },
    "49": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDE413820"
    },
    "60": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "GT",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDE413820"
    },
    "71": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F5"
    },
    "75": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE2BBB158"
    },
    "82": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3FD"
    },
    "86": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF05E6C8C"
    },
    "93": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "97": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "104": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "105": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44C"
    },
    "108": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "109": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E"
    },
    "112": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x93F1A40B"
    },
    "120": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A0"
    },
    "124": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC4391F14"
    },
    "131": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E5"
    },
    "135": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD49E77CD"
    },
    "142": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3ED"
    },
    "146": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E"
    },
    "150": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "158": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x31B"
    },
    "162": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7CD07E47"
    },
    "169": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x323"
    },
    "173": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8AA28550"
    },
    "180": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x347"
    },
    "184": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8D88A90E"
    },
    "191": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34F"
    },
    "195": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "202": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x375"
    },
    "206": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DBB1E3A"
    },
    "213": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "214": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37D"
    },
    "217": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "218": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E"
    },
    "221": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "222": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "223": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "224": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x441A3E70"
    },
    "229": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "GT",
      "path": "3"
    },
    "230": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14B"
    },
    "233": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "234": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "235": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x51EB05A6"
    },
    "240": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "GT",
      "path": "3"
    },
    "241": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x125"
    },
    "244": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "245": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "246": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x51EB05A6"
    },
    "251": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "252": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AE"
    },
    "255": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "257": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5312EA8E"
    },
    "262": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "263": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CB"
    },
    "266": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "267": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "268": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x630B5BA1"
    },
    "273": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "274": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E8"
    },
    "277": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "278": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "279": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x64482F79"
    },
    "284": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "285": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2F0"
    },
    "288": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "289": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E"
    },
    "292": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "293": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "294": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "295": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x441A3E70"
    },
    "300": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "301": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x266"
    },
    "304": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "305": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "306": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x454B0608"
    },
    "311": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "312": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "315": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "316": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "317": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x48CD4CB1"
    },
    "322": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "323": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6"
    },
    "326": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "327": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E"
    },
    "330": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMP",
      "path": "3"
    },
    "331": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "332": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "333": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81E3EDA"
    },
    "338": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "339": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x193"
    },
    "342": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "343": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "344": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1526FE27"
    },
    "349": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "350": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AD"
    },
    "353": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "354": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "355": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x17CAF6F1"
    },
    "360": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "361": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "364": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "365": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "366": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1AED6553"
    },
    "371": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "372": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x202"
    },
    "375": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "376": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "377": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1EAAA045"
    },
    "382": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "383": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20A"
    },
    "386": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "387": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "388": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23CF3118"
    },
    "393": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "EQ",
      "path": "3"
    },
    "394": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240"
    },
    "397": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "398": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "399": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "401": {
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "402": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1194,
        10757
      ],
      "op": "REVERT",
      "path": "3"
    },
    "403": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "404": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "407": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x472"
    },
    "410": {
      "fn": "Laozi.poolLength",
      "jump": "i",
      "offset": [
        3958,
        4051
      ],
      "op": "JUMP",
      "path": "3"
    },
    "411": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "412": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "414": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "DUP1",
      "path": "3"
    },
    "415": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "416": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "417": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "DUP3",
      "path": "3"
    },
    "418": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "419": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "420": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "421": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "DUP2",
      "path": "3"
    },
    "422": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "423": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "SUB",
      "path": "3"
    },
    "424": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "426": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "ADD",
      "path": "3"
    },
    "427": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "428": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "RETURN",
      "path": "3"
    },
    "429": {
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "430": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA"
    },
    "433": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "435": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "436": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "437": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SUB",
      "path": "3"
    },
    "438": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "440": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "441": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "LT",
      "path": "3"
    },
    "442": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "443": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C3"
    },
    "446": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "447": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "449": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "450": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "REVERT",
      "path": "3"
    },
    "451": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "452": {
      "op": "POP"
    },
    "453": {
      "offset": [
        3022,
        3048
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "454": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x478"
    },
    "457": {
      "fn": "Laozi.poolLength",
      "jump": "i",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMP",
      "path": "3"
    },
    "458": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "459": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "461": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "462": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "472": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "473": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "AND",
      "path": "3"
    },
    "474": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP6",
      "path": "3"
    },
    "475": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "476": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "478": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP6",
      "path": "3"
    },
    "479": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "480": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "481": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "482": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "483": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "484": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "485": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "486": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "487": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "488": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "489": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "490": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "491": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "493": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "494": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "495": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "496": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "497": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "498": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "499": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "500": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SUB",
      "path": "3"
    },
    "501": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "503": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "504": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "505": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "RETURN",
      "path": "3"
    },
    "506": {
      "offset": [
        3261,
        3295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "507": {
      "fn": "Laozi.poolLength",
      "offset": [
        3261,
        3295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "510": {
      "fn": "Laozi.poolLength",
      "offset": [
        3261,
        3295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B9"
    },
    "513": {
      "fn": "Laozi.poolLength",
      "jump": "i",
      "offset": [
        3261,
        3295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "514": {
      "offset": [
        2662,
        2690
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "515": {
      "fn": "Laozi.poolLength",
      "offset": [
        2662,
        2690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "518": {
      "fn": "Laozi.poolLength",
      "offset": [
        2662,
        2690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BF"
    },
    "521": {
      "fn": "Laozi.poolLength",
      "jump": "i",
      "offset": [
        2662,
        2690
      ],
      "op": "JUMP",
      "path": "3"
    },
    "522": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "523": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "526": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "528": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "DUP1",
      "path": "3"
    },
    "529": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "530": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "SUB",
      "path": "3"
    },
    "531": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "533": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "DUP2",
      "path": "3"
    },
    "534": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "LT",
      "path": "3"
    },
    "535": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "536": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x220"
    },
    "539": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "540": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "542": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "DUP1",
      "path": "3"
    },
    "543": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "REVERT",
      "path": "3"
    },
    "544": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "DUP1",
      "path": "3"
    },
    "547": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "548": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "555": {
      "op": "SHL"
    },
    "556": {
      "op": "SUB"
    },
    "557": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "559": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "DUP3",
      "path": "3"
    },
    "560": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "ADD",
      "path": "3"
    },
    "561": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "562": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "AND",
      "path": "3"
    },
    "563": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "564": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "566": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "ADD",
      "path": "3"
    },
    "567": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "568": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "569": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "570": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4C5"
    },
    "573": {
      "fn": "Laozi.add",
      "jump": "i",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMP",
      "path": "3"
    },
    "574": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "575": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "STOP",
      "path": "3"
    },
    "576": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "577": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "580": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "582": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "583": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "584": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "SUB",
      "path": "3"
    },
    "585": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "587": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "588": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "LT",
      "path": "3"
    },
    "589": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "590": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x256"
    },
    "593": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "594": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "596": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "597": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "REVERT",
      "path": "3"
    },
    "598": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "607": {
      "op": "SHL"
    },
    "608": {
      "op": "SUB"
    },
    "609": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "AND",
      "path": "3"
    },
    "610": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x640"
    },
    "613": {
      "fn": "Laozi.setMigrator",
      "jump": "i",
      "offset": [
        5180,
        5282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "614": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "615": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "618": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "620": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "621": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "622": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "SUB",
      "path": "3"
    },
    "623": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "625": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "DUP2",
      "path": "3"
    },
    "626": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "LT",
      "path": "3"
    },
    "627": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "628": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27C"
    },
    "631": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "632": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "634": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "635": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "REVERT",
      "path": "3"
    },
    "636": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "637": {
      "op": "POP"
    },
    "638": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "DUP1",
      "path": "3"
    },
    "639": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "640": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "641": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "643": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "ADD",
      "path": "3"
    },
    "644": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "645": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6BA"
    },
    "648": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9073,
        9792
      ],
      "op": "JUMP",
      "path": "3"
    },
    "649": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "650": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "653": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "655": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "DUP1",
      "path": "3"
    },
    "656": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "657": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "SUB",
      "path": "3"
    },
    "658": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "660": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "661": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "LT",
      "path": "3"
    },
    "662": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "663": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x29F"
    },
    "666": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "667": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "669": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "DUP1",
      "path": "3"
    },
    "670": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "REVERT",
      "path": "3"
    },
    "671": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "672": {
      "op": "POP"
    },
    "673": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "674": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x819"
    },
    "677": {
      "fn": "Laozi.migrate",
      "jump": "i",
      "offset": [
        5402,
        5884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "678": {
      "offset": [
        3351,
        3376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "679": {
      "fn": "Laozi.migrate",
      "offset": [
        3351,
        3376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "682": {
      "fn": "Laozi.migrate",
      "offset": [
        3351,
        3376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA75"
    },
    "685": {
      "fn": "Laozi.migrate",
      "jump": "i",
      "offset": [
        3351,
        3376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "686": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "687": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "690": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "692": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "693": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "694": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "SUB",
      "path": "3"
    },
    "695": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "697": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "DUP2",
      "path": "3"
    },
    "698": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "LT",
      "path": "3"
    },
    "699": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "700": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C4"
    },
    "703": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "704": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "706": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "DUP1",
      "path": "3"
    },
    "707": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "REVERT",
      "path": "3"
    },
    "708": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "709": {
      "op": "POP"
    },
    "710": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "711": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "714": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMP",
      "path": "3"
    },
    "715": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "716": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "719": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "721": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "DUP1",
      "path": "3"
    },
    "722": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "723": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "SUB",
      "path": "3"
    },
    "724": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "726": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "DUP2",
      "path": "3"
    },
    "727": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "LT",
      "path": "3"
    },
    "728": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "729": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E1"
    },
    "732": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "733": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "735": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "DUP1",
      "path": "3"
    },
    "736": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "REVERT",
      "path": "3"
    },
    "737": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "738": {
      "op": "POP"
    },
    "739": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "740": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA2"
    },
    "743": {
      "fn": "Laozi.emergencyWithdraw",
      "jump": "i",
      "offset": [
        9860,
        10209
      ],
      "op": "JUMP",
      "path": "3"
    },
    "744": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7242,
        7417
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "745": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7242,
        7417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "748": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7242,
        7417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3D"
    },
    "751": {
      "fn": "Laozi.massUpdatePools",
      "jump": "i",
      "offset": [
        7242,
        7417
      ],
      "op": "JUMP",
      "path": "3"
    },
    "752": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "753": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "756": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "758": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "759": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "760": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "SUB",
      "path": "3"
    },
    "761": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "763": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "764": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "LT",
      "path": "3"
    },
    "765": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "766": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x306"
    },
    "769": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "770": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "772": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "773": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "REVERT",
      "path": "3"
    },
    "774": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "775": {
      "op": "POP"
    },
    "776": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "DUP1",
      "path": "3"
    },
    "777": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "778": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "779": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "781": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "DUP2",
      "path": "3"
    },
    "782": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "ADD",
      "path": "3"
    },
    "783": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "784": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "785": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "787": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "ADD",
      "path": "3"
    },
    "788": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "789": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "790": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "791": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD60"
    },
    "794": {
      "fn": "Laozi.set",
      "jump": "i",
      "offset": [
        4809,
        5107
      ],
      "op": "JUMP",
      "path": "3"
    },
    "795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23E"
    },
    "799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE31"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMP",
      "path": "19"
    },
    "803": {
      "offset": [
        2958,
        2989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B"
    },
    "807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xED3"
    },
    "810": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2958,
        2989
      ],
      "op": "JUMP",
      "path": "3"
    },
    "811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "812": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "814": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "DUP1",
      "path": "3"
    },
    "815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "offset": [
        2958,
        2989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "826": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "AND",
      "path": "3"
    },
    "827": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "DUP3",
      "path": "3"
    },
    "828": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "830": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "831": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "DUP2",
      "path": "3"
    },
    "832": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "833": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "SUB",
      "path": "3"
    },
    "834": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "836": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "ADD",
      "path": "3"
    },
    "837": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "838": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "RETURN",
      "path": "3"
    },
    "839": {
      "offset": [
        2810,
        2855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "840": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2810,
        2855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "843": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2810,
        2855
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEE2"
    },
    "846": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2810,
        2855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "847": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "848": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "851": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "853": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "854": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "855": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "SUB",
      "path": "3"
    },
    "856": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "858": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "DUP2",
      "path": "3"
    },
    "859": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "LT",
      "path": "3"
    },
    "860": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "861": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x365"
    },
    "864": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "865": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "867": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "DUP1",
      "path": "3"
    },
    "868": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "REVERT",
      "path": "3"
    },
    "869": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "870": {
      "op": "POP"
    },
    "871": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "op": "SUB"
    },
    "880": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "AND",
      "path": "3"
    },
    "881": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEE7"
    },
    "884": {
      "fn": "Laozi.dev",
      "jump": "i",
      "offset": [
        10629,
        10755
      ],
      "op": "JUMP",
      "path": "3"
    },
    "885": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "886": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x32B"
    },
    "889": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xF54"
    },
    "892": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMP",
      "path": "19"
    },
    "893": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "894": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "897": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "899": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "900": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "901": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "SUB",
      "path": "3"
    },
    "902": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "904": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "DUP2",
      "path": "3"
    },
    "905": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "LT",
      "path": "3"
    },
    "906": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "907": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x393"
    },
    "910": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "911": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "913": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "914": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "REVERT",
      "path": "3"
    },
    "915": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "916": {
      "op": "POP"
    },
    "917": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "DUP1",
      "path": "3"
    },
    "918": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "919": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "920": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "922": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "ADD",
      "path": "3"
    },
    "923": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "924": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF63"
    },
    "927": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        5957,
        6370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "928": {
      "offset": [
        3102,
        3168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "929": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC"
    },
    "932": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "934": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "935": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "936": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SUB",
      "path": "3"
    },
    "937": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "939": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "940": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "LT",
      "path": "3"
    },
    "941": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "942": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B6"
    },
    "945": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "946": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "948": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "949": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "REVERT",
      "path": "3"
    },
    "950": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "951": {
      "op": "POP"
    },
    "952": {
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "953": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "954": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "955": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "957": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "ADD",
      "path": "3"
    },
    "958": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "offset": [
        3102,
        3168
      ],
      "op": "AND",
      "path": "3"
    },
    "968": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFCF"
    },
    "971": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        3102,
        3168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "972": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "973": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "975": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "976": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "977": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "978": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP4",
      "path": "3"
    },
    "979": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "980": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "982": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP4",
      "path": "3"
    },
    "983": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "ADD",
      "path": "3"
    },
    "984": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "985": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "986": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "987": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "988": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "989": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "990": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "991": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "992": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "993": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SUB",
      "path": "3"
    },
    "994": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "ADD",
      "path": "3"
    },
    "995": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "996": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "RETURN",
      "path": "3"
    },
    "997": {
      "offset": [
        2541,
        2558
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "998": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2541,
        2558
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B"
    },
    "1001": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2541,
        2558
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF3"
    },
    "1004": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        2541,
        2558
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1005": {
      "offset": [
        2584,
        2606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1006": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2584,
        2606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32B"
    },
    "1009": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2584,
        2606
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1002"
    },
    "1012": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        2584,
        2606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1013": {
      "offset": [
        2735,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1014": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2735,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "1017": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2735,
        2760
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1011"
    },
    "1020": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        2735,
        2760
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1021": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1022": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23E"
    },
    "1025": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1027": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1028": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1029": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "SUB",
      "path": "3"
    },
    "1030": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1032": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1033": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "LT",
      "path": "3"
    },
    "1034": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1035": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x413"
    },
    "1038": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1039": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1041": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1042": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1043": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1044": {
      "op": "POP"
    },
    "1045": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1046": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1047": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1048": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1050": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "ADD",
      "path": "3"
    },
    "1051": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1052": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1017"
    },
    "1055": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8299,
        9029
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1056": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1057": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19B"
    },
    "1060": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1062": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1063": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1064": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "SUB",
      "path": "3"
    },
    "1065": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1067": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1068": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "LT",
      "path": "3"
    },
    "1069": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1070": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x436"
    },
    "1073": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1074": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1076": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1077": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1078": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1081": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1082": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1083": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1085": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "ADD",
      "path": "3"
    },
    "1086": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "SUB"
    },
    "1095": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "AND",
      "path": "3"
    },
    "1096": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1129"
    },
    "1099": {
      "fn": "Laozi.pendingYI",
      "jump": "i",
      "offset": [
        6432,
        7162
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1100": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1101": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x23E"
    },
    "1104": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1106": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1107": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "CALLDATASIZE",
      "path": "19"
    },
    "1108": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "SUB",
      "path": "19"
    },
    "1109": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1111": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1112": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "LT",
      "path": "19"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "ISZERO",
      "path": "19"
    },
    "1114": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x462"
    },
    "1117": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1118": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1120": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1121": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1122": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1123": {
      "op": "POP"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "CALLDATALOAD",
      "path": "19"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "op": "SUB"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "AND",
      "path": "19"
    },
    "1134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x128B"
    },
    "1137": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1138": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1139": {
      "fn": "Laozi.poolLength",
      "offset": [
        4029,
        4037
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x6"
    },
    "1141": {
      "fn": "Laozi.poolLength",
      "offset": [
        4029,
        4044
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1142": {
      "fn": "Laozi.poolLength",
      "offset": [
        3958,
        4051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1143": {
      "fn": "Laozi.poolLength",
      "jump": "o",
      "offset": [
        3958,
        4051
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1144": {
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1145": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1147": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1148": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1149": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1150": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1151": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "LT",
      "path": "3"
    },
    "1152": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x485"
    },
    "1155": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1156": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1157": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1158": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1160": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1161": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1162": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1163": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1165": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1166": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1167": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1168": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1170": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1171": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1172": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "MUL",
      "path": "3"
    },
    "1173": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "1174": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1175": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1176": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1178": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1179": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "1180": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1181": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1183": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1184": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "1185": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1186": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1188": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1189": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1190": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "ADD",
      "path": "3"
    },
    "1191": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1198": {
      "op": "SHL"
    },
    "1199": {
      "op": "SUB"
    },
    "1200": {
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1201": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1202": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "AND",
      "path": "3"
    },
    "1203": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1206": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1207": {
      "fn": "Laozi.poolLength",
      "offset": [
        3022,
        3048
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1208": {
      "fn": "Laozi.poolLength",
      "jump": "o",
      "offset": [
        3022,
        3048
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1209": {
      "offset": [
        3261,
        3295
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1210": {
      "fn": "Laozi.poolLength",
      "offset": [
        3261,
        3295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1212": {
      "fn": "Laozi.poolLength",
      "offset": [
        3261,
        3295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1213": {
      "fn": "Laozi.poolLength",
      "offset": [
        3261,
        3295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1214": {
      "fn": "Laozi.poolLength",
      "jump": "o",
      "offset": [
        3261,
        3295
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1215": {
      "offset": [
        2662,
        2690
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1216": {
      "fn": "Laozi.poolLength",
      "offset": [
        2662,
        2690
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1218": {
      "fn": "Laozi.poolLength",
      "offset": [
        2662,
        2690
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1219": {
      "fn": "Laozi.poolLength",
      "offset": [
        2662,
        2690
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1220": {
      "fn": "Laozi.poolLength",
      "jump": "o",
      "offset": [
        2662,
        2690
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1221": {
      "fn": "Laozi.add",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1222": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x4CD"
    },
    "1225": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1383"
    },
    "1228": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1229": {
      "fn": "Laozi.add",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1230": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1232": {
      "fn": "Laozi.add",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "op": "SUB"
    },
    "1241": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1242": {
      "fn": "Laozi.add",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1243": {
      "fn": "Laozi.add",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "19"
    },
    "1244": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1245": {
      "fn": "Laozi.add",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "19"
    },
    "1246": {
      "fn": "Laozi.add",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "19"
    },
    "1247": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x51D"
    },
    "1250": {
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1251": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1253": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1254": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1255": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1261": {
      "op": "SHL"
    },
    "1262": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1263": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1264": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1266": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1268": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1269": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1270": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1271": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1272": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1273": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1275": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1276": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1277": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1280": {
      "op": "DUP1"
    },
    "1281": {
      "op": "MLOAD"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "1287": {
      "op": "DUP4"
    },
    "1288": {
      "op": "CODECOPY"
    },
    "1289": {
      "op": "DUP2"
    },
    "1290": {
      "op": "MLOAD"
    },
    "1291": {
      "op": "SWAP2"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1295": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1296": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1297": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1298": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1299": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1300": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1301": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1302": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1303": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "19"
    },
    "1304": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1306": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1307": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1308": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1309": {
      "fn": "Laozi.add",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1310": {
      "branch": 72,
      "fn": "Laozi.add",
      "offset": [
        4316,
        4327
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1311": {
      "fn": "Laozi.add",
      "offset": [
        4312,
        4371
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1312": {
      "fn": "Laozi.add",
      "offset": [
        4312,
        4371
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x52B"
    },
    "1315": {
      "branch": 72,
      "fn": "Laozi.add",
      "offset": [
        4312,
        4371
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1316": {
      "fn": "Laozi.add",
      "offset": [
        4343,
        4360
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 1,
      "value": "0x52B"
    },
    "1319": {
      "fn": "Laozi.add",
      "offset": [
        4343,
        4358
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3D"
    },
    "1322": {
      "fn": "Laozi.add",
      "jump": "i",
      "offset": [
        4343,
        4360
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1323": {
      "fn": "Laozi.add",
      "offset": [
        4343,
        4360
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1324": {
      "fn": "Laozi.add",
      "offset": [
        4380,
        4403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1326": {
      "fn": "Laozi.add",
      "offset": [
        4421,
        4431
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1328": {
      "fn": "Laozi.add",
      "offset": [
        4421,
        4431
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1329": {
      "fn": "Laozi.add",
      "offset": [
        4406,
        4418
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "1330": {
      "branch": 73,
      "fn": "Laozi.add",
      "offset": [
        4406,
        4431
      ],
      "op": "GT",
      "path": "3"
    },
    "1331": {
      "fn": "Laozi.add",
      "offset": [
        4406,
        4459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x53E"
    },
    "1334": {
      "branch": 73,
      "fn": "Laozi.add",
      "offset": [
        4406,
        4459
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1335": {
      "fn": "Laozi.add",
      "offset": [
        4449,
        4459
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "1337": {
      "fn": "Laozi.add",
      "offset": [
        4449,
        4459
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1338": {
      "fn": "Laozi.add",
      "offset": [
        4406,
        4459
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x540"
    },
    "1341": {
      "fn": "Laozi.add",
      "offset": [
        4406,
        4459
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1342": {
      "fn": "Laozi.add",
      "offset": [
        4406,
        4459
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1343": {
      "fn": "Laozi.add",
      "offset": [
        4434,
        4446
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "1344": {
      "fn": "Laozi.add",
      "offset": [
        4406,
        4459
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1345": {
      "fn": "Laozi.add",
      "offset": [
        4487,
        4502
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x8"
    },
    "1347": {
      "fn": "Laozi.add",
      "offset": [
        4487,
        4502
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1348": {
      "fn": "Laozi.add",
      "offset": [
        4380,
        4459
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1349": {
      "fn": "Laozi.add",
      "offset": [
        4380,
        4459
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1350": {
      "op": "POP"
    },
    "1351": {
      "fn": "Laozi.add",
      "offset": [
        4487,
        4519
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x550"
    },
    "1354": {
      "fn": "Laozi.add",
      "offset": [
        4487,
        4519
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1355": {
      "fn": "Laozi.add",
      "offset": [
        4507,
        4518
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1356": {
      "fn": "Laozi.add",
      "offset": [
        4487,
        4506
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1387"
    },
    "1359": {
      "fn": "Laozi.add",
      "jump": "i",
      "offset": [
        4487,
        4519
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1360": {
      "fn": "Laozi.add",
      "offset": [
        4487,
        4519
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1361": {
      "fn": "Laozi.add",
      "offset": [
        4469,
        4484
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1363": {
      "fn": "Laozi.add",
      "offset": [
        4469,
        4519
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1364": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x40"
    },
    "1366": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1367": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1368": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "1370": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1371": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "ADD",
      "path": "3"
    },
    "1372": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1373": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "op": "SUB"
    },
    "1382": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1383": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1384": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "AND",
      "path": "3"
    },
    "1385": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1386": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1387": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1389": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1390": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "ADD",
      "path": "3"
    },
    "1391": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "1392": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1393": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1394": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1395": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1396": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "ADD",
      "path": "3"
    },
    "1397": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1398": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1399": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1402": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1404": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1405": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "ADD",
      "path": "3"
    },
    "1406": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1407": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1408": {
      "fn": "Laozi.add",
      "offset": [
        4543,
        4707
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1409": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4537
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1411": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1412": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1413": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1415": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1416": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1417": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1418": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1419": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1420": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1421": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1422": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1423": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1456": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1458": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1459": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1460": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "MUL",
      "path": "3"
    },
    "1461": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1462": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1463": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1464": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1465": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "op": "NOT"
    },
    "1475": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "AND",
      "path": "3"
    },
    "1476": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1477": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1478": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1479": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "AND",
      "path": "3"
    },
    "1480": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "OR",
      "path": "3"
    },
    "1481": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1482": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1483": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1484": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1485": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1486": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40"
    },
    "1519": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1520": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1521": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1522": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1523": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41"
    },
    "1556": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1557": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1558": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1561": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1562": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D42"
    },
    "1595": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1596": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1597": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "ADD",
      "path": "3"
    },
    "1598": {
      "fn": "Laozi.add",
      "offset": [
        4529,
        4708
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1599": {
      "fn": "Laozi.add",
      "jump": "o",
      "offset": [
        4216,
        4715
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1600": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5180,
        5282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1601": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x648"
    },
    "1604": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1383"
    },
    "1607": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "19"
    },
    "1608": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1609": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "1611": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1618": {
      "op": "SHL"
    },
    "1619": {
      "op": "SUB"
    },
    "1620": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1621": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1622": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "19"
    },
    "1623": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "1624": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "19"
    },
    "1625": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "19"
    },
    "1626": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x698"
    },
    "1629": {
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "1630": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "1632": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "19"
    },
    "1633": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1634": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1642": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1643": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "1645": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "1647": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1648": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1649": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1650": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1651": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1652": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "1654": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1655": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1656": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1659": {
      "op": "DUP1"
    },
    "1660": {
      "op": "MLOAD"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1663": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "1666": {
      "op": "DUP4"
    },
    "1667": {
      "op": "CODECOPY"
    },
    "1668": {
      "op": "DUP2"
    },
    "1669": {
      "op": "MLOAD"
    },
    "1670": {
      "op": "SWAP2"
    },
    "1671": {
      "op": "MSTORE"
    },
    "1672": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "1674": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "1675": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1676": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "1677": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1678": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "1679": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1680": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "1681": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1682": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "19"
    },
    "1683": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "1685": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "1686": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "1687": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "19"
    },
    "1688": {
      "fn": "Laozi.setMigrator",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "1689": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5263
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x5"
    },
    "1691": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1692": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "op": "SUB"
    },
    "1701": {
      "op": "NOT"
    },
    "1702": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "AND",
      "path": "3"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1709": {
      "op": "SHL"
    },
    "1710": {
      "op": "SUB"
    },
    "1711": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1712": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1713": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1714": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "AND",
      "path": "3"
    },
    "1715": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1716": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1717": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1718": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "OR",
      "path": "3"
    },
    "1719": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1720": {
      "fn": "Laozi.setMigrator",
      "offset": [
        5255,
        5275
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1721": {
      "fn": "Laozi.setMigrator",
      "jump": "o",
      "offset": [
        5180,
        5282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1722": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1723": {
      "fn": "Laozi.withdraw",
      "offset": [
        9139,
        9160
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1725": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9171
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "1727": {
      "fn": "Laozi.withdraw",
      "offset": [
        9172,
        9176
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1728": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1729": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1730": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1731": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "LT",
      "path": "3"
    },
    "1732": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6C9"
    },
    "1735": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1736": {
      "dev": "Index out of range",
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "INVALID",
      "path": "3"
    },
    "1737": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1738": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1740": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1741": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1742": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1743": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1745": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1746": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1747": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1748": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1749": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1750": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1751": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9219
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "1753": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1754": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1755": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1757": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1758": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1759": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9225
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1760": {
      "fn": "Laozi.withdraw",
      "offset": [
        9226,
        9236
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1761": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1762": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1763": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1764": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1765": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1766": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1767": {
      "fn": "Laozi.withdraw",
      "offset": [
        9211,
        9237
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1768": {
      "fn": "Laozi.withdraw",
      "offset": [
        9255,
        9266
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 5
    },
    "1769": {
      "fn": "Laozi.withdraw",
      "offset": [
        9255,
        9266
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1770": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1772": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1773": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1774": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "MUL",
      "path": "3"
    },
    "1775": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1776": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1777": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "ADD",
      "path": "3"
    },
    "1778": {
      "fn": "Laozi.withdraw",
      "offset": [
        9163,
        9177
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1779": {
      "op": "POP"
    },
    "1780": {
      "fn": "Laozi.withdraw",
      "offset": [
        9255,
        9277
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1781": {
      "op": "GT"
    },
    "1782": {
      "branch": 74,
      "fn": "Laozi.withdraw",
      "offset": [
        9255,
        9277
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1783": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73C"
    },
    "1786": {
      "branch": 74,
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1787": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1789": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1790": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1799": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1800": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1802": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1804": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1805": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "ADD",
      "path": "3"
    },
    "1806": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1807": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x12"
    },
    "1809": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1811": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1812": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "ADD",
      "path": "3"
    },
    "1813": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1814": {
      "op": "PUSH18",
      "value": "0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "1835": {
      "op": "SHL"
    },
    "1836": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1838": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1839": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "ADD",
      "path": "3"
    },
    "1840": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1841": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1842": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1843": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1844": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1845": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1846": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "SUB",
      "path": "3"
    },
    "1847": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1849": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "ADD",
      "path": "3"
    },
    "1850": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1851": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1852": {
      "fn": "Laozi.withdraw",
      "offset": [
        9247,
        9300
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1853": {
      "fn": "Laozi.withdraw",
      "offset": [
        9310,
        9326
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 6,
      "value": "0x745"
    },
    "1856": {
      "fn": "Laozi.withdraw",
      "offset": [
        9321,
        9325
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1857": {
      "fn": "Laozi.withdraw",
      "offset": [
        9310,
        9320
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "1860": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9310,
        9326
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1861": {
      "fn": "Laozi.withdraw",
      "offset": [
        9310,
        9326
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1862": {
      "fn": "Laozi.withdraw",
      "offset": [
        9336,
        9351
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1864": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x77F"
    },
    "1867": {
      "fn": "Laozi.withdraw",
      "offset": [
        9404,
        9408
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1868": {
      "fn": "Laozi.withdraw",
      "offset": [
        9404,
        9419
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1870": {
      "fn": "Laozi.withdraw",
      "offset": [
        9404,
        9419
      ],
      "op": "ADD",
      "path": "3"
    },
    "1871": {
      "fn": "Laozi.withdraw",
      "offset": [
        9404,
        9419
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1872": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9399
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x779"
    },
    "1875": {
      "fn": "Laozi.withdraw",
      "offset": [
        9394,
        9398
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "1881": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9389
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "1884": {
      "fn": "Laozi.withdraw",
      "offset": [
        9370,
        9374
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1885": {
      "fn": "Laozi.withdraw",
      "offset": [
        9370,
        9388
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1887": {
      "fn": "Laozi.withdraw",
      "offset": [
        9370,
        9388
      ],
      "op": "ADD",
      "path": "3"
    },
    "1888": {
      "fn": "Laozi.withdraw",
      "offset": [
        9370,
        9388
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1889": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9358
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1890": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9365
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1892": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9365
      ],
      "op": "ADD",
      "path": "3"
    },
    "1893": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9365
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1894": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9369
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "1897": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9369
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1898": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9389
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1899": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9389
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1900": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9389
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1905": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9389
      ],
      "op": "AND",
      "path": "3"
    },
    "1906": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9354,
        9389
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1907": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9389
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1908": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9393
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1909": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9393
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1441"
    },
    "1912": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9354,
        9399
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1913": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9399
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1914": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9403
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1915": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9403
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "1918": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9354,
        9420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1919": {
      "fn": "Laozi.withdraw",
      "offset": [
        9354,
        9420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1920": {
      "fn": "Laozi.withdraw",
      "offset": [
        9336,
        9420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "fn": "Laozi.withdraw",
      "offset": [
        9433,
        9444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1923": {
      "branch": 75,
      "fn": "Laozi.withdraw",
      "offset": [
        9433,
        9444
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1924": {
      "fn": "Laozi.withdraw",
      "offset": [
        9430,
        9506
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x791"
    },
    "1927": {
      "branch": 75,
      "fn": "Laozi.withdraw",
      "offset": [
        9430,
        9506
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1928": {
      "fn": "Laozi.withdraw",
      "offset": [
        9460,
        9495
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0x791"
    },
    "1931": {
      "fn": "Laozi.withdraw",
      "offset": [
        9475,
        9485
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1932": {
      "fn": "Laozi.withdraw",
      "offset": [
        9487,
        9494
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1933": {
      "fn": "Laozi.withdraw",
      "offset": [
        9460,
        9474
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14C5"
    },
    "1936": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9460,
        9495
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1937": {
      "fn": "Laozi.withdraw",
      "offset": [
        9460,
        9495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1938": {
      "fn": "Laozi.withdraw",
      "offset": [
        9518,
        9529
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1939": {
      "branch": 76,
      "fn": "Laozi.withdraw",
      "offset": [
        9518,
        9529
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1940": {
      "fn": "Laozi.withdraw",
      "offset": [
        9515,
        9663
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BB"
    },
    "1943": {
      "branch": 76,
      "fn": "Laozi.withdraw",
      "offset": [
        9515,
        9663
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1944": {
      "fn": "Laozi.withdraw",
      "offset": [
        9559,
        9570
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 8
    },
    "1945": {
      "fn": "Laozi.withdraw",
      "offset": [
        9559,
        9570
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1946": {
      "fn": "Laozi.withdraw",
      "offset": [
        9559,
        9583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A3"
    },
    "1949": {
      "fn": "Laozi.withdraw",
      "offset": [
        9559,
        9583
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1950": {
      "fn": "Laozi.withdraw",
      "offset": [
        9575,
        9582
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1951": {
      "fn": "Laozi.withdraw",
      "offset": [
        9559,
        9574
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "1954": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9559,
        9583
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1955": {
      "fn": "Laozi.withdraw",
      "offset": [
        9559,
        9583
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1956": {
      "fn": "Laozi.withdraw",
      "offset": [
        9545,
        9583
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1957": {
      "fn": "Laozi.withdraw",
      "offset": [
        9545,
        9583
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1958": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9609
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 9
    },
    "1959": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9609
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1960": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7BB"
    },
    "1963": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9652
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9609
      ],
      "op": "AND",
      "path": "3"
    },
    "1973": {
      "fn": "Laozi.withdraw",
      "offset": [
        9631,
        9641
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1974": {
      "fn": "Laozi.withdraw",
      "offset": [
        9644,
        9651
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1975": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9622
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1656"
    },
    "1978": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9597,
        9652
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1979": {
      "fn": "Laozi.withdraw",
      "offset": [
        9597,
        9652
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1980": {
      "fn": "Laozi.withdraw",
      "offset": [
        9706,
        9724
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 10,
      "value": "0x3"
    },
    "1982": {
      "fn": "Laozi.withdraw",
      "offset": [
        9706,
        9724
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1983": {
      "fn": "Laozi.withdraw",
      "offset": [
        9706,
        9724
      ],
      "op": "ADD",
      "path": "3"
    },
    "1984": {
      "fn": "Laozi.withdraw",
      "offset": [
        9706,
        9724
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1985": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9701
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1986": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9701
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1987": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D6"
    },
    "1990": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9735
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1991": {
      "fn": "Laozi.withdraw",
      "offset": [
        9730,
        9734
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "1997": {
      "fn": "Laozi.withdraw",
      "offset": [
        9730,
        9734
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1998": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "2001": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9725
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2002": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9705
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "2005": {
      "fn": "Laozi.withdraw",
      "jump": "i",
      "offset": [
        9690,
        9725
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2006": {
      "fn": "Laozi.withdraw",
      "offset": [
        9690,
        9735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2007": {
      "fn": "Laozi.withdraw",
      "offset": [
        9672,
        9687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2009": {
      "fn": "Laozi.withdraw",
      "offset": [
        9672,
        9687
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2010": {
      "fn": "Laozi.withdraw",
      "offset": [
        9672,
        9687
      ],
      "op": "ADD",
      "path": "3"
    },
    "2011": {
      "fn": "Laozi.withdraw",
      "offset": [
        9672,
        9735
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2012": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 11,
      "value": "0x40"
    },
    "2014": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2015": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2016": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2017": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2018": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2019": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2020": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2021": {
      "fn": "Laozi.withdraw",
      "offset": [
        9771,
        9775
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2022": {
      "fn": "Laozi.withdraw",
      "offset": [
        9771,
        9775
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2023": {
      "fn": "Laozi.withdraw",
      "offset": [
        9759,
        9769
      ],
      "op": "CALLER",
      "path": "3"
    },
    "2024": {
      "fn": "Laozi.withdraw",
      "offset": [
        9759,
        9769
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2025": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
    },
    "2058": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2059": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2060": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2061": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "SUB",
      "path": "3"
    },
    "2062": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2064": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "ADD",
      "path": "3"
    },
    "2065": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2066": {
      "fn": "Laozi.withdraw",
      "offset": [
        9750,
        9785
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2067": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "POP",
      "path": "3"
    },
    "2068": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "POP",
      "path": "3"
    },
    "2069": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "POP",
      "path": "3"
    },
    "2070": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "POP",
      "path": "3"
    },
    "2071": {
      "fn": "Laozi.withdraw",
      "offset": [
        9073,
        9792
      ],
      "op": "POP",
      "path": "3"
    },
    "2072": {
      "fn": "Laozi.withdraw",
      "jump": "o",
      "offset": [
        9073,
        9792
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2073": {
      "fn": "Laozi.migrate",
      "offset": [
        5402,
        5884
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2074": {
      "fn": "Laozi.migrate",
      "offset": [
        5466,
        5474
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 12,
      "value": "0x5"
    },
    "2076": {
      "fn": "Laozi.migrate",
      "offset": [
        5466,
        5474
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2083": {
      "op": "SHL"
    },
    "2084": {
      "op": "SUB"
    },
    "2085": {
      "fn": "Laozi.migrate",
      "offset": [
        5466,
        5474
      ],
      "op": "AND",
      "path": "3"
    },
    "2086": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86D"
    },
    "2089": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2090": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2092": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2093": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2094": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2098": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2100": {
      "op": "SHL"
    },
    "2101": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2102": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2103": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2105": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2107": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2108": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "ADD",
      "path": "3"
    },
    "2109": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2110": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "2112": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2114": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2115": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "ADD",
      "path": "3"
    },
    "2116": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2117": {
      "op": "PUSH20",
      "value": "0x36B4B3B930BA329D1037379036B4B3B930BA37B9"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2143": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2144": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "ADD",
      "path": "3"
    },
    "2145": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2146": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2147": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2148": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2149": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2150": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2151": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "SUB",
      "path": "3"
    },
    "2152": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2154": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "ADD",
      "path": "3"
    },
    "2155": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2156": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2157": {
      "fn": "Laozi.migrate",
      "offset": [
        5450,
        5514
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2158": {
      "fn": "Laozi.migrate",
      "offset": [
        5524,
        5545
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2160": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5556
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2162": {
      "fn": "Laozi.migrate",
      "offset": [
        5557,
        5561
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2163": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2164": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2165": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2166": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "LT",
      "path": "3"
    },
    "2167": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x87C"
    },
    "2170": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2171": {
      "dev": "Index out of range",
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2172": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2173": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2175": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2176": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2177": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2178": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2180": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2181": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2182": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2183": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2185": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2186": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2187": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "MUL",
      "path": "3"
    },
    "2188": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "ADD",
      "path": "3"
    },
    "2189": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2190": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2191": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2193": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2194": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2195": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2202": {
      "op": "SHL"
    },
    "2203": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2204": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2205": {
      "fn": "Laozi.migrate",
      "offset": [
        5651,
        5655
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2206": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2207": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2208": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ADD",
      "path": "3"
    },
    "2209": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2210": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2211": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2212": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2213": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2214": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2215": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2223": {
      "op": "SHL"
    },
    "2224": {
      "op": "SUB"
    },
    "2225": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "AND",
      "path": "3"
    },
    "2226": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2227": {
      "fn": "Laozi.migrate",
      "offset": [
        5548,
        5562
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2228": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2229": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2230": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5642
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2235": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5642
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2236": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2238": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2239": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2240": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ADD",
      "path": "3"
    },
    "2241": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2242": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2243": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2244": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SUB",
      "path": "3"
    },
    "2245": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ADD",
      "path": "3"
    },
    "2246": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2247": {
      "fn": "Laozi.migrate",
      "offset": [
        5589,
        5601
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2248": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2249": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2250": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2251": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2252": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2253": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D5"
    },
    "2256": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2257": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2259": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2260": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2261": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2262": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "POP",
      "path": "3"
    },
    "2263": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "GAS",
      "path": "3"
    },
    "2264": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2265": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2266": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2267": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2268": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E9"
    },
    "2271": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2272": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2273": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2275": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2276": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2277": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2278": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2280": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2281": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2282": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "POP",
      "path": "3"
    },
    "2283": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "POP",
      "path": "3"
    },
    "2284": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "POP",
      "path": "3"
    },
    "2285": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "POP",
      "path": "3"
    },
    "2286": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2288": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2289": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2290": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2292": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2293": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "LT",
      "path": "3"
    },
    "2294": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2295": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FF"
    },
    "2298": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2299": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2301": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2302": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2303": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2304": {
      "op": "POP"
    },
    "2305": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2306": {
      "fn": "Laozi.migrate",
      "offset": [
        5695,
        5703
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 13,
      "value": "0x5"
    },
    "2308": {
      "fn": "Laozi.migrate",
      "offset": [
        5695,
        5703
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2309": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2310": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5710
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x91E"
    },
    "2315": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5710
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2322": {
      "op": "SHL"
    },
    "2323": {
      "op": "SUB"
    },
    "2324": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5686
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2325": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5686
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2326": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5686
      ],
      "op": "AND",
      "path": "3"
    },
    "2327": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5686
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2328": {
      "fn": "Laozi.migrate",
      "offset": [
        5695,
        5703
      ],
      "op": "AND",
      "path": "3"
    },
    "2329": {
      "fn": "Laozi.migrate",
      "offset": [
        5625,
        5657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2330": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5686
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16A8"
    },
    "2333": {
      "fn": "Laozi.migrate",
      "jump": "i",
      "offset": [
        5667,
        5710
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2334": {
      "fn": "Laozi.migrate",
      "offset": [
        5667,
        5710
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2335": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2337": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2338": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2340": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2341": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2342": {
      "op": "PUSH4",
      "value": "0xCE5494BB"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2349": {
      "op": "SHL"
    },
    "2350": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2351": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2356": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2358": {
      "op": "SHL"
    },
    "2359": {
      "op": "SUB"
    },
    "2360": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2361": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2362": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "AND",
      "path": "3"
    },
    "2363": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2365": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2366": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ADD",
      "path": "3"
    },
    "2367": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2368": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2369": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2370": {
      "fn": "Laozi.migrate",
      "offset": [
        5720,
        5737
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2372": {
      "fn": "Laozi.migrate",
      "offset": [
        5720,
        5737
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2373": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2374": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2375": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2376": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "AND",
      "path": "3"
    },
    "2377": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2378": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5756
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCE5494BB"
    },
    "2383": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5756
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2384": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2386": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2387": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2388": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ADD",
      "path": "3"
    },
    "2389": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2390": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2392": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2393": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2394": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2395": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2396": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2397": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2398": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SUB",
      "path": "3"
    },
    "2399": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ADD",
      "path": "3"
    },
    "2400": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2401": {
      "fn": "Laozi.migrate",
      "offset": [
        5720,
        5737
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2402": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5748
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2403": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2404": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2405": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2406": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2407": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2408": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x970"
    },
    "2411": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2412": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2414": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2415": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2416": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2417": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "POP",
      "path": "3"
    },
    "2418": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "GAS",
      "path": "3"
    },
    "2419": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "CALL",
      "path": "3"
    },
    "2420": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2421": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2422": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2423": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x984"
    },
    "2426": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2427": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2428": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2430": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2431": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2432": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2433": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2435": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2436": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2437": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "POP",
      "path": "3"
    },
    "2438": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "POP",
      "path": "3"
    },
    "2439": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "POP",
      "path": "3"
    },
    "2440": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "POP",
      "path": "3"
    },
    "2441": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2443": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2444": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2445": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2447": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2448": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "LT",
      "path": "3"
    },
    "2449": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2450": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x99A"
    },
    "2453": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2454": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2456": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2457": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2458": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2459": {
      "op": "POP"
    },
    "2460": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2461": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x40"
    },
    "2463": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2464": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2465": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2474": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2475": {
      "fn": "Laozi.migrate",
      "offset": [
        5819,
        5823
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2476": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2478": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2479": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ADD",
      "path": "3"
    },
    "2480": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2481": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2482": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2483": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2484": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2485": {
      "op": "POP"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2492": {
      "op": "SHL"
    },
    "2493": {
      "op": "SUB"
    },
    "2494": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2495": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5810
      ],
      "op": "AND",
      "path": "3"
    },
    "2496": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2497": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5810
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2502": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5810
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2503": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2505": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2506": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2507": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ADD",
      "path": "3"
    },
    "2508": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2509": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2511": {
      "fn": "Laozi.migrate",
      "offset": [
        5740,
        5765
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2512": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2513": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2514": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2515": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2516": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2517": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "SUB",
      "path": "3"
    },
    "2518": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ADD",
      "path": "3"
    },
    "2519": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2520": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5810
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2521": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2522": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2523": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2524": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2525": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2526": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E6"
    },
    "2529": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2530": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2532": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2533": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2534": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2535": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "POP",
      "path": "3"
    },
    "2536": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "GAS",
      "path": "3"
    },
    "2537": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2538": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2539": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2540": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2541": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9FA"
    },
    "2544": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2545": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2546": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2548": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2549": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2550": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2551": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2553": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2554": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2555": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "POP",
      "path": "3"
    },
    "2556": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "POP",
      "path": "3"
    },
    "2557": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "POP",
      "path": "3"
    },
    "2558": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "POP",
      "path": "3"
    },
    "2559": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2561": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2562": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2563": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2565": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2566": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "LT",
      "path": "3"
    },
    "2567": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2568": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA10"
    },
    "2571": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2572": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2574": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2575": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2576": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2577": {
      "op": "POP"
    },
    "2578": {
      "fn": "Laozi.migrate",
      "offset": [
        5790,
        5825
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2579": {
      "fn": "Laozi.migrate",
      "offset": [
        5783,
        5825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2580": {
      "branch": 77,
      "fn": "Laozi.migrate",
      "offset": [
        5783,
        5825
      ],
      "op": "EQ",
      "path": "3"
    },
    "2581": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA54"
    },
    "2584": {
      "branch": 77,
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2585": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2587": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2588": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2595": {
      "op": "SHL"
    },
    "2596": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2597": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2598": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2600": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2602": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2603": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "ADD",
      "path": "3"
    },
    "2604": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2605": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xC"
    },
    "2607": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2609": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2610": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "ADD",
      "path": "3"
    },
    "2611": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2612": {
      "op": "PUSH12",
      "value": "0x1B5A59DC985D194E88189859"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0xA2"
    },
    "2627": {
      "op": "SHL"
    },
    "2628": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "2630": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2631": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "ADD",
      "path": "3"
    },
    "2632": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2633": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2634": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2635": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2636": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2637": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2638": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "SUB",
      "path": "3"
    },
    "2639": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "2641": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "ADD",
      "path": "3"
    },
    "2642": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2643": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2644": {
      "fn": "Laozi.migrate",
      "offset": [
        5775,
        5842
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2645": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 15
    },
    "2646": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "op": "SUB"
    },
    "2655": {
      "op": "NOT"
    },
    "2656": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "AND",
      "path": "3"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2663": {
      "op": "SHL"
    },
    "2664": {
      "op": "SUB"
    },
    "2665": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2666": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2667": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2668": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "AND",
      "path": "3"
    },
    "2669": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "OR",
      "path": "3"
    },
    "2670": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2671": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2672": {
      "fn": "Laozi.migrate",
      "offset": [
        5852,
        5877
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2673": {
      "op": "POP"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "POP"
    },
    "2676": {
      "fn": "Laozi.migrate",
      "jump": "o",
      "offset": [
        5402,
        5884
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2677": {
      "offset": [
        3351,
        3376
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2678": {
      "fn": "Laozi.migrate",
      "offset": [
        3351,
        3376
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "2680": {
      "fn": "Laozi.migrate",
      "offset": [
        3351,
        3376
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2681": {
      "fn": "Laozi.migrate",
      "offset": [
        3351,
        3376
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2682": {
      "fn": "Laozi.migrate",
      "jump": "o",
      "offset": [
        3351,
        3376
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2683": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2684": {
      "fn": "Laozi.updatePool",
      "offset": [
        7541,
        7562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2686": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7573
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "2688": {
      "fn": "Laozi.updatePool",
      "offset": [
        7574,
        7578
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2689": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2690": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2691": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2692": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "LT",
      "path": "3"
    },
    "2693": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA8A"
    },
    "2696": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2697": {
      "dev": "Index out of range",
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "INVALID",
      "path": "3"
    },
    "2698": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2699": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2700": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2702": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2703": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2705": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2707": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2708": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2709": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2711": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "MUL",
      "path": "3"
    },
    "2712": {
      "fn": "Laozi.updatePool",
      "offset": [
        7565,
        7579
      ],
      "op": "ADD",
      "path": "3"
    },
    "2713": {
      "fn": "Laozi.updatePool",
      "offset": [
        7541,
        7579
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2714": {
      "fn": "Laozi.updatePool",
      "offset": [
        7541,
        7579
      ],
      "op": "POP",
      "path": "3"
    },
    "2715": {
      "fn": "Laozi.updatePool",
      "offset": [
        7609,
        7613
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2716": {
      "fn": "Laozi.updatePool",
      "offset": [
        7609,
        7629
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2718": {
      "fn": "Laozi.updatePool",
      "offset": [
        7609,
        7629
      ],
      "op": "ADD",
      "path": "3"
    },
    "2719": {
      "fn": "Laozi.updatePool",
      "offset": [
        7609,
        7629
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2720": {
      "fn": "Laozi.updatePool",
      "offset": [
        7593,
        7605
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "2721": {
      "branch": 78,
      "fn": "Laozi.updatePool",
      "offset": [
        7593,
        7629
      ],
      "op": "GT",
      "path": "3"
    },
    "2722": {
      "fn": "Laozi.updatePool",
      "offset": [
        7589,
        7662
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAAB"
    },
    "2725": {
      "branch": 78,
      "fn": "Laozi.updatePool",
      "offset": [
        7589,
        7662
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2726": {
      "fn": "Laozi.updatePool",
      "offset": [
        7645,
        7652
      ],
      "op": "POP",
      "path": "3",
      "statement": 16
    },
    "2727": {
      "fn": "Laozi.updatePool",
      "offset": [
        7645,
        7652
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC9F"
    },
    "2730": {
      "fn": "Laozi.updatePool",
      "offset": [
        7645,
        7652
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2731": {
      "fn": "Laozi.updatePool",
      "offset": [
        7589,
        7662
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2732": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7702
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2733": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7702
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2734": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2736": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2737": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2738": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2745": {
      "op": "SHL"
    },
    "2746": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2747": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2748": {
      "fn": "Laozi.updatePool",
      "offset": [
        7721,
        7725
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "2749": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2751": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2752": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ADD",
      "path": "3"
    },
    "2753": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2754": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2755": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2756": {
      "fn": "Laozi.updatePool",
      "offset": [
        7671,
        7687
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2758": {
      "fn": "Laozi.updatePool",
      "offset": [
        7671,
        7687
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "op": "SUB"
    },
    "2767": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7702
      ],
      "op": "AND",
      "path": "3"
    },
    "2768": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7702
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2769": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7712
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "2774": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7712
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2775": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "2777": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2778": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2779": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ADD",
      "path": "3"
    },
    "2780": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2781": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2783": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2784": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2785": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2786": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2787": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2788": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SUB",
      "path": "3"
    },
    "2789": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ADD",
      "path": "3"
    },
    "2790": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2791": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7702
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2792": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2793": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "2794": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2795": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2796": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2797": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAF5"
    },
    "2800": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2801": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2803": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2804": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2805": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2806": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "2807": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "GAS",
      "path": "3"
    },
    "2808": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2809": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2810": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2811": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2812": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB09"
    },
    "2815": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2816": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2817": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2819": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2820": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2821": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2822": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2824": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2825": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2826": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "2827": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "2828": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "2829": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "POP",
      "path": "3"
    },
    "2830": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2832": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2833": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2834": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2836": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2837": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "LT",
      "path": "3"
    },
    "2838": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2839": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1F"
    },
    "2842": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2843": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2845": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2846": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2847": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2848": {
      "op": "POP"
    },
    "2849": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2850": {
      "fn": "Laozi.updatePool",
      "offset": [
        7690,
        7727
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2851": {
      "op": "POP"
    },
    "2852": {
      "branch": 79,
      "fn": "Laozi.updatePool",
      "offset": [
        7741,
        7754
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2853": {
      "fn": "Laozi.updatePool",
      "offset": [
        7737,
        7836
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB35"
    },
    "2856": {
      "branch": 79,
      "fn": "Laozi.updatePool",
      "offset": [
        7737,
        7836
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2857": {
      "op": "POP"
    },
    "2858": {
      "fn": "Laozi.updatePool",
      "offset": [
        7793,
        7805
      ],
      "op": "NUMBER",
      "path": "3",
      "statement": 17
    },
    "2859": {
      "fn": "Laozi.updatePool",
      "offset": [
        7770,
        7790
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2861": {
      "fn": "Laozi.updatePool",
      "offset": [
        7770,
        7790
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2862": {
      "fn": "Laozi.updatePool",
      "offset": [
        7770,
        7790
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2863": {
      "fn": "Laozi.updatePool",
      "offset": [
        7770,
        7790
      ],
      "op": "ADD",
      "path": "3"
    },
    "2864": {
      "fn": "Laozi.updatePool",
      "offset": [
        7770,
        7805
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2865": {
      "fn": "Laozi.updatePool",
      "offset": [
        7819,
        7826
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0xC9F"
    },
    "2868": {
      "fn": "Laozi.updatePool",
      "offset": [
        7819,
        7826
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2869": {
      "fn": "Laozi.updatePool",
      "offset": [
        7737,
        7836
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2870": {
      "fn": "Laozi.updatePool",
      "offset": [
        7845,
        7863
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2872": {
      "fn": "Laozi.updatePool",
      "offset": [
        7866,
        7915
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB45"
    },
    "2875": {
      "fn": "Laozi.updatePool",
      "offset": [
        7880,
        7884
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2876": {
      "fn": "Laozi.updatePool",
      "offset": [
        7880,
        7900
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2878": {
      "fn": "Laozi.updatePool",
      "offset": [
        7880,
        7900
      ],
      "op": "ADD",
      "path": "3"
    },
    "2879": {
      "fn": "Laozi.updatePool",
      "offset": [
        7880,
        7900
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2880": {
      "fn": "Laozi.updatePool",
      "offset": [
        7902,
        7914
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "2881": {
      "fn": "Laozi.updatePool",
      "offset": [
        7866,
        7879
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF63"
    },
    "2884": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        7866,
        7915
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2885": {
      "fn": "Laozi.updatePool",
      "offset": [
        7866,
        7915
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2886": {
      "fn": "Laozi.updatePool",
      "offset": [
        7845,
        7915
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2887": {
      "fn": "Laozi.updatePool",
      "offset": [
        7845,
        7915
      ],
      "op": "POP",
      "path": "3"
    },
    "2888": {
      "fn": "Laozi.updatePool",
      "offset": [
        7925,
        7941
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2890": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        8012
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB72"
    },
    "2893": {
      "fn": "Laozi.updatePool",
      "offset": [
        7996,
        8011
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "2895": {
      "fn": "Laozi.updatePool",
      "offset": [
        7996,
        8011
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2896": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7991
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "2899": {
      "fn": "Laozi.updatePool",
      "offset": [
        7975,
        7979
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2900": {
      "fn": "Laozi.updatePool",
      "offset": [
        7975,
        7990
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2902": {
      "fn": "Laozi.updatePool",
      "offset": [
        7975,
        7990
      ],
      "op": "ADD",
      "path": "3"
    },
    "2903": {
      "fn": "Laozi.updatePool",
      "offset": [
        7975,
        7990
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2904": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7970
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6C"
    },
    "2907": {
      "fn": "Laozi.updatePool",
      "offset": [
        7959,
        7969
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2909": {
      "fn": "Laozi.updatePool",
      "offset": [
        7959,
        7969
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2910": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7954
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2911": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7958
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "2914": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2915": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7970
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2916": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7970
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2917": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7970
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2922": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7970
      ],
      "op": "AND",
      "path": "3"
    },
    "2923": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        7944,
        7970
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2924": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7970
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2925": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2926": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        7974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "2929": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        7944,
        7991
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2930": {
      "fn": "Laozi.updatePool",
      "offset": [
        7944,
        8012
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2931": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8024
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 19,
      "value": "0x1"
    },
    "2933": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8024
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2934": {
      "fn": "Laozi.updatePool",
      "offset": [
        8030,
        8037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2936": {
      "fn": "Laozi.updatePool",
      "offset": [
        8030,
        8037
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2937": {
      "fn": "Laozi.updatePool",
      "offset": [
        7925,
        8012
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2938": {
      "fn": "Laozi.updatePool",
      "offset": [
        7925,
        8012
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2939": {
      "op": "POP"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2946": {
      "op": "SHL"
    },
    "2947": {
      "op": "SUB"
    },
    "2948": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8024
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2949": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8024
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2950": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8024
      ],
      "op": "AND",
      "path": "3"
    },
    "2951": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8024
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2952": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8029
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x40C10F19"
    },
    "2957": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8029
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2958": {
      "fn": "Laozi.updatePool",
      "offset": [
        8030,
        8037
      ],
      "op": "AND",
      "path": "3"
    },
    "2959": {
      "fn": "Laozi.updatePool",
      "offset": [
        8039,
        8055
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB99"
    },
    "2962": {
      "fn": "Laozi.updatePool",
      "offset": [
        7925,
        8012
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2963": {
      "fn": "Laozi.updatePool",
      "offset": [
        8052,
        8054
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2965": {
      "fn": "Laozi.updatePool",
      "offset": [
        8039,
        8051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1441"
    },
    "2968": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        8039,
        8055
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2969": {
      "fn": "Laozi.updatePool",
      "offset": [
        8039,
        8055
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2970": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2972": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2973": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2974": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "2979": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "AND",
      "path": "3"
    },
    "2980": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "2982": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "SHL",
      "path": "3"
    },
    "2983": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2984": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2985": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2987": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ADD",
      "path": "3"
    },
    "2988": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2989": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2996": {
      "op": "SHL"
    },
    "2997": {
      "op": "SUB"
    },
    "2998": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "AND",
      "path": "3"
    },
    "2999": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3000": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3001": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3003": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3004": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3005": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3006": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3007": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3009": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ADD",
      "path": "3"
    },
    "3010": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3011": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "POP",
      "path": "3"
    },
    "3012": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "POP",
      "path": "3"
    },
    "3013": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "POP",
      "path": "3"
    },
    "3014": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3016": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3018": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3019": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3020": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3021": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "SUB",
      "path": "3"
    },
    "3022": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3023": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3025": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3026": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3027": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3028": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3029": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3030": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3031": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBDF"
    },
    "3034": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3035": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3037": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3038": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3039": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3040": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "POP",
      "path": "3"
    },
    "3041": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "GAS",
      "path": "3"
    },
    "3042": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "CALL",
      "path": "3"
    },
    "3043": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3044": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3045": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3046": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF3"
    },
    "3049": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3050": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3051": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3053": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3054": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3055": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3056": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3058": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3059": {
      "fn": "Laozi.updatePool",
      "offset": [
        8022,
        8056
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3060": {
      "op": "POP"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 20,
      "value": "0x1"
    },
    "3064": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3065": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3067": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3068": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3069": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3076": {
      "op": "SHL"
    },
    "3077": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3078": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3079": {
      "fn": "Laozi.updatePool",
      "offset": [
        8082,
        8086
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "3080": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3082": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3083": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ADD",
      "path": "3"
    },
    "3084": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3085": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3087": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3088": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ADD",
      "path": "3"
    },
    "3089": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3090": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3091": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3092": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3093": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3100": {
      "op": "SHL"
    },
    "3101": {
      "op": "SUB"
    },
    "3102": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3103": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3104": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "AND",
      "path": "3"
    },
    "3105": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3106": {
      "op": "POP"
    },
    "3107": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8073
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x40C10F19"
    },
    "3112": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8073
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3113": {
      "op": "POP"
    },
    "3114": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3116": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3117": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3118": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ADD",
      "path": "3"
    },
    "3119": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3120": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3122": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3123": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3124": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3125": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3126": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3127": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3128": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "SUB",
      "path": "3"
    },
    "3129": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ADD",
      "path": "3"
    },
    "3130": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3131": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3132": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8068
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3133": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3134": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3135": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3136": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3137": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3138": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4A"
    },
    "3141": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3142": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3144": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3145": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3146": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3147": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "POP",
      "path": "3"
    },
    "3148": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "GAS",
      "path": "3"
    },
    "3149": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "CALL",
      "path": "3"
    },
    "3150": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3151": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3152": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3153": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC5E"
    },
    "3156": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3157": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3158": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3160": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3161": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3162": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3163": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3165": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3166": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3167": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "POP",
      "path": "3"
    },
    "3168": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "POP",
      "path": "3"
    },
    "3169": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "POP",
      "path": "3"
    },
    "3170": {
      "fn": "Laozi.updatePool",
      "offset": [
        8066,
        8098
      ],
      "op": "POP",
      "path": "3"
    },
    "3171": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8185
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0xC8C"
    },
    "3174": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8184
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC81"
    },
    "3177": {
      "fn": "Laozi.updatePool",
      "offset": [
        8175,
        8183
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3178": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8170
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "3181": {
      "fn": "Laozi.updatePool",
      "offset": [
        8165,
        8169
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "3187": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8160
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3188": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8164
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "3191": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8164
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3192": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8170
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3193": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8170
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3194": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8170
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3199": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8170
      ],
      "op": "AND",
      "path": "3"
    },
    "3200": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        8152,
        8170
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3201": {
      "fn": "Laozi.updatePool",
      "offset": [
        8152,
        8184
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3202": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8147
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3204": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8147
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3205": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8147
      ],
      "op": "ADD",
      "path": "3"
    },
    "3206": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8147
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3207": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8147
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3208": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8151
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1387"
    },
    "3211": {
      "fn": "Laozi.updatePool",
      "jump": "i",
      "offset": [
        8129,
        8185
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3212": {
      "fn": "Laozi.updatePool",
      "offset": [
        8129,
        8185
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3213": {
      "fn": "Laozi.updatePool",
      "offset": [
        8108,
        8126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3215": {
      "fn": "Laozi.updatePool",
      "offset": [
        8108,
        8126
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3216": {
      "fn": "Laozi.updatePool",
      "offset": [
        8108,
        8126
      ],
      "op": "ADD",
      "path": "3"
    },
    "3217": {
      "fn": "Laozi.updatePool",
      "offset": [
        8108,
        8185
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3218": {
      "op": "POP"
    },
    "3219": {
      "op": "POP"
    },
    "3220": {
      "fn": "Laozi.updatePool",
      "offset": [
        8218,
        8230
      ],
      "op": "NUMBER",
      "path": "3",
      "statement": 22
    },
    "3221": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8215
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "3223": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8215
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3224": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8215
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3225": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8215
      ],
      "op": "ADD",
      "path": "3"
    },
    "3226": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8230
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3227": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8230
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3228": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8230
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3229": {
      "fn": "Laozi.updatePool",
      "offset": [
        8195,
        8230
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3230": {
      "op": "POP"
    },
    "3231": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3232": {
      "fn": "Laozi.updatePool",
      "offset": [
        7490,
        8237
      ],
      "op": "POP",
      "path": "3"
    },
    "3233": {
      "fn": "Laozi.updatePool",
      "jump": "o",
      "offset": [
        7490,
        8237
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3234": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9860,
        10209
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3235": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9918,
        9939
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3237": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "3239": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9951,
        9955
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3240": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3241": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3242": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3243": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "LT",
      "path": "3"
    },
    "3244": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB1"
    },
    "3247": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3248": {
      "dev": "Index out of range",
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3249": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3250": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3252": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3253": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3254": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3255": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3257": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3258": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3259": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3260": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3261": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3262": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3263": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        9998
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "3265": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3266": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3267": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3269": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3270": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3271": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10004
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3272": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10005,
        10015
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3273": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3274": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3275": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3276": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3277": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3278": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3279": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3280": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9990,
        10016
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3281": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10073,
        10084
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 23
    },
    "3282": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10073,
        10084
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3283": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3285": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3286": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3287": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "MUL",
      "path": "3"
    },
    "3288": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3289": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3290": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "ADD",
      "path": "3"
    },
    "3291": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3292": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3293": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3294": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        9942,
        9956
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3295": {
      "op": "POP"
    },
    "3296": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10085
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF6"
    },
    "3299": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10085
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3309": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3310": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3311": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "AND",
      "path": "3"
    },
    "3312": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10038
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3313": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10005,
        10015
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3314": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10051
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1656"
    },
    "3317": {
      "fn": "Laozi.emergencyWithdraw",
      "jump": "i",
      "offset": [
        10026,
        10085
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3318": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10026,
        10085
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3319": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10136,
        10147
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 24
    },
    "3320": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10136,
        10147
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3321": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3323": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3324": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3325": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3326": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3327": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3328": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3329": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10130,
        10134
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3330": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10130,
        10134
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3331": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10118,
        10128
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3332": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10118,
        10128
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3333": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
    },
    "3366": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3367": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3368": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3369": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "SUB",
      "path": "3"
    },
    "3370": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3372": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "ADD",
      "path": "3"
    },
    "3373": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3374": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10100,
        10148
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3375": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10172,
        10173
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x0"
    },
    "3377": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10158,
        10173
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3378": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10158,
        10173
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3379": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10158,
        10173
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3380": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10183,
        10198
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 26,
      "value": "0x1"
    },
    "3382": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10183,
        10198
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3383": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10183,
        10198
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3384": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10183,
        10198
      ],
      "op": "ADD",
      "path": "3"
    },
    "3385": {
      "fn": "Laozi.emergencyWithdraw",
      "offset": [
        10183,
        10202
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3386": {
      "op": "POP"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "Laozi.emergencyWithdraw",
      "jump": "o",
      "offset": [
        9860,
        10209
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3389": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7242,
        7417
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3390": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7303,
        7311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "3392": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7303,
        7318
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3393": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7286,
        7300
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3395": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3396": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7356,
        7362
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3397": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7350,
        7353
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3398": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7350,
        7362
      ],
      "op": "LT",
      "path": "3"
    },
    "3399": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3400": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD5C"
    },
    "3403": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3404": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7385,
        7400
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 27,
      "value": "0xD54"
    },
    "3407": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7396,
        7399
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3408": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7385,
        7395
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "3411": {
      "fn": "Laozi.massUpdatePools",
      "jump": "i",
      "offset": [
        7385,
        7400
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3412": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7385,
        7400
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3413": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7364,
        7369
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 28,
      "value": "0x1"
    },
    "3415": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7364,
        7369
      ],
      "op": "ADD",
      "path": "3"
    },
    "3416": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD43"
    },
    "3419": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3420": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3421": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7328,
        7411
      ],
      "op": "POP",
      "path": "3"
    },
    "3422": {
      "fn": "Laozi.massUpdatePools",
      "offset": [
        7242,
        7417
      ],
      "op": "POP",
      "path": "3"
    },
    "3423": {
      "fn": "Laozi.massUpdatePools",
      "jump": "o",
      "offset": [
        7242,
        7417
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3424": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3425": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xD68"
    },
    "3428": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1383"
    },
    "3431": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3432": {
      "fn": "Laozi.set",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3433": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3435": {
      "fn": "Laozi.set",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "op": "SUB"
    },
    "3444": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3445": {
      "fn": "Laozi.set",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3446": {
      "fn": "Laozi.set",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "19"
    },
    "3447": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3448": {
      "fn": "Laozi.set",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "19"
    },
    "3449": {
      "fn": "Laozi.set",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "19"
    },
    "3450": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xDB8"
    },
    "3453": {
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3454": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3456": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3457": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3458": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3462": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3464": {
      "op": "SHL"
    },
    "3465": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3466": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3467": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3469": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3471": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3472": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3473": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3474": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3475": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3476": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3478": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3479": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3480": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3483": {
      "op": "DUP1"
    },
    "3484": {
      "op": "MLOAD"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3487": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "3490": {
      "op": "DUP4"
    },
    "3491": {
      "op": "CODECOPY"
    },
    "3492": {
      "op": "DUP2"
    },
    "3493": {
      "op": "MLOAD"
    },
    "3494": {
      "op": "SWAP2"
    },
    "3495": {
      "op": "MSTORE"
    },
    "3496": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "3498": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3499": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3500": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3501": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3502": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3503": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3504": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3505": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3506": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "19"
    },
    "3507": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "3509": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3510": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3511": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3512": {
      "fn": "Laozi.set",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3513": {
      "branch": 80,
      "fn": "Laozi.set",
      "offset": [
        4906,
        4917
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3514": {
      "fn": "Laozi.set",
      "offset": [
        4902,
        4961
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3515": {
      "fn": "Laozi.set",
      "offset": [
        4902,
        4961
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDC6"
    },
    "3518": {
      "branch": 80,
      "fn": "Laozi.set",
      "offset": [
        4902,
        4961
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3519": {
      "fn": "Laozi.set",
      "offset": [
        4933,
        4950
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 29,
      "value": "0xDC6"
    },
    "3522": {
      "fn": "Laozi.set",
      "offset": [
        4933,
        4948
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3D"
    },
    "3525": {
      "fn": "Laozi.set",
      "jump": "i",
      "offset": [
        4933,
        4950
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3526": {
      "fn": "Laozi.set",
      "offset": [
        4933,
        4950
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3527": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5051
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0xE03"
    },
    "3530": {
      "fn": "Laozi.set",
      "offset": [
        5039,
        5050
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3531": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5034
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFD"
    },
    "3534": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5016
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "3536": {
      "fn": "Laozi.set",
      "offset": [
        5017,
        5021
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3537": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3538": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3539": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3540": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "LT",
      "path": "3"
    },
    "3541": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDDA"
    },
    "3544": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3545": {
      "dev": "Index out of range",
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3546": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3547": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3548": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3550": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3551": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3553": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3555": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3556": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3557": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3559": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "MUL",
      "path": "3"
    },
    "3560": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5022
      ],
      "op": "ADD",
      "path": "3"
    },
    "3561": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5033
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3563": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5033
      ],
      "op": "ADD",
      "path": "3"
    },
    "3564": {
      "fn": "Laozi.set",
      "offset": [
        5008,
        5033
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3565": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5003
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "3567": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5003
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3568": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5007
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "3571": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5007
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3572": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5034
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3573": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5034
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3574": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5034
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "3579": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5034
      ],
      "op": "AND",
      "path": "3"
    },
    "3580": {
      "fn": "Laozi.set",
      "jump": "i",
      "offset": [
        4988,
        5034
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3581": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5034
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3582": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5038
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3583": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5038
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1387"
    },
    "3586": {
      "fn": "Laozi.set",
      "jump": "i",
      "offset": [
        4988,
        5051
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3587": {
      "fn": "Laozi.set",
      "offset": [
        4988,
        5051
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3588": {
      "fn": "Laozi.set",
      "offset": [
        4970,
        4985
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "3590": {
      "fn": "Laozi.set",
      "offset": [
        4970,
        5051
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3591": {
      "fn": "Laozi.set",
      "offset": [
        4970,
        5051
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3592": {
      "fn": "Laozi.set",
      "offset": [
        4970,
        5051
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3593": {
      "fn": "Laozi.set",
      "offset": [
        4970,
        5051
      ],
      "op": "POP",
      "path": "3"
    },
    "3594": {
      "fn": "Laozi.set",
      "offset": [
        5089,
        5100
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 31
    },
    "3595": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5069
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "3597": {
      "fn": "Laozi.set",
      "offset": [
        5070,
        5074
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3598": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3599": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3600": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3601": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "LT",
      "path": "3"
    },
    "3602": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE17"
    },
    "3605": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3606": {
      "dev": "Index out of range",
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "INVALID",
      "path": "3"
    },
    "3607": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3608": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3609": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3611": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3612": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3614": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3616": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3617": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3618": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3620": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "MUL",
      "path": "3"
    },
    "3621": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5075
      ],
      "op": "ADD",
      "path": "3"
    },
    "3622": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5086
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3624": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5086
      ],
      "op": "ADD",
      "path": "3"
    },
    "3625": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5100
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3626": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5100
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3627": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5100
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3628": {
      "fn": "Laozi.set",
      "offset": [
        5061,
        5100
      ],
      "op": "POP",
      "path": "3"
    },
    "3629": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "POP",
      "path": "3"
    },
    "3630": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "POP",
      "path": "3"
    },
    "3631": {
      "fn": "Laozi.set",
      "offset": [
        4809,
        5107
      ],
      "op": "POP",
      "path": "3"
    },
    "3632": {
      "fn": "Laozi.set",
      "jump": "o",
      "offset": [
        4809,
        5107
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3634": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE39"
    },
    "3637": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1383"
    },
    "3640": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3641": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3642": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3644": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3651": {
      "op": "SHL"
    },
    "3652": {
      "op": "SUB"
    },
    "3653": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3654": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3655": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "19"
    },
    "3656": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3657": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "19"
    },
    "3658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "19"
    },
    "3659": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0xE89"
    },
    "3662": {
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "3663": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3665": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3666": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3673": {
      "op": "SHL"
    },
    "3674": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3675": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3676": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "3678": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "3680": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3681": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3682": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3683": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3684": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3685": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "3687": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3688": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3689": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3690": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3692": {
      "op": "DUP1"
    },
    "3693": {
      "op": "MLOAD"
    },
    "3694": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "CODECOPY"
    },
    "3701": {
      "op": "DUP2"
    },
    "3702": {
      "op": "MLOAD"
    },
    "3703": {
      "op": "SWAP2"
    },
    "3704": {
      "op": "MSTORE"
    },
    "3705": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "3707": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "3708": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3709": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "3710": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3711": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3712": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3713": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "3714": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3715": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "19"
    },
    "3716": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "3718": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "3719": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3720": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "19"
    },
    "3721": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3722": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1762,
        1763
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 32,
      "value": "0x0"
    },
    "3724": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3725": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3726": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "3728": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3735": {
      "op": "SHL"
    },
    "3736": {
      "op": "SUB"
    },
    "3737": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3738": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "3739": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "AND",
      "path": "19"
    },
    "3740": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3741": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1762,
        1763
      ],
      "op": "DUP4",
      "path": "19"
    },
    "3776": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1762,
        1763
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "LOG3",
      "path": "19"
    },
    "3778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1793
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 33,
      "value": "0x0"
    },
    "3780": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "DUP1",
      "path": "19"
    },
    "3781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3788": {
      "op": "SHL"
    },
    "3789": {
      "op": "SUB"
    },
    "3790": {
      "op": "NOT"
    },
    "3791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "AND",
      "path": "19"
    },
    "3792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "3794": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3795": {
      "offset": [
        2958,
        2989
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "3798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3805": {
      "op": "SHL"
    },
    "3806": {
      "op": "SUB"
    },
    "3807": {
      "offset": [
        2958,
        2989
      ],
      "op": "AND",
      "path": "3"
    },
    "3808": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2958,
        2989
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3809": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2958,
        2989
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3810": {
      "offset": [
        2810,
        2855
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3811": {
      "offset": [
        2853,
        2855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3813": {
      "offset": [
        2810,
        2855
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3814": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2810,
        2855
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3815": {
      "fn": "Laozi.dev",
      "offset": [
        10629,
        10755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3816": {
      "fn": "Laozi.dev",
      "offset": [
        10699,
        10706
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 34,
      "value": "0x2"
    },
    "3818": {
      "fn": "Laozi.dev",
      "offset": [
        10699,
        10706
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3825": {
      "op": "SHL"
    },
    "3826": {
      "op": "SUB"
    },
    "3827": {
      "fn": "Laozi.dev",
      "offset": [
        10699,
        10706
      ],
      "op": "AND",
      "path": "3"
    },
    "3828": {
      "fn": "Laozi.dev",
      "offset": [
        10685,
        10695
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3829": {
      "branch": 81,
      "fn": "Laozi.dev",
      "offset": [
        10685,
        10706
      ],
      "op": "EQ",
      "path": "3"
    },
    "3830": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF32"
    },
    "3833": {
      "branch": 81,
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3834": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3836": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3837": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3838": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3844": {
      "op": "SHL"
    },
    "3845": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3846": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3847": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3849": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3851": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3852": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "ADD",
      "path": "3"
    },
    "3853": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3854": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x9"
    },
    "3856": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "3858": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3859": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "ADD",
      "path": "3"
    },
    "3860": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3861": {
      "op": "PUSH9",
      "value": "0x6465763A207775743F"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0xB8"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "3876": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3877": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "ADD",
      "path": "3"
    },
    "3878": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3879": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3880": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3881": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3882": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3883": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3884": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "SUB",
      "path": "3"
    },
    "3885": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "3887": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "ADD",
      "path": "3"
    },
    "3888": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3889": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3890": {
      "fn": "Laozi.dev",
      "offset": [
        10677,
        10720
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3891": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10737
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 35,
      "value": "0x2"
    },
    "3893": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3894": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3901": {
      "op": "SHL"
    },
    "3902": {
      "op": "SUB"
    },
    "3903": {
      "op": "NOT"
    },
    "3904": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "AND",
      "path": "3"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3911": {
      "op": "SHL"
    },
    "3912": {
      "op": "SUB"
    },
    "3913": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3914": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3915": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3916": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "AND",
      "path": "3"
    },
    "3917": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3918": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3919": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3920": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "OR",
      "path": "3"
    },
    "3921": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3922": {
      "fn": "Laozi.dev",
      "offset": [
        10730,
        10748
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3923": {
      "fn": "Laozi.dev",
      "jump": "o",
      "offset": [
        10629,
        10755
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3924": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "3925": {
      "fn": "Ownable.owner",
      "offset": [
        1071,
        1078
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "3927": {
      "fn": "Ownable.owner",
      "offset": [
        1097,
        1103
      ],
      "op": "SLOAD",
      "path": "19",
      "statement": 36
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3934": {
      "op": "SHL"
    },
    "3935": {
      "op": "SUB"
    },
    "3936": {
      "fn": "Ownable.owner",
      "offset": [
        1097,
        1103
      ],
      "op": "AND",
      "path": "19"
    },
    "3937": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "3938": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMP",
      "path": "19"
    },
    "3939": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3940": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6029,
        6036
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3942": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6059,
        6072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3944": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6059,
        6072
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3945": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6052,
        6055
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3946": {
      "branch": 82,
      "fn": "Laozi.getMultiplier",
      "offset": [
        6052,
        6072
      ],
      "op": "GT",
      "path": "3"
    },
    "3947": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6048,
        6364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF84"
    },
    "3950": {
      "branch": 82,
      "fn": "Laozi.getMultiplier",
      "offset": [
        6048,
        6364
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3951": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6095,
        6131
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 37,
      "value": "0xF7D"
    },
    "3954": {
      "offset": [
        2853,
        2855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3956": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6095,
        6109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6C"
    },
    "3959": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6095,
        6098
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3960": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6103,
        6108
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3961": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6095,
        6102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "3964": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        6095,
        6109
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3965": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6095,
        6131
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3966": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6088,
        6131
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3967": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6088,
        6131
      ],
      "op": "POP",
      "path": "3"
    },
    "3968": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6088,
        6131
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC9"
    },
    "3971": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6088,
        6131
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3972": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6048,
        6364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3973": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6161,
        6174
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "3975": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6161,
        6174
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3976": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6152,
        6157
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3977": {
      "branch": 83,
      "fn": "Laozi.getMultiplier",
      "offset": [
        6152,
        6174
      ],
      "op": "LT",
      "path": "3"
    },
    "3978": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6148,
        6364
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF97"
    },
    "3981": {
      "branch": 83,
      "fn": "Laozi.getMultiplier",
      "offset": [
        6148,
        6364
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3982": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6197,
        6211
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 38,
      "value": "0xF7D"
    },
    "3985": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6197,
        6200
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3986": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6205,
        6210
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3987": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6197,
        6204
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "3990": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        6197,
        6211
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3991": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6148,
        6364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3992": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6353
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xF7D"
    },
    "3995": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6339
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFAF"
    },
    "3998": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6325,
        6338
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4000": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6325,
        6338
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4001": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6320
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4002": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6324
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "4005": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6324
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4006": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6339
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4007": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6339
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4008": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6339
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4013": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6339
      ],
      "op": "AND",
      "path": "3"
    },
    "4014": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        6317,
        6339
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4015": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6317,
        6339
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4016": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6295
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFD"
    },
    "4019": {
      "offset": [
        2853,
        2855
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "4021": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6273
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6C"
    },
    "4024": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6267,
        6272
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4025": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6262
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4027": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6262
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4028": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6266
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1483"
    },
    "4031": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6266
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4032": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6273
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4033": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6273
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4034": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6273
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4039": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6249,
        6273
      ],
      "op": "AND",
      "path": "3"
    },
    "4040": {
      "fn": "Laozi.getMultiplier",
      "jump": "i",
      "offset": [
        6249,
        6273
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4041": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        6148,
        6364
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4042": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4043": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4044": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "POP",
      "path": "3"
    },
    "4045": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        5957,
        6370
      ],
      "op": "POP",
      "path": "3"
    },
    "4046": {
      "fn": "Laozi.getMultiplier",
      "jump": "o",
      "offset": [
        5957,
        6370
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4047": {
      "offset": [
        3102,
        3168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4048": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4050": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4052": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4053": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4054": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4055": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4057": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4058": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4059": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4060": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4062": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4063": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4064": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4065": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4066": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4067": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4068": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4069": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4070": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4071": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4072": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4073": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4074": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4075": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4077": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4078": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4079": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "ADD",
      "path": "3"
    },
    "4080": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4081": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        3102,
        3168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4082": {
      "fn": "Laozi.getMultiplier",
      "jump": "o",
      "offset": [
        3102,
        3168
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4083": {
      "offset": [
        2541,
        2558
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4084": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2541,
        2558
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4086": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2541,
        2558
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4093": {
      "op": "SHL"
    },
    "4094": {
      "op": "SUB"
    },
    "4095": {
      "offset": [
        2541,
        2558
      ],
      "op": "AND",
      "path": "3"
    },
    "4096": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2541,
        2558
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4097": {
      "fn": "Laozi.getMultiplier",
      "jump": "o",
      "offset": [
        2541,
        2558
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4098": {
      "offset": [
        2584,
        2606
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4099": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2584,
        2606
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4101": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2584,
        2606
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "op": "SUB"
    },
    "4110": {
      "offset": [
        2584,
        2606
      ],
      "op": "AND",
      "path": "3"
    },
    "4111": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2584,
        2606
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4112": {
      "fn": "Laozi.getMultiplier",
      "jump": "o",
      "offset": [
        2584,
        2606
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4113": {
      "offset": [
        2735,
        2760
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4114": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2735,
        2760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4116": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2735,
        2760
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4117": {
      "fn": "Laozi.getMultiplier",
      "offset": [
        2735,
        2760
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4118": {
      "fn": "Laozi.getMultiplier",
      "jump": "o",
      "offset": [
        2735,
        2760
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4119": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4120": {
      "fn": "Laozi.deposit",
      "offset": [
        8364,
        8385
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4122": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8396
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "4124": {
      "fn": "Laozi.deposit",
      "offset": [
        8397,
        8401
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4125": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4126": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4127": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4128": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "LT",
      "path": "3"
    },
    "4129": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1026"
    },
    "4132": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4133": {
      "dev": "Index out of range",
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "INVALID",
      "path": "3"
    },
    "4134": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4135": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4137": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4138": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4139": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4140": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4142": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4143": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4144": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4145": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4146": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4147": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4148": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4150": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4151": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4152": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4154": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4155": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4156": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8450
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4157": {
      "fn": "Laozi.deposit",
      "offset": [
        8451,
        8461
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4158": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4159": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4160": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4161": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4162": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4163": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4164": {
      "fn": "Laozi.deposit",
      "offset": [
        8436,
        8462
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4165": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4167": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4168": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4169": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "MUL",
      "path": "3"
    },
    "4170": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4171": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4172": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "ADD",
      "path": "3"
    },
    "4173": {
      "fn": "Laozi.deposit",
      "offset": [
        8388,
        8402
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4174": {
      "op": "POP"
    },
    "4175": {
      "fn": "Laozi.deposit",
      "offset": [
        8472,
        8488
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0x1057"
    },
    "4178": {
      "fn": "Laozi.deposit",
      "offset": [
        8445,
        8449
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4179": {
      "fn": "Laozi.deposit",
      "offset": [
        8472,
        8482
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA7B"
    },
    "4182": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8472,
        8488
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4183": {
      "fn": "Laozi.deposit",
      "offset": [
        8472,
        8488
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4184": {
      "fn": "Laozi.deposit",
      "offset": [
        8502,
        8513
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4185": {
      "fn": "Laozi.deposit",
      "offset": [
        8502,
        8513
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4186": {
      "branch": 84,
      "fn": "Laozi.deposit",
      "offset": [
        8502,
        8517
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4187": {
      "fn": "Laozi.deposit",
      "offset": [
        8498,
        8725
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A0"
    },
    "4190": {
      "branch": 84,
      "fn": "Laozi.deposit",
      "offset": [
        8498,
        8725
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4191": {
      "fn": "Laozi.deposit",
      "offset": [
        8533,
        8548
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4193": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8617
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x108C"
    },
    "4196": {
      "fn": "Laozi.deposit",
      "offset": [
        8601,
        8605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4197": {
      "fn": "Laozi.deposit",
      "offset": [
        8601,
        8616
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4199": {
      "fn": "Laozi.deposit",
      "offset": [
        8601,
        8616
      ],
      "op": "ADD",
      "path": "3"
    },
    "4200": {
      "fn": "Laozi.deposit",
      "offset": [
        8601,
        8616
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4201": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8596
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x779"
    },
    "4204": {
      "fn": "Laozi.deposit",
      "offset": [
        8591,
        8595
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "4210": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "4213": {
      "fn": "Laozi.deposit",
      "offset": [
        8567,
        8571
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4214": {
      "fn": "Laozi.deposit",
      "offset": [
        8567,
        8585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4216": {
      "fn": "Laozi.deposit",
      "offset": [
        8567,
        8585
      ],
      "op": "ADD",
      "path": "3"
    },
    "4217": {
      "fn": "Laozi.deposit",
      "offset": [
        8567,
        8585
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4218": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8555
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4219": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4221": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8562
      ],
      "op": "ADD",
      "path": "3"
    },
    "4222": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4223": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8566
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "4226": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8566
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4227": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8586
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4228": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8586
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4229": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8586
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4234": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8586
      ],
      "op": "AND",
      "path": "3"
    },
    "4235": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8551,
        8586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4236": {
      "fn": "Laozi.deposit",
      "offset": [
        8551,
        8617
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4237": {
      "fn": "Laozi.deposit",
      "offset": [
        8533,
        8617
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4238": {
      "op": "POP"
    },
    "4239": {
      "fn": "Laozi.deposit",
      "offset": [
        8634,
        8645
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4240": {
      "branch": 85,
      "fn": "Laozi.deposit",
      "offset": [
        8634,
        8645
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4241": {
      "fn": "Laozi.deposit",
      "offset": [
        8631,
        8715
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x109E"
    },
    "4244": {
      "branch": 85,
      "fn": "Laozi.deposit",
      "offset": [
        8631,
        8715
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4245": {
      "fn": "Laozi.deposit",
      "offset": [
        8665,
        8700
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0x109E"
    },
    "4248": {
      "fn": "Laozi.deposit",
      "offset": [
        8680,
        8690
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4249": {
      "fn": "Laozi.deposit",
      "offset": [
        8692,
        8699
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4250": {
      "fn": "Laozi.deposit",
      "offset": [
        8665,
        8679
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14C5"
    },
    "4253": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8665,
        8700
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4254": {
      "fn": "Laozi.deposit",
      "offset": [
        8665,
        8700
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4255": {
      "fn": "Laozi.deposit",
      "offset": [
        8498,
        8725
      ],
      "op": "POP",
      "path": "3"
    },
    "4256": {
      "fn": "Laozi.deposit",
      "offset": [
        8498,
        8725
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4257": {
      "fn": "Laozi.deposit",
      "offset": [
        8737,
        8748
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4258": {
      "branch": 86,
      "fn": "Laozi.deposit",
      "offset": [
        8737,
        8748
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4259": {
      "fn": "Laozi.deposit",
      "offset": [
        8734,
        8901
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10CC"
    },
    "4262": {
      "branch": 86,
      "fn": "Laozi.deposit",
      "offset": [
        8734,
        8901
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4263": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8776
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 42
    },
    "4264": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4265": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8838
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10BD"
    },
    "4268": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8838
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4275": {
      "op": "SHL"
    },
    "4276": {
      "op": "SUB"
    },
    "4277": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8776
      ],
      "op": "AND",
      "path": "3"
    },
    "4278": {
      "fn": "Laozi.deposit",
      "offset": [
        8802,
        8812
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4279": {
      "fn": "Laozi.deposit",
      "offset": [
        8823,
        8827
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4280": {
      "fn": "Laozi.deposit",
      "offset": [
        8830,
        8837
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4281": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17BB"
    },
    "4284": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8764,
        8838
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4285": {
      "fn": "Laozi.deposit",
      "offset": [
        8764,
        8838
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4286": {
      "fn": "Laozi.deposit",
      "offset": [
        8866,
        8877
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 43
    },
    "4287": {
      "fn": "Laozi.deposit",
      "offset": [
        8866,
        8877
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4288": {
      "fn": "Laozi.deposit",
      "offset": [
        8866,
        8890
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10C9"
    },
    "4291": {
      "fn": "Laozi.deposit",
      "offset": [
        8866,
        8890
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4292": {
      "fn": "Laozi.deposit",
      "offset": [
        8882,
        8889
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4293": {
      "fn": "Laozi.deposit",
      "offset": [
        8866,
        8881
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1387"
    },
    "4296": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8866,
        8890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4297": {
      "fn": "Laozi.deposit",
      "offset": [
        8866,
        8890
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4298": {
      "fn": "Laozi.deposit",
      "offset": [
        8852,
        8890
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4299": {
      "fn": "Laozi.deposit",
      "offset": [
        8852,
        8890
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4300": {
      "fn": "Laozi.deposit",
      "offset": [
        8734,
        8901
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4301": {
      "fn": "Laozi.deposit",
      "offset": [
        8944,
        8962
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 44,
      "value": "0x3"
    },
    "4303": {
      "fn": "Laozi.deposit",
      "offset": [
        8944,
        8962
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4304": {
      "fn": "Laozi.deposit",
      "offset": [
        8944,
        8962
      ],
      "op": "ADD",
      "path": "3"
    },
    "4305": {
      "fn": "Laozi.deposit",
      "offset": [
        8944,
        8962
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4306": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8939
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4307": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8939
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4308": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10E7"
    },
    "4311": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8973
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4312": {
      "fn": "Laozi.deposit",
      "offset": [
        8968,
        8972
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "4318": {
      "fn": "Laozi.deposit",
      "offset": [
        8968,
        8972
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4319": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8963
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "4322": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8963
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4323": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8943
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "4326": {
      "fn": "Laozi.deposit",
      "jump": "i",
      "offset": [
        8928,
        8963
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4327": {
      "fn": "Laozi.deposit",
      "offset": [
        8928,
        8973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4328": {
      "fn": "Laozi.deposit",
      "offset": [
        8910,
        8925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4330": {
      "fn": "Laozi.deposit",
      "offset": [
        8910,
        8925
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4331": {
      "fn": "Laozi.deposit",
      "offset": [
        8910,
        8925
      ],
      "op": "ADD",
      "path": "3"
    },
    "4332": {
      "fn": "Laozi.deposit",
      "offset": [
        8910,
        8973
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4333": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 45,
      "value": "0x40"
    },
    "4335": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4336": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4337": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4338": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4339": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4340": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4341": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4342": {
      "fn": "Laozi.deposit",
      "offset": [
        9008,
        9012
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4343": {
      "fn": "Laozi.deposit",
      "offset": [
        9008,
        9012
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4344": {
      "fn": "Laozi.deposit",
      "offset": [
        8996,
        9006
      ],
      "op": "CALLER",
      "path": "3"
    },
    "4345": {
      "fn": "Laozi.deposit",
      "offset": [
        8996,
        9006
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4346": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
    },
    "4379": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4380": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4381": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4382": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "SUB",
      "path": "3"
    },
    "4383": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4385": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "ADD",
      "path": "3"
    },
    "4386": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4387": {
      "fn": "Laozi.deposit",
      "offset": [
        8988,
        9022
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4388": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "POP",
      "path": "3"
    },
    "4389": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "POP",
      "path": "3"
    },
    "4390": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "POP",
      "path": "3"
    },
    "4391": {
      "fn": "Laozi.deposit",
      "offset": [
        8299,
        9029
      ],
      "op": "POP",
      "path": "3"
    },
    "4392": {
      "fn": "Laozi.deposit",
      "jump": "o",
      "offset": [
        8299,
        9029
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4393": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4394": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6503,
        6510
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4396": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6522,
        6543
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4397": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6554
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x6"
    },
    "4399": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6555,
        6559
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4400": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4401": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4402": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4403": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "LT",
      "path": "3"
    },
    "4404": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1139"
    },
    "4407": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4408": {
      "dev": "Index out of range",
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "INVALID",
      "path": "3"
    },
    "4409": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4410": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4412": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4413": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4414": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4415": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4417": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4418": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4419": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4420": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4421": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4422": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4423": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6602
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4425": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4426": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4427": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4429": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4430": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4431": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6608
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4438": {
      "op": "SHL"
    },
    "4439": {
      "op": "SUB"
    },
    "4440": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "DUP10",
      "path": "3"
    },
    "4441": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4442": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "AND",
      "path": "3"
    },
    "4443": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4444": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4445": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4446": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4447": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4448": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4449": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4450": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4451": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4453": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4454": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4455": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "MUL",
      "path": "3"
    },
    "4456": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4457": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4458": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "ADD",
      "path": "3"
    },
    "4459": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6649,
        6667
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "4461": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6649,
        6667
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4462": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6649,
        6667
      ],
      "op": "ADD",
      "path": "3"
    },
    "4463": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6649,
        6667
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4464": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4465": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4466": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4467": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4468": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4475": {
      "op": "SHL"
    },
    "4476": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4477": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4478": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6727,
        6731
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "4479": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "4480": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4481": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ADD",
      "path": "3"
    },
    "4482": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "4483": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4484": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "4485": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4486": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4487": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4488": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4489": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP9",
      "path": "3"
    },
    "4490": {
      "op": "POP"
    },
    "4491": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4492": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6594,
        6615
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4493": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6649,
        6667
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4494": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6649,
        6667
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "4495": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4496": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "4497": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4498": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4499": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4500": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "AND",
      "path": "3"
    },
    "4501": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4502": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6718
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "4507": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6718
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4508": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "4510": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4511": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4512": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ADD",
      "path": "3"
    },
    "4513": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4514": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4515": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6546,
        6560
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4516": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4517": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4518": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SUB",
      "path": "3"
    },
    "4519": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ADD",
      "path": "3"
    },
    "4520": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4521": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6708
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4522": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4523": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "4524": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4525": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4526": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4527": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11B7"
    },
    "4530": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4531": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4533": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4534": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4535": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4536": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "POP",
      "path": "3"
    },
    "4537": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "GAS",
      "path": "3"
    },
    "4538": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4539": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4540": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4541": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4542": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CB"
    },
    "4545": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4546": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4547": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4549": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4550": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4551": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4552": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4554": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4555": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4556": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "POP",
      "path": "3"
    },
    "4557": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "POP",
      "path": "3"
    },
    "4558": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "POP",
      "path": "3"
    },
    "4559": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "POP",
      "path": "3"
    },
    "4560": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4562": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4563": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4564": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4566": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4567": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "LT",
      "path": "3"
    },
    "4568": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4569": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11E1"
    },
    "4572": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4573": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4575": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4576": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4577": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4580": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6762,
        6782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4582": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6762,
        6782
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4583": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6762,
        6782
      ],
      "op": "ADD",
      "path": "3"
    },
    "4584": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6762,
        6782
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4585": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4586": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6696,
        6733
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4587": {
      "op": "POP"
    },
    "4588": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6759
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "4589": {
      "branch": 87,
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6782
      ],
      "op": "GT",
      "path": "3"
    },
    "4590": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6799
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4591": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6799
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4592": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F8"
    },
    "4595": {
      "branch": 87,
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6799
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4596": {
      "op": "POP"
    },
    "4597": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6786,
        6799
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4598": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6786,
        6799
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4599": {
      "branch": 88,
      "fn": "Laozi.pendingYI",
      "offset": [
        6786,
        6799
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4600": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6747,
        6799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4601": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6743,
        7078
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4602": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6743,
        7078
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1258"
    },
    "4605": {
      "branch": 88,
      "fn": "Laozi.pendingYI",
      "offset": [
        6743,
        7078
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4606": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6815,
        6833
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4608": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6836,
        6885
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120D"
    },
    "4611": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6850,
        6854
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4612": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6850,
        6870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "4614": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6850,
        6870
      ],
      "op": "ADD",
      "path": "3"
    },
    "4615": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6850,
        6870
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4616": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6872,
        6884
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "4617": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6836,
        6849
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF63"
    },
    "4620": {
      "fn": "Laozi.pendingYI",
      "jump": "i",
      "offset": [
        6836,
        6885
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4621": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6836,
        6885
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4622": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6815,
        6885
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4623": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6815,
        6885
      ],
      "op": "POP",
      "path": "3"
    },
    "4624": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6899,
        6915
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4626": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6986
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1234"
    },
    "4629": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6970,
        6985
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4631": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6970,
        6985
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4632": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6965
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "4635": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6949,
        6953
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4636": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6949,
        6964
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4638": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6949,
        6964
      ],
      "op": "ADD",
      "path": "3"
    },
    "4639": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6949,
        6964
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4640": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6944
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB6C"
    },
    "4643": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6933,
        6943
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4645": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6933,
        6943
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4646": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6928
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4647": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6932
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "4650": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4651": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6944
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4652": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6944
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4653": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6944
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4658": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6944
      ],
      "op": "AND",
      "path": "3"
    },
    "4659": {
      "fn": "Laozi.pendingYI",
      "jump": "i",
      "offset": [
        6918,
        6944
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4660": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6918,
        6986
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4661": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6899,
        6986
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7016,
        7067
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 46,
      "value": "0x1253"
    },
    "4666": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7034,
        7066
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124C"
    },
    "4669": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7057,
        7065
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4670": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7034,
        7052
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "4673": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6899,
        6986
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4674": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7047,
        7051
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "4680": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7034,
        7046
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "4683": {
      "fn": "Laozi.pendingYI",
      "jump": "i",
      "offset": [
        7034,
        7052
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4684": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7034,
        7066
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4685": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7016,
        7029
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4686": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7016,
        7029
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4687": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7016,
        7033
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1387"
    },
    "4690": {
      "fn": "Laozi.pendingYI",
      "jump": "i",
      "offset": [
        7016,
        7067
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4691": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7016,
        7067
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4692": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7000,
        7067
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4693": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7000,
        7067
      ],
      "op": "POP",
      "path": "3"
    },
    "4694": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6743,
        7078
      ],
      "op": "POP",
      "path": "3"
    },
    "4695": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6743,
        7078
      ],
      "op": "POP",
      "path": "3"
    },
    "4696": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6743,
        7078
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4697": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7155
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 47,
      "value": "0x1280"
    },
    "4700": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7139,
        7143
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4701": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7139,
        7154
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4703": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7139,
        7154
      ],
      "op": "ADD",
      "path": "3"
    },
    "4704": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7139,
        7154
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4705": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7134
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x779"
    },
    "4708": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7129,
        7133
      ],
      "op": "PUSH5",
      "path": "3",
      "value": "0xE8D4A51000"
    },
    "4714": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x773"
    },
    "4717": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7110,
        7123
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4718": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7098
      ],
      "op": "DUP9",
      "path": "3"
    },
    "4719": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7105
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4721": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7105
      ],
      "op": "ADD",
      "path": "3"
    },
    "4722": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7105
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4723": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13E8"
    },
    "4726": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4727": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7124
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4728": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7124
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4729": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7124
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "4734": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7124
      ],
      "op": "AND",
      "path": "3"
    },
    "4735": {
      "fn": "Laozi.pendingYI",
      "jump": "i",
      "offset": [
        7094,
        7124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4736": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7094,
        7155
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4737": {
      "fn": "Laozi.pendingYI",
      "offset": [
        7087,
        7155
      ],
      "op": "SWAP8",
      "path": "3"
    },
    "4738": {
      "fn": "Laozi.pendingYI",
      "offset": [
        6432,
        7162
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4739": {
      "op": "POP"
    },
    "4740": {
      "op": "POP"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "op": "POP"
    },
    "4743": {
      "op": "POP"
    },
    "4744": {
      "op": "POP"
    },
    "4745": {
      "op": "POP"
    },
    "4746": {
      "fn": "Laozi.pendingYI",
      "jump": "o",
      "offset": [
        6432,
        7162
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4747": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4748": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1293"
    },
    "4751": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1383"
    },
    "4754": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4756": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x0"
    },
    "4758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4765": {
      "op": "SHL"
    },
    "4766": {
      "op": "SUB"
    },
    "4767": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4768": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "19"
    },
    "4770": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "19"
    },
    "4772": {
      "branch": 93,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "19"
    },
    "4773": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x12E3"
    },
    "4776": {
      "branch": 93,
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4780": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4781": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4787": {
      "op": "SHL"
    },
    "4788": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4792": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4794": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4795": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "4796": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4797": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4798": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4799": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x24"
    },
    "4801": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4802": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "4803": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4806": {
      "op": "DUP1"
    },
    "4807": {
      "op": "MLOAD"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4810": {
      "op": "PUSH2",
      "value": "0x1B9A"
    },
    "4813": {
      "op": "DUP4"
    },
    "4814": {
      "op": "CODECOPY"
    },
    "4815": {
      "op": "DUP2"
    },
    "4816": {
      "op": "MLOAD"
    },
    "4817": {
      "op": "SWAP2"
    },
    "4818": {
      "op": "MSTORE"
    },
    "4819": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x44"
    },
    "4821": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "4823": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4824": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4825": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4826": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4827": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4828": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4829": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "19"
    },
    "4830": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x64"
    },
    "4832": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "19"
    },
    "4833": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4834": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4835": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4842": {
      "op": "SHL"
    },
    "4843": {
      "op": "SUB"
    },
    "4844": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2038,
        2060
      ],
      "op": "DUP2",
      "path": "19",
      "statement": 48
    },
    "4845": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2038,
        2060
      ],
      "op": "AND",
      "path": "19"
    },
    "4846": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1328"
    },
    "4849": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "JUMPI",
      "path": "19"
    },
    "4850": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4852": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4859": {
      "op": "SHL"
    },
    "4860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x4"
    },
    "4864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "19"
    },
    "4865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4869": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "19"
    },
    "4870": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4871": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4872": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SUB",
      "path": "19"
    },
    "4873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP3",
      "path": "19"
    },
    "4874": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x26"
    },
    "4877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP2",
      "path": "19"
    },
    "4878": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MSTORE",
      "path": "19"
    },
    "4879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x20"
    },
    "4881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "19"
    },
    "4882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH2",
      "path": "19",
      "value": "0x1B53"
    },
    "4886": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x26"
    },
    "4888": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "CODECOPY",
      "path": "19"
    },
    "4890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "19"
    },
    "4893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4894": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "POP",
      "path": "19"
    },
    "4895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "POP",
      "path": "19"
    },
    "4896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4898": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SUB",
      "path": "19"
    },
    "4902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4903": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "REVERT",
      "path": "19"
    },
    "4904": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "JUMPDEST",
      "path": "19"
    },
    "4905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 49,
      "value": "0x0"
    },
    "4907": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4908": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4909": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "PUSH1",
      "path": "19",
      "value": "0x40"
    },
    "4911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "MLOAD",
      "path": "19"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4918": {
      "op": "SHL"
    },
    "4919": {
      "op": "SUB"
    },
    "4920": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4921": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "DUP6",
      "path": "19"
    },
    "4922": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "AND",
      "path": "19"
    },
    "4923": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "SWAP4",
      "path": "19"
    },
    "4924": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4925": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "AND",
      "path": "19"
    },
    "4926": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4927": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "PUSH32",
      "path": "19",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4960": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "LOG3",
      "path": "19"
    },
    "4962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2172
      ],
      "op": "PUSH1",
      "path": "19",
      "statement": 50,
      "value": "0x0"
    },
    "4964": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "DUP1",
      "path": "19"
    },
    "4965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SLOAD",
      "path": "19"
    },
    "4966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4972": {
      "op": "SHL"
    },
    "4973": {
      "op": "SUB"
    },
    "4974": {
      "op": "NOT"
    },
    "4975": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "AND",
      "path": "19"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4982": {
      "op": "SHL"
    },
    "4983": {
      "op": "SUB"
    },
    "4984": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4986": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP3",
      "path": "19"
    },
    "4987": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "AND",
      "path": "19"
    },
    "4988": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4989": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4990": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP2",
      "path": "19"
    },
    "4991": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "OR",
      "path": "19"
    },
    "4992": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP1",
      "path": "19"
    },
    "4993": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SSTORE",
      "path": "19"
    },
    "4994": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMP",
      "path": "19"
    },
    "4995": {
      "fn": "Context._msgSender",
      "offset": [
        557,
        661
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4996": {
      "fn": "Context._msgSender",
      "offset": [
        644,
        654
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 51
    },
    "4997": {
      "fn": "Context._msgSender",
      "offset": [
        557,
        661
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "4998": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        557,
        661
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4999": {
      "fn": "SafeMath.add",
      "offset": [
        841,
        1017
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5000": {
      "fn": "SafeMath.add",
      "offset": [
        899,
        906
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "5002": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5003": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5004": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "ADD",
      "path": "36"
    },
    "5005": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP4",
      "path": "36",
      "statement": 52
    },
    "5006": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5007": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "LT",
      "path": "36"
    },
    "5008": {
      "branch": 97,
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "5009": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x13E1"
    },
    "5012": {
      "branch": 97,
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "5013": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5015": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5016": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "5017": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5023": {
      "op": "SHL"
    },
    "5024": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5025": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5026": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "5028": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "5030": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5031": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "36"
    },
    "5032": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5033": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1B"
    },
    "5035": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x24"
    },
    "5037": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5038": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "36"
    },
    "5039": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5040": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "5073": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x44"
    },
    "5075": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5076": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "36"
    },
    "5077": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5078": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "5079": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "5080": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "5081": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5082": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "5083": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SUB",
      "path": "36"
    },
    "5084": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x64"
    },
    "5086": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "36"
    },
    "5087": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "5088": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "REVERT",
      "path": "36"
    },
    "5089": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5090": {
      "fn": "SafeMath.add",
      "offset": [
        1009,
        1010
      ],
      "op": "SWAP4",
      "path": "36",
      "statement": 53
    },
    "5091": {
      "fn": "SafeMath.add",
      "offset": [
        841,
        1017
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "5092": {
      "op": "POP"
    },
    "5093": {
      "op": "POP"
    },
    "5094": {
      "op": "POP"
    },
    "5095": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        841,
        1017
      ],
      "op": "JUMP",
      "path": "36"
    },
    "5096": {
      "fn": "SafeMath.mul",
      "offset": [
        2147,
        2606
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5097": {
      "fn": "SafeMath.mul",
      "offset": [
        2205,
        2212
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "5099": {
      "branch": 98,
      "fn": "SafeMath.mul",
      "offset": [
        2446,
        2452
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5100": {
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x13F7"
    },
    "5103": {
      "branch": 98,
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "5104": {
      "op": "POP"
    },
    "5105": {
      "fn": "SafeMath.mul",
      "offset": [
        2475,
        2476
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 54,
      "value": "0x0"
    },
    "5107": {
      "fn": "SafeMath.mul",
      "offset": [
        2468,
        2476
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xFC9"
    },
    "5110": {
      "fn": "SafeMath.mul",
      "offset": [
        2468,
        2476
      ],
      "op": "JUMP",
      "path": "36"
    },
    "5111": {
      "fn": "SafeMath.mul",
      "offset": [
        2442,
        2487
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5112": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5113": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5114": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "MUL",
      "path": "36"
    },
    "5115": {
      "fn": "SafeMath.mul",
      "offset": [
        2513,
        2514
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5116": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2510
      ],
      "op": "DUP5",
      "path": "36"
    },
    "5117": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2514
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5118": {
      "fn": "SafeMath.mul",
      "offset": [
        2509,
        2510
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5119": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 55,
      "value": "0x1404"
    },
    "5122": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "5123": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "INVALID",
      "path": "36"
    },
    "5124": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5125": {
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2537
      ],
      "op": "DIV",
      "path": "36"
    },
    "5126": {
      "branch": 99,
      "fn": "SafeMath.mul",
      "offset": [
        2532,
        2542
      ],
      "op": "EQ",
      "path": "36"
    },
    "5127": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x13E1"
    },
    "5130": {
      "branch": 99,
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "5131": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5133": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "5134": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5140": {
      "op": "SHL"
    },
    "5141": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5142": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5143": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "5145": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "36"
    },
    "5146": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5147": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5148": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "5150": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "36"
    },
    "5151": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5152": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5153": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SUB",
      "path": "36"
    },
    "5154": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP3",
      "path": "36"
    },
    "5155": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5156": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x21"
    },
    "5158": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5159": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5160": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "5162": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "36"
    },
    "5163": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5164": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1B79"
    },
    "5167": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x21"
    },
    "5169": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "5170": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "CODECOPY",
      "path": "36"
    },
    "5171": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5173": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "ADD",
      "path": "36"
    },
    "5174": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "5175": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "POP",
      "path": "36"
    },
    "5176": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "POP",
      "path": "36"
    },
    "5177": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5179": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "5180": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5181": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "5182": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SUB",
      "path": "36"
    },
    "5183": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "5184": {
      "fn": "SafeMath.mul",
      "offset": [
        2524,
        2580
      ],
      "op": "REVERT",
      "path": "36"
    },
    "5185": {
      "fn": "SafeMath.div",
      "offset": [
        3068,
        3198
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5186": {
      "fn": "SafeMath.div",
      "offset": [
        3126,
        3133
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "5188": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 56,
      "value": "0x13E1"
    },
    "5191": {
      "fn": "SafeMath.div",
      "offset": [
        3156,
        3157
      ],
      "op": "DUP4",
      "path": "36"
    },
    "5192": {
      "fn": "SafeMath.div",
      "offset": [
        3159,
        3160
      ],
      "op": "DUP4",
      "path": "36"
    },
    "5193": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5195": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "5196": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5197": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5199": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "ADD",
      "path": "36"
    },
    "5200": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5202": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5203": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5204": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1A"
    },
    "5206": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5207": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5208": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "5210": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "ADD",
      "path": "36"
    },
    "5211": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "5244": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5245": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5246": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3191
      ],
      "op": "POP",
      "path": "36"
    },
    "5247": {
      "fn": "SafeMath.div",
      "offset": [
        3152,
        3155
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x181B"
    },
    "5250": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3152,
        3191
      ],
      "op": "JUMP",
      "path": "36"
    },
    "5251": {
      "fn": "SafeMath.sub",
      "offset": [
        1288,
        1422
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "5252": {
      "fn": "SafeMath.sub",
      "offset": [
        1346,
        1353
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "5254": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 57,
      "value": "0x13E1"
    },
    "5257": {
      "fn": "SafeMath.sub",
      "offset": [
        1376,
        1377
      ],
      "op": "DUP4",
      "path": "36"
    },
    "5258": {
      "fn": "SafeMath.sub",
      "offset": [
        1379,
        1380
      ],
      "op": "DUP4",
      "path": "36"
    },
    "5259": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5261": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "5262": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5263": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5265": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "ADD",
      "path": "36"
    },
    "5266": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "5268": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5269": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP1",
      "path": "36"
    },
    "5270": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1E"
    },
    "5272": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5273": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5274": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "5276": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "ADD",
      "path": "36"
    },
    "5277": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "5310": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "DUP2",
      "path": "36"
    },
    "5311": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5312": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1415
      ],
      "op": "POP",
      "path": "36"
    },
    "5313": {
      "fn": "SafeMath.sub",
      "offset": [
        1372,
        1375
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x18BD"
    },
    "5316": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1372,
        1415
      ],
      "op": "JUMP",
      "path": "36"
    },
    "5317": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10319,
        10576
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5318": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10410
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "5320": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10410
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5321": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5323": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5324": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5325": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5332": {
      "op": "SHL"
    },
    "5333": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5334": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5335": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10429,
        10433
      ],
      "op": "ADDRESS",
      "path": "3"
    },
    "5336": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5338": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5339": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ADD",
      "path": "3"
    },
    "5340": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5341": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5342": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5343": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10392,
        10405
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5345": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10392,
        10405
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5352": {
      "op": "SHL"
    },
    "5353": {
      "op": "SUB"
    },
    "5354": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10410
      ],
      "op": "AND",
      "path": "3"
    },
    "5355": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10410
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5356": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10420
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "5361": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10420
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5362": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5364": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5365": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5366": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ADD",
      "path": "3"
    },
    "5367": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5368": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5370": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5371": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5372": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5373": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5374": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5375": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SUB",
      "path": "3"
    },
    "5376": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ADD",
      "path": "3"
    },
    "5377": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5378": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10410
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5379": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5380": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "5381": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5382": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5383": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5384": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1510"
    },
    "5387": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5388": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5390": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5391": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5392": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5393": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "POP",
      "path": "3"
    },
    "5394": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "GAS",
      "path": "3"
    },
    "5395": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "5396": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5397": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5398": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5399": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1524"
    },
    "5402": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5403": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5404": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5406": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5407": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5408": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5409": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5411": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5412": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5413": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "POP",
      "path": "3"
    },
    "5414": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "POP",
      "path": "3"
    },
    "5415": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "POP",
      "path": "3"
    },
    "5416": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "POP",
      "path": "3"
    },
    "5417": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5419": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5420": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5421": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5423": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5424": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "LT",
      "path": "3"
    },
    "5425": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5426": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x153A"
    },
    "5429": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5430": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5432": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5433": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5434": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5435": {
      "op": "POP"
    },
    "5436": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5437": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10408,
        10435
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5438": {
      "op": "POP"
    },
    "5439": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10449,
        10464
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5440": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10449,
        10464
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5441": {
      "branch": 89,
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10449,
        10464
      ],
      "op": "GT",
      "path": "3"
    },
    "5442": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5443": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15CE"
    },
    "5446": {
      "branch": 89,
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5447": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 58,
      "value": "0x1"
    },
    "5449": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5450": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5452": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5453": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5454": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5461": {
      "op": "SHL"
    },
    "5462": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5463": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5470": {
      "op": "SHL"
    },
    "5471": {
      "op": "SUB"
    },
    "5472": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5473": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5474": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "AND",
      "path": "3"
    },
    "5475": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5477": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5478": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ADD",
      "path": "3"
    },
    "5479": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5480": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5482": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5483": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ADD",
      "path": "3"
    },
    "5484": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP6",
      "path": "3"
    },
    "5485": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5486": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5487": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5488": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5489": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5490": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5491": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5492": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "AND",
      "path": "3"
    },
    "5493": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5494": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10491
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "5499": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10491
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5500": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5502": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5503": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5504": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ADD",
      "path": "3"
    },
    "5505": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5506": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5508": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5509": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5510": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5511": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5512": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5513": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "SUB",
      "path": "3"
    },
    "5514": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ADD",
      "path": "3"
    },
    "5515": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5516": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5518": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10482
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5519": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5520": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "5521": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5522": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5523": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5524": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x159C"
    },
    "5527": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5528": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5530": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5531": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5532": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5533": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "POP",
      "path": "3"
    },
    "5534": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "GAS",
      "path": "3"
    },
    "5535": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "CALL",
      "path": "3"
    },
    "5536": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5537": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5538": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5539": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15B0"
    },
    "5542": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5543": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5544": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5546": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5547": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5548": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5549": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5551": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5552": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5553": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "POP",
      "path": "3"
    },
    "5554": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "POP",
      "path": "3"
    },
    "5555": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "POP",
      "path": "3"
    },
    "5556": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "POP",
      "path": "3"
    },
    "5557": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5559": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5560": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5561": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5563": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5564": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "LT",
      "path": "3"
    },
    "5565": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5566": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15C6"
    },
    "5569": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5570": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5572": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5573": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5574": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10480,
        10503
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5575": {
      "op": "POP"
    },
    "5576": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1651"
    },
    "5579": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5582": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5583": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 59,
      "value": "0x1"
    },
    "5585": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "5586": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5588": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5589": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5590": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5597": {
      "op": "SHL"
    },
    "5598": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5599": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "op": "SUB"
    },
    "5608": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5609": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5610": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "AND",
      "path": "3"
    },
    "5611": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "5613": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5614": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ADD",
      "path": "3"
    },
    "5615": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5616": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "5618": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5619": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ADD",
      "path": "3"
    },
    "5620": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP7",
      "path": "3"
    },
    "5621": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5622": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5623": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5624": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5625": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5626": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5627": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5628": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "AND",
      "path": "3"
    },
    "5629": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5630": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10545
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA9059CBB"
    },
    "5635": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10545
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5636": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "5638": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5639": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP4",
      "path": "3"
    },
    "5640": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ADD",
      "path": "3"
    },
    "5641": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5642": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5644": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "5645": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "5646": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5647": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP3",
      "path": "3"
    },
    "5648": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "5649": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "SUB",
      "path": "3"
    },
    "5650": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ADD",
      "path": "3"
    },
    "5651": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5652": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5654": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10536
      ],
      "op": "DUP8",
      "path": "3"
    },
    "5655": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5656": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "5657": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5658": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5659": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5660": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1624"
    },
    "5663": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5664": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5666": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5667": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5668": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5669": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "5670": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "GAS",
      "path": "3"
    },
    "5671": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "CALL",
      "path": "3"
    },
    "5672": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5673": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5674": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5675": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1638"
    },
    "5678": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5679": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5680": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5682": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5683": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "5684": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5685": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5687": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5688": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5689": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "5690": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "5691": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "5692": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "POP",
      "path": "3"
    },
    "5693": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "5695": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "5696": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "5697": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "5699": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP2",
      "path": "3"
    },
    "5700": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "LT",
      "path": "3"
    },
    "5701": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "5702": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x164E"
    },
    "5705": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "5706": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "5708": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "DUP1",
      "path": "3"
    },
    "5709": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "REVERT",
      "path": "3"
    },
    "5710": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10534,
        10559
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5711": {
      "op": "POP"
    },
    "5712": {
      "op": "POP"
    },
    "5713": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10445,
        10570
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "5714": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10319,
        10576
      ],
      "op": "POP",
      "path": "3"
    },
    "5715": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10319,
        10576
      ],
      "op": "POP",
      "path": "3"
    },
    "5716": {
      "fn": "Laozi.safeYITransfer",
      "offset": [
        10319,
        10576
      ],
      "op": "POP",
      "path": "3"
    },
    "5717": {
      "fn": "Laozi.safeYITransfer",
      "jump": "o",
      "offset": [
        10319,
        10576
      ],
      "op": "JUMP",
      "path": "3"
    },
    "5718": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        664,
        839
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5719": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 60,
      "value": "0x40"
    },
    "5721": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5722": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5729": {
      "op": "SHL"
    },
    "5730": {
      "op": "SUB"
    },
    "5731": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5732": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "44"
    },
    "5733": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x24"
    },
    "5735": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "44"
    },
    "5737": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5738": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "5740": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5741": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5742": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "44"
    },
    "5743": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5744": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5745": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5746": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5747": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5748": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP4",
      "path": "44"
    },
    "5750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SUB",
      "path": "44"
    },
    "5751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5753": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "44"
    },
    "5754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x64"
    },
    "5758": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5759": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5760": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "44"
    },
    "5761": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5762": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5763": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5766": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5767": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "ADD",
      "path": "44"
    },
    "5768": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5769": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5776": {
      "op": "SHL"
    },
    "5777": {
      "op": "SUB"
    },
    "5778": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "AND",
      "path": "44"
    },
    "5779": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "5784": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5786": {
      "op": "SHL"
    },
    "5787": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "OR",
      "path": "44"
    },
    "5788": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5789": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        773,
        831
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5790": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1651"
    },
    "5793": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        832
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5794": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5795": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        766,
        771
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5796": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        746,
        765
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1917"
    },
    "5799": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        746,
        832
      ],
      "op": "JUMP",
      "path": "44"
    },
    "5800": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1308,
        1921
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5801": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1673,
        1683
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 61
    },
    "5802": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1673,
        1683
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5803": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1673,
        1683
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5804": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1672,
        1734
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x172E"
    },
    "5807": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1672,
        1734
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5808": {
      "op": "POP"
    },
    "5809": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5811": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5812": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5813": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5820": {
      "op": "SHL"
    },
    "5821": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5822": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5823": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1713,
        1717
      ],
      "op": "ADDRESS",
      "path": "44"
    },
    "5824": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "5826": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5827": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ADD",
      "path": "44"
    },
    "5828": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5835": {
      "op": "SHL"
    },
    "5836": {
      "op": "SUB"
    },
    "5837": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP5",
      "path": "44"
    },
    "5838": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5839": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "AND",
      "path": "44"
    },
    "5840": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x24"
    },
    "5842": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP4",
      "path": "44"
    },
    "5843": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ADD",
      "path": "44"
    },
    "5844": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5845": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5846": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5847": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5848": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "DUP6",
      "path": "44"
    },
    "5849": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "AND",
      "path": "44"
    },
    "5850": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5851": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xDD62ED3E"
    },
    "5856": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5857": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "5859": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5860": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5861": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ADD",
      "path": "44"
    },
    "5862": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5863": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5865": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "5866": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5867": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5868": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5869": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5870": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5871": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "SUB",
      "path": "44"
    },
    "5872": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ADD",
      "path": "44"
    },
    "5873": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5874": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1704
      ],
      "op": "DUP7",
      "path": "44"
    },
    "5875": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5876": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "EXTCODESIZE",
      "path": "44"
    },
    "5877": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5878": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5879": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5880": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1700"
    },
    "5883": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5884": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5886": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5887": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5888": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5889": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "POP",
      "path": "44"
    },
    "5890": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "GAS",
      "path": "44"
    },
    "5891": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "STATICCALL",
      "path": "44"
    },
    "5892": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5893": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5894": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5895": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1714"
    },
    "5898": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5899": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5900": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5902": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5903": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "RETURNDATACOPY",
      "path": "44"
    },
    "5904": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5905": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5907": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5908": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5909": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "POP",
      "path": "44"
    },
    "5910": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "POP",
      "path": "44"
    },
    "5911": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "POP",
      "path": "44"
    },
    "5912": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "POP",
      "path": "44"
    },
    "5913": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5915": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5916": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "RETURNDATASIZE",
      "path": "44"
    },
    "5917": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5919": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5920": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "LT",
      "path": "44"
    },
    "5921": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5922": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x172A"
    },
    "5925": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5926": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "5928": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5929": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5930": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5931": {
      "op": "POP"
    },
    "5932": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1728
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5933": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1689,
        1733
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "5934": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1672,
        1734
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5935": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1769"
    },
    "5938": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "5939": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5941": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5948": {
      "op": "SHL"
    },
    "5949": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5950": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5951": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "5953": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "ADD",
      "path": "44"
    },
    "5954": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5955": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5956": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5958": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "ADD",
      "path": "44"
    },
    "5959": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5960": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5961": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "SUB",
      "path": "44"
    },
    "5962": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP3",
      "path": "44"
    },
    "5963": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5964": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x36"
    },
    "5966": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP2",
      "path": "44"
    },
    "5967": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5968": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "5970": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "ADD",
      "path": "44"
    },
    "5971": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5972": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BE4"
    },
    "5975": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x36"
    },
    "5977": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5978": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "5979": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5981": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "ADD",
      "path": "44"
    },
    "5982": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5983": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "POP",
      "path": "44"
    },
    "5984": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "POP",
      "path": "44"
    },
    "5985": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "5987": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5988": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5989": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "5990": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "SUB",
      "path": "44"
    },
    "5991": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "5992": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "REVERT",
      "path": "44"
    },
    "5993": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1664,
        1814
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "5994": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 62,
      "value": "0x40"
    },
    "5996": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP1",
      "path": "44"
    },
    "5997": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "5998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6004": {
      "op": "SHL"
    },
    "6005": {
      "op": "SUB"
    },
    "6006": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP5",
      "path": "44"
    },
    "6007": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "AND",
      "path": "44"
    },
    "6008": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x24"
    },
    "6010": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6011": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "ADD",
      "path": "44"
    },
    "6012": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6013": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "6015": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6016": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6017": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "ADD",
      "path": "44"
    },
    "6018": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP5",
      "path": "44"
    },
    "6019": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6020": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6021": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6022": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6023": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6024": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP4",
      "path": "44"
    },
    "6025": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SUB",
      "path": "44"
    },
    "6026": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6027": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6028": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "ADD",
      "path": "44"
    },
    "6029": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6030": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6031": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x64"
    },
    "6033": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6034": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6035": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "ADD",
      "path": "44"
    },
    "6036": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6037": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6038": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6039": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6041": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6042": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "ADD",
      "path": "44"
    },
    "6043": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6044": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6051": {
      "op": "SHL"
    },
    "6052": {
      "op": "SUB"
    },
    "6053": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "AND",
      "path": "44"
    },
    "6054": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6061": {
      "op": "SHL"
    },
    "6062": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "OR",
      "path": "44"
    },
    "6063": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6064": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1851,
        1913
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6065": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1824,
        1914
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1651"
    },
    "6068": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1824,
        1914
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6069": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1844,
        1849
      ],
      "op": "DUP5",
      "path": "44"
    },
    "6070": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1844,
        1849
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6071": {
      "fn": "SafeERC20.safeApprove",
      "offset": [
        1824,
        1843
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1917"
    },
    "6074": {
      "fn": "SafeERC20.safeApprove",
      "jump": "i",
      "offset": [
        1824,
        1914
      ],
      "op": "JUMP",
      "path": "44"
    },
    "6075": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1048
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "6076": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 63,
      "value": "0x40"
    },
    "6078": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6079": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6086": {
      "op": "SHL"
    },
    "6087": {
      "op": "SUB"
    },
    "6088": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6089": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP7",
      "path": "44"
    },
    "6090": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "AND",
      "path": "44"
    },
    "6091": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x24"
    },
    "6093": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP4",
      "path": "44"
    },
    "6094": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "ADD",
      "path": "44"
    },
    "6095": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6096": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP5",
      "path": "44"
    },
    "6097": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "AND",
      "path": "44"
    },
    "6098": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x44"
    },
    "6100": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6101": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "ADD",
      "path": "44"
    },
    "6102": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6103": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x64"
    },
    "6105": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6106": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6107": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "ADD",
      "path": "44"
    },
    "6108": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP5",
      "path": "44"
    },
    "6109": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6110": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6111": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6112": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6113": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6114": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP4",
      "path": "44"
    },
    "6115": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SUB",
      "path": "44"
    },
    "6116": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6117": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6118": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "ADD",
      "path": "44"
    },
    "6119": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6120": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6121": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x84"
    },
    "6123": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6124": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6125": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "ADD",
      "path": "44"
    },
    "6126": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6127": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6128": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6129": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6131": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6132": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "ADD",
      "path": "44"
    },
    "6133": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6134": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6139": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6141": {
      "op": "SHL"
    },
    "6142": {
      "op": "SUB"
    },
    "6143": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "AND",
      "path": "44"
    },
    "6144": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "6149": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6151": {
      "op": "SHL"
    },
    "6152": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "OR",
      "path": "44"
    },
    "6153": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6154": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        972,
        1040
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6155": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        945,
        1041
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1815"
    },
    "6158": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        945,
        1041
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6159": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        970
      ],
      "op": "DUP6",
      "path": "44"
    },
    "6160": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        965,
        970
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6161": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        945,
        964
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1917"
    },
    "6164": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "i",
      "offset": [
        945,
        1041
      ],
      "op": "JUMP",
      "path": "44"
    },
    "6165": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        945,
        1041
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "6166": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1048
      ],
      "op": "POP",
      "path": "44"
    },
    "6167": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1048
      ],
      "op": "POP",
      "path": "44"
    },
    "6168": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1048
      ],
      "op": "POP",
      "path": "44"
    },
    "6169": {
      "fn": "SafeERC20.safeTransferFrom",
      "offset": [
        845,
        1048
      ],
      "op": "POP",
      "path": "44"
    },
    "6170": {
      "fn": "SafeERC20.safeTransferFrom",
      "jump": "o",
      "offset": [
        845,
        1048
      ],
      "op": "JUMP",
      "path": "44"
    },
    "6171": {
      "fn": "SafeMath.div",
      "offset": [
        3680,
        3952
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6172": {
      "fn": "SafeMath.div",
      "offset": [
        3766,
        3773
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6174": {
      "fn": "SafeMath.div",
      "offset": [
        3800,
        3812
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 64
    },
    "6175": {
      "branch": 100,
      "fn": "SafeMath.div",
      "offset": [
        3793,
        3798
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6176": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x18A7"
    },
    "6179": {
      "branch": 100,
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6180": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6182": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6189": {
      "op": "SHL"
    },
    "6190": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6191": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6192": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "6194": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6195": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6196": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6197": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6199": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6200": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6201": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6202": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "36"
    },
    "6203": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6204": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6205": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6206": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6207": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6208": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6209": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6210": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6211": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6213": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6214": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6215": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6216": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6217": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6218": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6219": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6221": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6222": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6223": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6224": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6225": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6226": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6228": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6229": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6230": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6231": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "LT",
      "path": "36"
    },
    "6232": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "6233": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x186C"
    },
    "6236": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6237": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6238": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6239": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6240": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6241": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6242": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6243": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6244": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6245": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6247": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6248": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1854"
    },
    "6251": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6252": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6253": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6254": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6255": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6256": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6257": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6258": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6259": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6260": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6261": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6262": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6263": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1F"
    },
    "6265": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "AND",
      "path": "36"
    },
    "6266": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6267": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "6268": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1899"
    },
    "6271": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6272": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6273": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6274": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "36"
    },
    "6275": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6276": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6277": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "6279": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6280": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6282": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "36"
    },
    "6283": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "6286": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "EXP",
      "path": "36"
    },
    "6287": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "36"
    },
    "6288": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "NOT",
      "path": "36"
    },
    "6289": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "AND",
      "path": "36"
    },
    "6290": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6291": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6292": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6294": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "ADD",
      "path": "36"
    },
    "6295": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6296": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6297": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6298": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6299": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "6300": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6301": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6302": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6303": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6305": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6306": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6307": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6308": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SUB",
      "path": "36"
    },
    "6309": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6310": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "REVERT",
      "path": "36"
    },
    "6311": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6312": {
      "fn": "SafeMath.div",
      "offset": [
        3785,
        3813
      ],
      "op": "POP",
      "path": "36"
    },
    "6313": {
      "fn": "SafeMath.div",
      "offset": [
        3823,
        3832
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6315": {
      "fn": "SafeMath.div",
      "offset": [
        3839,
        3840
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6316": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3836
      ],
      "op": "DUP6",
      "path": "36"
    },
    "6317": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6318": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x18B3"
    },
    "6321": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6322": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "INVALID",
      "path": "36"
    },
    "6323": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6324": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "DIV",
      "path": "36"
    },
    "6325": {
      "fn": "SafeMath.div",
      "offset": [
        3835,
        3840
      ],
      "op": "SWAP6",
      "path": "36"
    },
    "6326": {
      "fn": "SafeMath.div",
      "offset": [
        3680,
        3952
      ],
      "op": "SWAP5",
      "path": "36"
    },
    "6327": {
      "op": "POP"
    },
    "6328": {
      "op": "POP"
    },
    "6329": {
      "op": "POP"
    },
    "6330": {
      "op": "POP"
    },
    "6331": {
      "op": "POP"
    },
    "6332": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3680,
        3952
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6333": {
      "fn": "SafeMath.sub",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6334": {
      "fn": "SafeMath.sub",
      "offset": [
        1799,
        1806
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6336": {
      "fn": "SafeMath.sub",
      "offset": [
        1834,
        1846
      ],
      "op": "DUP2",
      "path": "36",
      "statement": 65
    },
    "6337": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "36"
    },
    "6338": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "36"
    },
    "6339": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "GT",
      "path": "36"
    },
    "6340": {
      "branch": 101,
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "6341": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x190F"
    },
    "6344": {
      "branch": 101,
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6345": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6347": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6348": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6352": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6354": {
      "op": "SHL"
    },
    "6355": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6356": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6357": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6359": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "6361": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6362": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6363": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6364": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6365": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6366": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6367": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6368": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x24"
    },
    "6370": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP5",
      "path": "36"
    },
    "6371": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6372": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6373": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6374": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6375": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6376": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "6377": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6378": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "6379": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x44"
    },
    "6381": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6382": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6383": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6384": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6385": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6386": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP6",
      "path": "36"
    },
    "6387": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6388": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6389": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6390": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6391": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6392": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6394": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6395": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "6396": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x186C"
    },
    "6399": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6400": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6401": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6402": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6403": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6404": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6405": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6406": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6407": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6408": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6410": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "36"
    },
    "6411": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1854"
    },
    "6414": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6415": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6416": {
      "op": "POP"
    },
    "6417": {
      "op": "POP"
    },
    "6418": {
      "op": "POP"
    },
    "6419": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6420": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SUB",
      "path": "36"
    },
    "6421": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6422": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6423": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        2927,
        3678
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "6424": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3346,
        3369
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "6426": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x196C"
    },
    "6429": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3400,
        3404
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6430": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "6432": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6433": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6434": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "6436": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "ADD",
      "path": "44"
    },
    "6437": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "6439": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6440": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6441": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6443": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6444": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6445": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6447": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "ADD",
      "path": "44"
    },
    "6448": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "6481": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6482": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6483": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "POP",
      "path": "44"
    },
    "6484": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3380,
        3385
      ],
      "op": "DUP6",
      "path": "44"
    },
    "6485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6487": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6489": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6491": {
      "op": "SHL"
    },
    "6492": {
      "op": "SUB"
    },
    "6493": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3399
      ],
      "op": "AND",
      "path": "44"
    },
    "6494": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3399
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19C8"
    },
    "6497": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3399
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6498": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "6499": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6500": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6501": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xFFFFFFFF"
    },
    "6506": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "AND",
      "path": "44"
    },
    "6507": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3372,
        3441
      ],
      "op": "JUMP",
      "path": "44"
    },
    "6508": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3372,
        3441
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "6509": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3455,
        3472
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6510": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3455,
        3472
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6511": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3346,
        3441
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6512": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3346,
        3441
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6513": {
      "op": "POP"
    },
    "6514": {
      "branch": 95,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3455,
        3476
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "6515": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3451,
        3672
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1651"
    },
    "6518": {
      "branch": 95,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3451,
        3672
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "6519": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3595,
        3605
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 66
    },
    "6520": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6521": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6523": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "ADD",
      "path": "44"
    },
    "6524": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6525": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6526": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6528": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6529": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "LT",
      "path": "44"
    },
    "6530": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "6531": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x198B"
    },
    "6534": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "6535": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "6537": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6538": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "REVERT",
      "path": "44"
    },
    "6539": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "6540": {
      "op": "POP"
    },
    "6541": {
      "branch": 96,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3584,
        3614
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6542": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1651"
    },
    "6545": {
      "branch": 96,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "6546": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "6548": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6549": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6555": {
      "op": "SHL"
    },
    "6556": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6557": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6558": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "6560": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "ADD",
      "path": "44"
    },
    "6561": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6562": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6563": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6565": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "ADD",
      "path": "44"
    },
    "6566": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6567": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6568": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "SUB",
      "path": "44"
    },
    "6569": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP3",
      "path": "44"
    },
    "6570": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6571": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2A"
    },
    "6573": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP2",
      "path": "44"
    },
    "6574": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "6575": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "6577": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "ADD",
      "path": "44"
    },
    "6578": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6579": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BBA"
    },
    "6582": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2A"
    },
    "6584": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6585": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "6586": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "6588": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "ADD",
      "path": "44"
    },
    "6589": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6590": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "POP",
      "path": "44"
    },
    "6591": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "POP",
      "path": "44"
    },
    "6592": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "6594": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "6595": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "DUP1",
      "path": "44"
    },
    "6596": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "6597": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "SUB",
      "path": "44"
    },
    "6598": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "6599": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3576,
        3661
      ],
      "op": "REVERT",
      "path": "44"
    },
    "6600": {
      "fn": "Address.functionCall",
      "offset": [
        3540,
        3734
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6601": {
      "fn": "Address.functionCall",
      "offset": [
        3643,
        3655
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "6603": {
      "fn": "Address.functionCall",
      "offset": [
        3674,
        3727
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 67,
      "value": "0x19D7"
    },
    "6606": {
      "fn": "Address.functionCall",
      "offset": [
        3697,
        3703
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6607": {
      "fn": "Address.functionCall",
      "offset": [
        3705,
        3709
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6608": {
      "fn": "Address.functionCall",
      "offset": [
        3711,
        3712
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6610": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3726
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6611": {
      "fn": "Address.functionCall",
      "offset": [
        3674,
        3696
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19DF"
    },
    "6614": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        3674,
        3727
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6615": {
      "fn": "Address.functionCall",
      "offset": [
        3674,
        3727
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6616": {
      "fn": "Address.functionCall",
      "offset": [
        3667,
        3727
      ],
      "op": "SWAP5",
      "path": "46"
    },
    "6617": {
      "fn": "Address.functionCall",
      "offset": [
        3540,
        3734
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "6618": {
      "op": "POP"
    },
    "6619": {
      "op": "POP"
    },
    "6620": {
      "op": "POP"
    },
    "6621": {
      "op": "POP"
    },
    "6622": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3540,
        3734
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6623": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        4887,
        5845
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6624": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5017,
        5029
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "6626": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5049,
        5067
      ],
      "op": "PUSH2",
      "path": "46",
      "statement": 68,
      "value": "0x19EA"
    },
    "6629": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5060,
        5066
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6630": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5049,
        5059
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B4C"
    },
    "6633": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5049,
        5067
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6634": {
      "branch": 90,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5049,
        5067
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6635": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A3B"
    },
    "6638": {
      "branch": 90,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6639": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6641": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6642": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6643": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6647": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6649": {
      "op": "SHL"
    },
    "6650": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6651": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6652": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6654": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6656": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6657": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "46"
    },
    "6658": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6659": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1D"
    },
    "6661": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "6663": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6664": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "46"
    },
    "6665": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6666": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH32",
      "path": "46",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "6699": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "6701": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6702": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "46"
    },
    "6703": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6704": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6705": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6706": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6707": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6708": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6709": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SUB",
      "path": "46"
    },
    "6710": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x64"
    },
    "6712": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "46"
    },
    "6713": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6714": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "REVERT",
      "path": "46"
    },
    "6715": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6716": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6718": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5186,
        5209
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "6720": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5219
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6727": {
      "op": "SHL"
    },
    "6728": {
      "op": "SUB"
    },
    "6729": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5224
      ],
      "op": "AND",
      "path": "46"
    },
    "6730": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5233,
        5241
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6731": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5244,
        5248
      ],
      "op": "DUP8",
      "path": "46"
    },
    "6732": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6734": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6735": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6736": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6737": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6738": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6739": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6740": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6742": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6743": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6744": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6745": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6746": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6747": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6748": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6750": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6751": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "LT",
      "path": "46"
    },
    "6752": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A7A"
    },
    "6755": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6756": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6757": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6758": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6759": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6760": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6762": {
      "op": "NOT"
    },
    "6763": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6764": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6765": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6766": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6767": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6769": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6770": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6771": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6772": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6773": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6774": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1A5B"
    },
    "6777": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6778": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6779": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1"
    },
    "6781": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6782": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6784": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SUB",
      "path": "46"
    },
    "6785": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x100"
    },
    "6788": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "EXP",
      "path": "46"
    },
    "6789": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SUB",
      "path": "46"
    },
    "6790": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6791": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "NOT",
      "path": "46"
    },
    "6792": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6793": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6794": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "AND",
      "path": "46"
    },
    "6795": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6796": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6797": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6798": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "AND",
      "path": "46"
    },
    "6799": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6800": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6801": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "OR",
      "path": "46"
    },
    "6802": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6803": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6804": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6805": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6806": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6807": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6808": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6809": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6810": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6811": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6812": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6813": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6814": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6815": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6816": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6818": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6820": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6821": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6822": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6823": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SUB",
      "path": "46"
    },
    "6824": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6825": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6826": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP8",
      "path": "46"
    },
    "6827": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "GAS",
      "path": "46"
    },
    "6828": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "CALL",
      "path": "46"
    },
    "6829": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6830": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6831": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6832": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6833": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6834": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6835": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6837": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6838": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "EQ",
      "path": "46"
    },
    "6839": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1ADC"
    },
    "6842": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6843": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6845": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6846": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6847": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6848": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x1F"
    },
    "6850": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "NOT",
      "path": "46"
    },
    "6851": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x3F"
    },
    "6853": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6854": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6855": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "AND",
      "path": "46"
    },
    "6856": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6857": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6858": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x40"
    },
    "6860": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6861": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6862": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6863": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6864": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "46"
    },
    "6865": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6867": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6869": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6870": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "46"
    },
    "6871": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATACOPY",
      "path": "46"
    },
    "6872": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1AE1"
    },
    "6875": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6876": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6877": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x60"
    },
    "6879": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6880": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6881": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6882": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6883": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6884": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6885": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6886": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "POP",
      "path": "46"
    },
    "6887": {
      "branch": 91,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5263,
        5270
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6888": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6889": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1AF5"
    },
    "6892": {
      "branch": 91,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6893": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5293,
        5303
      ],
      "op": "SWAP2",
      "path": "46",
      "statement": 69
    },
    "6894": {
      "op": "POP"
    },
    "6895": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5286,
        5303
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x19D7"
    },
    "6898": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5286,
        5303
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6899": {
      "op": "POP"
    },
    "6900": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5286,
        5303
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6901": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6902": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5404,
        5421
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6903": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5404,
        5421
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6904": {
      "branch": 92,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5404,
        5425
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6905": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5400,
        5829
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1B05"
    },
    "6908": {
      "branch": 92,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5400,
        5829
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6909": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5662,
        5672
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6910": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5656,
        5673
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6911": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5722,
        5737
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6912": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5709,
        5719
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6913": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5705,
        5707
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6915": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5701,
        5720
      ],
      "op": "ADD",
      "path": "46"
    },
    "6916": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5694,
        5738
      ],
      "op": "REVERT",
      "path": "46"
    },
    "6917": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5611,
        5756
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6918": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "statement": 70,
      "value": "0x40"
    },
    "6920": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6921": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6925": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6927": {
      "op": "SHL"
    },
    "6928": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6929": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6930": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6932": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x4"
    },
    "6934": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6935": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6936": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6937": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6938": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6939": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6940": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6941": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x24"
    },
    "6943": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP5",
      "path": "46"
    },
    "6944": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6945": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6946": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP7",
      "path": "46"
    },
    "6947": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6948": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5801,
        5813
      ],
      "op": "DUP8",
      "path": "46"
    },
    "6949": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5801,
        5813
      ],
      "op": "SWAP4",
      "path": "46"
    },
    "6950": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6951": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6952": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6953": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP3",
      "path": "46"
    },
    "6954": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x44"
    },
    "6956": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6957": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP2",
      "path": "46"
    },
    "6958": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6959": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP6",
      "path": "46"
    },
    "6960": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6961": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6962": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP1",
      "path": "46"
    },
    "6963": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6964": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6965": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x0"
    },
    "6967": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6968": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6969": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x186C"
    },
    "6972": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "JUMPI",
      "path": "46"
    },
    "6973": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6974": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "46"
    },
    "6975": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6976": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "46"
    },
    "6977": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "46"
    },
    "6978": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP3",
      "path": "46"
    },
    "6979": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6980": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "46"
    },
    "6981": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "46",
      "value": "0x20"
    },
    "6983": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "46"
    },
    "6984": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH2",
      "path": "46",
      "value": "0x1854"
    },
    "6987": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "JUMP",
      "path": "46"
    },
    "6988": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1098
      ],
      "op": "JUMPDEST",
      "path": "46"
    },
    "6989": {
      "fn": "Address.isContract",
      "offset": [
        1045,
        1065
      ],
      "op": "EXTCODESIZE",
      "path": "46"
    },
    "6990": {
      "fn": "Address.isContract",
      "offset": [
        1083,
        1091
      ],
      "op": "ISZERO",
      "path": "46",
      "statement": 71
    },
    "6991": {
      "fn": "Address.isContract",
      "offset": [
        1083,
        1091
      ],
      "op": "ISZERO",
      "path": "46"
    },
    "6992": {
      "fn": "Address.isContract",
      "offset": [
        1083,
        1091
      ],
      "op": "SWAP1",
      "path": "46"
    },
    "6993": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        685,
        1098
      ],
      "op": "JUMP",
      "path": "46"
    }
  },
  "sha1": "465cacf80a07df690925d63cfdc72eff7f7b804b",
  "source": "pragma solidity 0.6.12;\n\n\n//import \"./lib/token/ERC20/IERC20.sol\";\nimport \"./lib/token/ERC20/SafeERC20.sol\";\nimport \"./lib/utils/EnumerableSet.sol\";\n//import \"./lib/math/SafeMath.sol\";\n//import \"./lib/access/Ownable.sol\";\nimport \"./YIToken.sol\";\n\n\ninterface IMigratorMaster {\n    // Perform LP token migration from legacy UniswapV2 to YISwap.\n    // Take the current LP token address and return the new LP token address.\n    // Migrator should have full access to the caller's LP token.\n    // Return the new LP token address.\n    //\n    // XXX Migrator must have allowance access to UniswapV2 LP tokens.\n    // YISwap must mint EXACTLY the same amount of YISwap LP tokens or\n    // else something bad will happen. Traditional UniswapV2 does not\n    // do that so be careful!\n    function migrate(IERC20 token) external returns (IERC20);\n}\n\n// Laozi is the master of YI. He can make YI and he is a fair guy.\n//\n// Note that it's ownable and the owner wields tremendous power. The ownership\n// will be transferred to a governance smart contract once SUSHI is sufficiently\n// distributed and the community can show to govern itself.\n//\n// Have fun reading it. Hopefully it's bug-free. God bless.\ncontract Laozi is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of SUSHIs\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accYIPerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //   1. The pool's `accYIPerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. User's `amount` gets updated.\n        //   4. User's `rewardDebt` gets updated.\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken;           // Address of LP token contract.\n        uint256 allocPoint;       // How many allocation points assigned to this pool. SUSHIs to distribute per block.\n        uint256 lastRewardBlock;  // Last block number that SUSHIs distribution occurs.\n        uint256 accYIPerShare; // Accumulated SUSHIs per share, times 1e12. See below.\n    }\n\n    // The SUSHI TOKEN!\n    YIToken public yi;\n    // Dev address.\n    address public devaddr;\n    // Block number when bonus SUSHI period ends.\n    uint256 public bonusEndBlock;\n    // SUSHI tokens created per block.\n    uint256 public yiPerBlock;\n    // Bonus muliplier for early yi makers.\n    uint256 public constant BONUS_MULTIPLIER = 10;\n    // The migrator contract. It has a lot of power. Can only be set through governance (owner).\n    IMigratorMaster public migrator;\n\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping (uint256 => mapping (address => UserInfo)) public userInfo;\n    // Total allocation poitns. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint = 0;\n    // The block number when SUSHI mining starts.\n    uint256 public startBlock;\n\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    constructor(\n        YIToken _yi,\n        address _devaddr,\n        uint256 _yiPerBlock,\n        uint256 _startBlock,\n        uint256 _bonusEndBlock\n    ) public {\n        yi = _yi;\n        devaddr = _devaddr;\n        yiPerBlock = _yiPerBlock;\n        bonusEndBlock = _bonusEndBlock;\n        startBlock = _startBlock;\n    }\n\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // XXX DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(PoolInfo({\n            lpToken: _lpToken,\n            allocPoint: _allocPoint,\n            lastRewardBlock: lastRewardBlock,\n            accYIPerShare: 0\n        }));\n    }\n\n    // Update the given pool's SUSHI allocation point. Can only be called by the owner.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // Set the migrator contract. Can only be called by the owner.\n    function setMigrator(IMigratorMaster _migrator) public onlyOwner {\n        migrator = _migrator;\n    }\n\n    // Migrate lp token to another lp contract. Can be called by anyone. We trust that migrator contract is good.\n    function migrate(uint256 _pid) public {\n        require(address(migrator) != address(0), \"migrate: no migrator\");\n        PoolInfo storage pool = poolInfo[_pid];\n        IERC20 lpToken = pool.lpToken;\n        uint256 bal = lpToken.balanceOf(address(this));\n        lpToken.safeApprove(address(migrator), bal);\n        IERC20 newLpToken = migrator.migrate(lpToken);\n        require(bal == newLpToken.balanceOf(address(this)), \"migrate: bad\");\n        pool.lpToken = newLpToken;\n    }\n\n    // Return reward multiplier over the given _from to _to block.\n    function getMultiplier(uint256 _from, uint256 _to) public view returns (uint256) {\n        if (_to <= bonusEndBlock) {\n            return _to.sub(_from).mul(BONUS_MULTIPLIER);\n        } else if (_from >= bonusEndBlock) {\n            return _to.sub(_from);\n        } else {\n            return bonusEndBlock.sub(_from).mul(BONUS_MULTIPLIER).add(\n                _to.sub(bonusEndBlock)\n            );\n        }\n    }\n\n    // View function to see pending SUSHIs on frontend.\n    function pendingYI(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accYIPerShare = pool.accYIPerShare;\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (block.number > pool.lastRewardBlock && lpSupply != 0) {\n            uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n            uint256 yiReward = multiplier.mul(yiPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n            accYIPerShare = accYIPerShare.add(yiReward.mul(1e12).div(lpSupply));\n        }\n        return user.amount.mul(accYIPerShare).div(1e12).sub(user.rewardDebt);\n    }\n\n    // Update reward variables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = pool.lpToken.balanceOf(address(this));\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        uint256 multiplier = getMultiplier(pool.lastRewardBlock, block.number);\n        uint256 yiReward = multiplier.mul(yiPerBlock).mul(pool.allocPoint).div(totalAllocPoint);\n        yi.mint(devaddr, yiReward.div(10));\n        yi.mint(address(this), yiReward);\n        pool.accYIPerShare = pool.accYIPerShare.add(yiReward.mul(1e12).div(lpSupply));\n        pool.lastRewardBlock = block.number;\n    }\n\n    // Deposit LP tokens to Laozi for SUSHI allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        updatePool(_pid);\n        if (user.amount > 0) {\n            uint256 pending = user.amount.mul(pool.accYIPerShare).div(1e12).sub(user.rewardDebt);\n            if(pending > 0) {\n                safeYITransfer(msg.sender, pending);\n            }\n        }\n        if(_amount > 0) {\n            pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n            user.amount = user.amount.add(_amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accYIPerShare).div(1e12);\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from Laozi.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: not good\");\n        updatePool(_pid);\n        uint256 pending = user.amount.mul(pool.accYIPerShare).div(1e12).sub(user.rewardDebt);\n        if(pending > 0) {\n            safeYITransfer(msg.sender, pending);\n        }\n        if(_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        }\n        user.rewardDebt = user.amount.mul(pool.accYIPerShare).div(1e12);\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // Safe yi transfer function, just in case if rounding error causes pool to not have enough SUSHIs.\n    function safeYITransfer(address _to, uint256 _amount) internal {\n        uint256 yiBal = yi.balanceOf(address(this));\n        if (_amount > yiBal) {\n            yi.transfer(_to, yiBal);\n        } else {\n            yi.transfer(_to, _amount);\n        }\n    }\n\n    // Update dev address by the previous dev.\n    function dev(address _devaddr) public {\n        require(msg.sender == devaddr, \"dev: wut?\");\n        devaddr = _devaddr;\n    }\n}\n",
  "sourceMap": "1194:9563:3:-:0;;;3294:1;3261:34;;3629:323;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3629:323:3;;;;;;;;;;;;;;;;;;;;;;;;;;832:17:19;852:12;:10;:12::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:19;-1:-1:-1;;;;;874:18:19;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:19;907:43;;874:6;;907:43;-1:-1:-1;3801:2:3;:8;;-1:-1:-1;;;;;3801:8:3;;;-1:-1:-1;;;;;;3801:8:3;;;;;;;3819:7;:18;;;;;;;;;;;;;;;3847:10;:24;3881:13;:30;3921:10;:24;1194:9563;;557:104:12;644:10;557:104;:::o;1194:9563:3:-;;;;;;;",
  "sourcePath": "contracts/Laozi.sol",
  "type": "contract"
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "contracts/lib/GSN/Context.sol",
    "33": "contracts/lib/introspection/ERC165.sol",
    "34": "contracts/lib/introspection/IERC165.sol",
    "36": "contracts/lib/math/SafeMath.sol",
    "45": "contracts/lib/token/ERC721/ERC721.sol",
    "49": "contracts/lib/token/ERC721/IERC721.sol",
    "50": "contracts/lib/token/ERC721/IERC721Enumerable.sol",
    "51": "contracts/lib/token/ERC721/IERC721Metadata.sol",
    "52": "contracts/lib/token/ERC721/IERC721Receiver.sol",
    "53": "contracts/lib/utils/Address.sol",
    "56": "contracts/lib/utils/EnumerableMap.sol",
    "57": "contracts/lib/utils/EnumerableSet.sol",
    "59": "contracts/lib/utils/Strings.sol"
  },
  "ast": {
    "absolutePath": "contracts/lib/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "ERC721": [
        14418
      ]
    },
    "id": 14419,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13489,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:45"
      },
      {
        "absolutePath": "contracts/lib/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 13490,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 4771,
        "src": "25:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 13491,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 14629,
        "src": "57:23:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/token/ERC721/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 13492,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 14687,
        "src": "81:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/token/ERC721/IERC721Enumerable.sol",
        "file": "./IERC721Enumerable.sol",
        "id": 13493,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 14660,
        "src": "113:33:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 13494,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 14705,
        "src": "147:31:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/introspection/ERC165.sol",
        "file": "../../introspection/ERC165.sol",
        "id": 13495,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 11688,
        "src": "179:40:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 13496,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 12096,
        "src": "220:33:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 13497,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 14900,
        "src": "254:33:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/utils/EnumerableSet.sol",
        "file": "../../utils/EnumerableSet.sol",
        "id": 13498,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 15885,
        "src": "288:39:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/utils/EnumerableMap.sol",
        "file": "../../utils/EnumerableMap.sol",
        "id": 13499,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 15490,
        "src": "328:39:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 13500,
        "nodeType": "ImportDirective",
        "scope": 14419,
        "sourceUnit": 16062,
        "src": "368:33:45",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13502,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4770,
              "src": "547:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$4770",
                "typeString": "contract Context"
              }
            },
            "id": 13503,
            "nodeType": "InheritanceSpecifier",
            "src": "547:7:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13504,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11687,
              "src": "556:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$11687",
                "typeString": "contract ERC165"
              }
            },
            "id": 13505,
            "nodeType": "InheritanceSpecifier",
            "src": "556:6:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13506,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14628,
              "src": "564:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$14628",
                "typeString": "contract IERC721"
              }
            },
            "id": 13507,
            "nodeType": "InheritanceSpecifier",
            "src": "564:7:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13508,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14686,
              "src": "573:15:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$14686",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 13509,
            "nodeType": "InheritanceSpecifier",
            "src": "573:15:45"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13510,
              "name": "IERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14659,
              "src": "590:17:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$14659",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "id": 13511,
            "nodeType": "InheritanceSpecifier",
            "src": "590:17:45"
          }
        ],
        "contractDependencies": [
          4770,
          11687,
          11699,
          14628,
          14659,
          14686
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 13501,
          "nodeType": "StructuredDocumentation",
          "src": "403:124:45",
          "text": " @title ERC721 Non-Fungible Token Standard basic implementation\n @dev see https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": true,
        "id": 14418,
        "linearizedBaseContracts": [
          14418,
          14659,
          14686,
          14628,
          11687,
          11699,
          4770
        ],
        "name": "ERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 13514,
            "libraryName": {
              "contractScope": null,
              "id": 13512,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12022,
              "src": "620:8:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$12022",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "614:27:45",
            "typeName": {
              "id": 13513,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 13517,
            "libraryName": {
              "contractScope": null,
              "id": 13515,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14899,
              "src": "652:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$14899",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "646:26:45",
            "typeName": {
              "id": 13516,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 13520,
            "libraryName": {
              "contractScope": null,
              "id": 13518,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15884,
              "src": "683:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$15884",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "677:46:45",
            "typeName": {
              "contractScope": null,
              "id": 13519,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15789,
              "src": "701:21:45",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$15789_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "id": 13523,
            "libraryName": {
              "contractScope": null,
              "id": 13521,
              "name": "EnumerableMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15489,
              "src": "734:13:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableMap_$15489",
                "typeString": "library EnumerableMap"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "728:55:45",
            "typeName": {
              "contractScope": null,
              "id": 13522,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15314,
              "src": "752:30:45",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            }
          },
          {
            "id": 13526,
            "libraryName": {
              "contractScope": null,
              "id": 13524,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16061,
              "src": "794:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$16061",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "788:26:45",
            "typeName": {
              "id": 13525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 13529,
            "mutability": "constant",
            "name": "_ERC721_RECEIVED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "992:53:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 13527,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783135306237613032",
              "id": 13528,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1035:10:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_353073666_by_1",
                "typeString": "int_const 353073666"
              },
              "value": "0x150b7a02"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13533,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1129:64:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 13532,
              "keyType": {
                "id": 13530,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1138:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1129:42:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 13531,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 15789,
                "src": "1149:21:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$15789_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13535,
            "mutability": "mutable",
            "name": "_tokenOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1257:51:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
              "typeString": "struct EnumerableMap.UintToAddressMap"
            },
            "typeName": {
              "contractScope": null,
              "id": 13534,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15314,
              "src": "1257:30:45",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13539,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1364:52:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 13538,
              "keyType": {
                "id": 13536,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1373:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1364:28:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 13537,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1384:7:45",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13545,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1471:73:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 13544,
              "keyType": {
                "id": 13540,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1480:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1471:46:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 13543,
                "keyType": {
                  "id": 13541,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1500:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1491:25:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 13542,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1511:4:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13547,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1569:20:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13546,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1569:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13549,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1616:22:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13548,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1616:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13553,
            "mutability": "mutable",
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1684:46:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 13552,
              "keyType": {
                "id": 13550,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1693:7:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1684:27:45",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 13551,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1704:6:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13555,
            "mutability": "mutable",
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "1753:23:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 13554,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1753:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 13558,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "2652:57:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 13556,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2652:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783830616335386364",
              "id": 13557,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2699:10:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2158778573_by_1",
                "typeString": "int_const 2158778573"
              },
              "value": "0x80ac58cd"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 13561,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "2975:66:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 13559,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2975:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 13560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3031:10:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 13564,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 14418,
            "src": "3346:68:45",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 13562,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "3346:6:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783738306539643633",
              "id": 13563,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3404:10:45",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2014223715_by_1",
                "typeString": "int_const 2014223715"
              },
              "value": "0x780e9d63"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 13592,
              "nodeType": "Block",
              "src": "3596:303:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13572,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13547,
                      "src": "3606:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13573,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13567,
                      "src": "3614:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3606:12:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13575,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:12:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13576,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13549,
                      "src": "3628:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13577,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13569,
                      "src": "3638:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3628:16:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 13579,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:16:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13581,
                        "name": "_INTERFACE_ID_ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13558,
                        "src": "3751:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 13580,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11686,
                      "src": "3732:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 13582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:40:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13583,
                  "nodeType": "ExpressionStatement",
                  "src": "3732:40:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13585,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13561,
                        "src": "3801:29:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 13584,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11686,
                      "src": "3782:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 13586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:49:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13587,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:49:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13589,
                        "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13564,
                        "src": "3860:31:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 13588,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11686,
                      "src": "3841:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 13590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3841:51:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13591,
                  "nodeType": "ExpressionStatement",
                  "src": "3841:51:45"
                }
              ]
            },
            "documentation": {
              "id": 13565,
              "nodeType": "StructuredDocumentation",
              "src": "3421:108:45",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 13593,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13567,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13593,
                  "src": "3547:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13566,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13569,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13593,
                  "src": "3567:20:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13568,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3546:42:45"
            },
            "returnParameters": {
              "id": 13571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3596:0:45"
            },
            "scope": 14418,
            "src": "3534:365:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14553
            ],
            "body": {
              "id": 13618,
              "nodeType": "Block",
              "src": "4031:138:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13603,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13596,
                          "src": "4049:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4066:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4058:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13604,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4058:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4058:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4049:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 13609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4070:44:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 13602,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4041:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4041:74:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13611,
                  "nodeType": "ExpressionStatement",
                  "src": "4041:74:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13612,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13533,
                          "src": "4133:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 13614,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13613,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13596,
                          "src": "4147:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4133:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$15789_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 13615,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15863,
                      "src": "4133:27:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$15789_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$15789_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 13616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4133:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13601,
                  "id": 13617,
                  "nodeType": "Return",
                  "src": "4126:36:45"
                }
              ]
            },
            "documentation": {
              "id": 13594,
              "nodeType": "StructuredDocumentation",
              "src": "3905:48:45",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 13619,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13598,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4004:8:45"
            },
            "parameters": {
              "id": 13597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13596,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13619,
                  "src": "3977:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13595,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3977:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3976:15:45"
            },
            "returnParameters": {
              "id": 13601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13600,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13619,
                  "src": "4022:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13599,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4022:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4021:9:45"
            },
            "scope": 14418,
            "src": "3958:211:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14561
            ],
            "body": {
              "id": 13634,
              "nodeType": "Block",
              "src": "4299:94:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13630,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13622,
                        "src": "4333:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 13631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4342:43:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13628,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "4316:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 13629,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15488,
                      "src": "4316:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$15314_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"
                      }
                    },
                    "id": 13632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4316:70:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13627,
                  "id": 13633,
                  "nodeType": "Return",
                  "src": "4309:77:45"
                }
              ]
            },
            "documentation": {
              "id": 13620,
              "nodeType": "StructuredDocumentation",
              "src": "4175:46:45",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 13635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13624,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4272:8:45"
            },
            "parameters": {
              "id": 13623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13622,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13635,
                  "src": "4243:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4243:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4242:17:45"
            },
            "returnParameters": {
              "id": 13627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13626,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13635,
                  "src": "4290:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4290:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4289:9:45"
            },
            "scope": 14418,
            "src": "4226:167:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14671
            ],
            "body": {
              "id": 13644,
              "nodeType": "Block",
              "src": "4516:29:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13642,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13547,
                    "src": "4533:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13641,
                  "id": 13643,
                  "nodeType": "Return",
                  "src": "4526:12:45"
                }
              ]
            },
            "documentation": {
              "id": 13636,
              "nodeType": "StructuredDocumentation",
              "src": "4399:51:45",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 13645,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13638,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4483:8:45"
            },
            "parameters": {
              "id": 13637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4468:2:45"
            },
            "returnParameters": {
              "id": 13641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13640,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13645,
                  "src": "4501:13:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4501:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4500:15:45"
            },
            "scope": 14418,
            "src": "4455:90:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14677
            ],
            "body": {
              "id": 13654,
              "nodeType": "Block",
              "src": "4672:31:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13652,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13549,
                    "src": "4689:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13651,
                  "id": 13653,
                  "nodeType": "Return",
                  "src": "4682:14:45"
                }
              ]
            },
            "documentation": {
              "id": 13646,
              "nodeType": "StructuredDocumentation",
              "src": "4551:53:45",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 13655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13648,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4639:8:45"
            },
            "parameters": {
              "id": 13647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4624:2:45"
            },
            "returnParameters": {
              "id": 13651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13650,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13655,
                  "src": "4657:13:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4656:15:45"
            },
            "scope": 14418,
            "src": "4609:94:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14685
            ],
            "body": {
              "id": 13717,
              "nodeType": "Block",
              "src": "4849:660:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13666,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13658,
                            "src": "4875:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13665,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14011,
                          "src": "4867:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 13667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4867:16:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 13668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4885:49:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 13664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4859:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4859:76:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13670,
                  "nodeType": "ExpressionStatement",
                  "src": "4859:76:45"
                },
                {
                  "assignments": [
                    13672
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13672,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 13717,
                      "src": "4946:23:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 13671,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "4946:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13676,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 13673,
                      "name": "_tokenURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13553,
                      "src": "4972:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 13675,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 13674,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13658,
                      "src": "4983:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4972:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4946:45:45"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13679,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13555,
                            "src": "5070:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 13678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5064:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 13677,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5064:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5064:15:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 13681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5064:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5090:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5064:27:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 13687,
                  "nodeType": "IfStatement",
                  "src": "5060:74:45",
                  "trueBody": {
                    "id": 13686,
                    "nodeType": "Block",
                    "src": "5093:41:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 13684,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13672,
                          "src": "5114:9:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 13663,
                        "id": 13685,
                        "nodeType": "Return",
                        "src": "5107:16:45"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 13694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13690,
                            "name": "_tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13672,
                            "src": "5242:9:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 13689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5236:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 13688,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "5236:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5236:16:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 13692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5236:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5262:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5236:27:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 13705,
                  "nodeType": "IfStatement",
                  "src": "5232:110:45",
                  "trueBody": {
                    "id": 13704,
                    "nodeType": "Block",
                    "src": "5265:77:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 13699,
                                  "name": "_baseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13555,
                                  "src": "5310:8:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 13700,
                                  "name": "_tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13672,
                                  "src": "5320:9:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 13697,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5293:3:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 13698,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5293:16:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 13701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5293:37:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 13696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5286:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 13695,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "5286:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5286:45:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 13663,
                        "id": 13703,
                        "nodeType": "Return",
                        "src": "5279:52:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13710,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13555,
                            "src": "5472:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 13711,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13658,
                                "src": "5482:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 13712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16060,
                              "src": "5482:16:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 13713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5482:18:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 13708,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5455:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 13709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5455:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 13714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5455:46:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5448:6:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 13706,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5448:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 13715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5448:54:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 13663,
                  "id": 13716,
                  "nodeType": "Return",
                  "src": "5441:61:45"
                }
              ]
            },
            "documentation": {
              "id": 13656,
              "nodeType": "StructuredDocumentation",
              "src": "4709:55:45",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 13718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13660,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4816:8:45"
            },
            "parameters": {
              "id": 13659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13658,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13718,
                  "src": "4787:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4786:17:45"
            },
            "returnParameters": {
              "id": 13663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13662,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13718,
                  "src": "4834:13:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4833:15:45"
            },
            "scope": 14418,
            "src": "4769:740:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13726,
              "nodeType": "Block",
              "src": "5796:32:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13724,
                    "name": "_baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13555,
                    "src": "5813:8:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 13723,
                  "id": 13725,
                  "nodeType": "Return",
                  "src": "5806:15:45"
                }
              ]
            },
            "documentation": {
              "id": 13719,
              "nodeType": "StructuredDocumentation",
              "src": "5515:221:45",
              "text": " @dev Returns the base URI set via {_setBaseURI}. This will be\n automatically added as a prefix in {tokenURI} to each token's URI, or\n to the token ID if no specific URI is set for that token ID."
            },
            "functionSelector": "6c0360eb",
            "id": 13727,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5757:2:45"
            },
            "returnParameters": {
              "id": 13723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13722,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13727,
                  "src": "5781:13:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 13721,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5780:15:45"
            },
            "scope": 14418,
            "src": "5741:87:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14650
            ],
            "body": {
              "id": 13745,
              "nodeType": "Block",
              "src": "6005:54:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13742,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13732,
                        "src": "6046:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13738,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13533,
                          "src": "6022:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 13740,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13739,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13730,
                          "src": "6036:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6022:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$15789_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 13741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15883,
                      "src": "6022:23:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$15789_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$15789_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 13743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6022:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13737,
                  "id": 13744,
                  "nodeType": "Return",
                  "src": "6015:37:45"
                }
              ]
            },
            "documentation": {
              "id": 13728,
              "nodeType": "StructuredDocumentation",
              "src": "5834:68:45",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
            },
            "functionSelector": "2f745c59",
            "id": 13746,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13734,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5978:8:45"
            },
            "parameters": {
              "id": 13733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13730,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13746,
                  "src": "5936:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5936:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13732,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13746,
                  "src": "5951:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5951:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5935:30:45"
            },
            "returnParameters": {
              "id": 13737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13736,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13746,
                  "src": "5996:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13735,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5996:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5995:9:45"
            },
            "scope": 14418,
            "src": "5907:152:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14640
            ],
            "body": {
              "id": 13757,
              "nodeType": "Block",
              "src": "6192:138:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13753,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "6302:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 13754,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15397,
                      "src": "6302:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$15314_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 13755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6302:21:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13752,
                  "id": 13756,
                  "nodeType": "Return",
                  "src": "6295:28:45"
                }
              ]
            },
            "documentation": {
              "id": 13747,
              "nodeType": "StructuredDocumentation",
              "src": "6065:60:45",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 13758,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13749,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6165:8:45"
            },
            "parameters": {
              "id": 13748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6150:2:45"
            },
            "returnParameters": {
              "id": 13752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13751,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13758,
                  "src": "6183:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6183:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6182:9:45"
            },
            "scope": 14418,
            "src": "6130:200:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14658
            ],
            "body": {
              "id": 13776,
              "nodeType": "Block",
              "src": "6478:85:45",
              "statements": [
                {
                  "assignments": [
                    13768,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13768,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 13776,
                      "src": "6489:15:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 13767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6489:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 13773,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13771,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13761,
                        "src": "6526:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13769,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "6510:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 13770,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15433,
                      "src": "6510:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$15314_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_address_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (uint256,address)"
                      }
                    },
                    "id": 13772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6510:22:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6488:44:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13774,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13768,
                    "src": "6549:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13766,
                  "id": 13775,
                  "nodeType": "Return",
                  "src": "6542:14:45"
                }
              ]
            },
            "documentation": {
              "id": 13759,
              "nodeType": "StructuredDocumentation",
              "src": "6336:61:45",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 13777,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13763,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6451:8:45"
            },
            "parameters": {
              "id": 13762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13761,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13777,
                  "src": "6424:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6424:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6423:15:45"
            },
            "returnParameters": {
              "id": 13766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13765,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13777,
                  "src": "6469:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6469:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6468:9:45"
            },
            "scope": 14418,
            "src": "6402:161:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14589
            ],
            "body": {
              "id": 13818,
              "nodeType": "Block",
              "src": "6690:311:45",
              "statements": [
                {
                  "assignments": [
                    13787
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 13787,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 13818,
                      "src": "6700:13:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13786,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6700:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 13791,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13789,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13782,
                        "src": "6724:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13788,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13635,
                      "src": "6716:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 13790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6716:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6700:32:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13793,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13780,
                          "src": "6750:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 13794,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13787,
                          "src": "6756:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6750:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 13796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6763:35:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 13792,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6742:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6742:57:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13798,
                  "nodeType": "ExpressionStatement",
                  "src": "6742:57:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 13803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13800,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4758,
                              "src": "6818:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 13801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6818:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 13802,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13787,
                            "src": "6834:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6818:21:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 13805,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13787,
                              "src": "6860:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 13806,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4758,
                                "src": "6867:10:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 13807,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6867:12:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 13804,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13892,
                            "src": "6843:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 13808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6843:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6818:62:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 13810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6894:58:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 13799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6810:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6810:152:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13812,
                  "nodeType": "ExpressionStatement",
                  "src": "6810:152:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13814,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13780,
                        "src": "6982:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13815,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13782,
                        "src": "6986:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13813,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14406,
                      "src": "6973:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:21:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13817,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:21:45"
                }
              ]
            },
            "documentation": {
              "id": 13778,
              "nodeType": "StructuredDocumentation",
              "src": "6569:46:45",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 13819,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13784,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6681:8:45"
            },
            "parameters": {
              "id": 13783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13780,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13819,
                  "src": "6637:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6637:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13782,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13819,
                  "src": "6649:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6636:29:45"
            },
            "returnParameters": {
              "id": 13785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6690:0:45"
            },
            "scope": 14418,
            "src": "6620:381:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14597
            ],
            "body": {
              "id": 13839,
              "nodeType": "Block",
              "src": "7139:132:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13830,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13822,
                            "src": "7165:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13829,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14011,
                          "src": "7157:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 13831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7157:16:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 13832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7175:46:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 13828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7149:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7149:73:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13834,
                  "nodeType": "ExpressionStatement",
                  "src": "7149:73:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 13835,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13539,
                      "src": "7240:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 13837,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 13836,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13822,
                      "src": "7256:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7240:24:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 13827,
                  "id": 13838,
                  "nodeType": "Return",
                  "src": "7233:31:45"
                }
              ]
            },
            "documentation": {
              "id": 13820,
              "nodeType": "StructuredDocumentation",
              "src": "7007:50:45",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 13840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13824,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7112:8:45"
            },
            "parameters": {
              "id": 13823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13822,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13840,
                  "src": "7083:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13821,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7083:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7082:17:45"
            },
            "returnParameters": {
              "id": 13827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13826,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13840,
                  "src": "7130:7:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7130:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7129:9:45"
            },
            "scope": 14418,
            "src": "7062:209:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14605
            ],
            "body": {
              "id": 13873,
              "nodeType": "Block",
              "src": "7422:206:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13850,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13843,
                          "src": "7440:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13851,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4758,
                            "src": "7452:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 13852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7452:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7440:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 13854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7466:27:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 13849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7432:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7432:62:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13856,
                  "nodeType": "ExpressionStatement",
                  "src": "7432:62:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13857,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13545,
                          "src": "7505:18:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 13861,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13858,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4758,
                            "src": "7524:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 13859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7524:12:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7505:32:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 13862,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13860,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13843,
                        "src": "7538:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7505:42:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13863,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13845,
                      "src": "7550:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7505:53:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 13865,
                  "nodeType": "ExpressionStatement",
                  "src": "7505:53:45"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 13867,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4758,
                          "src": "7588:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 13868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7588:12:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13869,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13843,
                        "src": "7602:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13870,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13845,
                        "src": "7612:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 13866,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14545,
                      "src": "7573:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 13871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7573:48:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13872,
                  "nodeType": "EmitStatement",
                  "src": "7568:53:45"
                }
              ]
            },
            "documentation": {
              "id": 13841,
              "nodeType": "StructuredDocumentation",
              "src": "7277:56:45",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 13874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7413:8:45"
            },
            "parameters": {
              "id": 13846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13843,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13874,
                  "src": "7365:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7365:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13845,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13874,
                  "src": "7383:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13844,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7383:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7364:33:45"
            },
            "returnParameters": {
              "id": 13848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7422:0:45"
            },
            "scope": 14418,
            "src": "7338:290:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14615
            ],
            "body": {
              "id": 13891,
              "nodeType": "Block",
              "src": "7789:59:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13885,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13545,
                        "src": "7806:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 13887,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13886,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13877,
                        "src": "7825:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7806:25:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 13889,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 13888,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13879,
                      "src": "7832:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7806:35:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 13884,
                  "id": 13890,
                  "nodeType": "Return",
                  "src": "7799:42:45"
                }
              ]
            },
            "documentation": {
              "id": 13875,
              "nodeType": "StructuredDocumentation",
              "src": "7634:55:45",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 13892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13881,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7765:8:45"
            },
            "parameters": {
              "id": 13880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13877,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13892,
                  "src": "7720:13:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7720:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13879,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13892,
                  "src": "7735:16:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13878,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7735:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7719:33:45"
            },
            "returnParameters": {
              "id": 13884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13883,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13892,
                  "src": "7783:4:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13882,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7783:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7782:6:45"
            },
            "scope": 14418,
            "src": "7694:154:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14581
            ],
            "body": {
              "id": 13918,
              "nodeType": "Block",
              "src": "7999:211:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13905,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4758,
                              "src": "8088:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 13906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8088:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13907,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13899,
                            "src": "8102:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13904,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14051,
                          "src": "8069:18:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 13908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8069:41:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 13909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8112:51:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 13903,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8061:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8061:103:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13911,
                  "nodeType": "ExpressionStatement",
                  "src": "8061:103:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13913,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13895,
                        "src": "8185:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13914,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13897,
                        "src": "8191:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13915,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13899,
                        "src": "8195:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13912,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14293,
                      "src": "8175:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8175:28:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13917,
                  "nodeType": "ExpressionStatement",
                  "src": "8175:28:45"
                }
              ]
            },
            "documentation": {
              "id": 13893,
              "nodeType": "StructuredDocumentation",
              "src": "7854:51:45",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 13919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13901,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7990:8:45"
            },
            "parameters": {
              "id": 13900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13895,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13919,
                  "src": "7932:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7932:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13897,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13919,
                  "src": "7946:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7946:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13899,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13919,
                  "src": "7958:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7958:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7931:43:45"
            },
            "returnParameters": {
              "id": 13902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7999:0:45"
            },
            "scope": 14418,
            "src": "7910:300:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14571
            ],
            "body": {
              "id": 13937,
              "nodeType": "Block",
              "src": "8369:56:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13931,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13922,
                        "src": "8396:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13932,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13924,
                        "src": "8402:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13933,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13926,
                        "src": "8406:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 13934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8415:2:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 13930,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13938,
                        13968
                      ],
                      "referencedDeclaration": 13968,
                      "src": "8379:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 13935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8379:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13936,
                  "nodeType": "ExpressionStatement",
                  "src": "8379:39:45"
                }
              ]
            },
            "documentation": {
              "id": 13920,
              "nodeType": "StructuredDocumentation",
              "src": "8216:55:45",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 13938,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13928,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8360:8:45"
            },
            "parameters": {
              "id": 13927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13922,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13938,
                  "src": "8302:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8302:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13924,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13938,
                  "src": "8316:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8316:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13926,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13938,
                  "src": "8328:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13925,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8301:43:45"
            },
            "returnParameters": {
              "id": 13929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8369:0:45"
            },
            "scope": 14418,
            "src": "8276:149:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14627
            ],
            "body": {
              "id": 13967,
              "nodeType": "Block",
              "src": "8604:169:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 13953,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4758,
                              "src": "8641:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 13954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8641:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13955,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13945,
                            "src": "8655:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 13952,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14051,
                          "src": "8622:18:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 13956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8622:41:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 13957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8665:51:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 13951,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8614:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8614:103:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13959,
                  "nodeType": "ExpressionStatement",
                  "src": "8614:103:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13961,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13941,
                        "src": "8741:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13962,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13943,
                        "src": "8747:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13963,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13945,
                        "src": "8751:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13964,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13947,
                        "src": "8760:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 13960,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13997,
                      "src": "8727:13:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 13965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8727:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13966,
                  "nodeType": "ExpressionStatement",
                  "src": "8727:39:45"
                }
              ]
            },
            "documentation": {
              "id": 13939,
              "nodeType": "StructuredDocumentation",
              "src": "8431:55:45",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 13968,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 13949,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8595:8:45"
            },
            "parameters": {
              "id": 13948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13941,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13968,
                  "src": "8517:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8517:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13943,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13968,
                  "src": "8531:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8531:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13945,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13968,
                  "src": "8543:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8543:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13947,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13968,
                  "src": "8560:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13946,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8560:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8516:63:45"
            },
            "returnParameters": {
              "id": 13950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8604:0:45"
            },
            "scope": 14418,
            "src": "8491:282:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13996,
              "nodeType": "Block",
              "src": "9738:166:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13981,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13971,
                        "src": "9758:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13982,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13973,
                        "src": "9764:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13983,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13975,
                        "src": "9768:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13980,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14293,
                      "src": "9748:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9748:28:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13985,
                  "nodeType": "ExpressionStatement",
                  "src": "9748:28:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 13988,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13971,
                            "src": "9817:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13989,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13973,
                            "src": "9823:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13990,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13975,
                            "src": "9827:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 13991,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13977,
                            "src": "9836:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 13987,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14384,
                          "src": "9794:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 13992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9794:48:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 13993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9844:52:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 13986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9786:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9786:111:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13995,
                  "nodeType": "ExpressionStatement",
                  "src": "9786:111:45"
                }
              ]
            },
            "documentation": {
              "id": 13969,
              "nodeType": "StructuredDocumentation",
              "src": "8779:851:45",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 13997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13971,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13997,
                  "src": "9658:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9658:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13973,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13997,
                  "src": "9672:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9672:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13975,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13997,
                  "src": "9684:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13974,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9684:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13977,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13997,
                  "src": "9701:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 13976,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9701:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9657:63:45"
            },
            "returnParameters": {
              "id": 13979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9738:0:45"
            },
            "scope": 14418,
            "src": "9635:269:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14010,
              "nodeType": "Block",
              "src": "10270:54:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14007,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14000,
                        "src": "10309:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14005,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "10287:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 14006,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15383,
                      "src": "10287:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$15314_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 14008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10287:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14004,
                  "id": 14009,
                  "nodeType": "Return",
                  "src": "10280:37:45"
                }
              ]
            },
            "documentation": {
              "id": 13998,
              "nodeType": "StructuredDocumentation",
              "src": "9910:292:45",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 14011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14000,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14011,
                  "src": "10224:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13999,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10224:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10223:17:45"
            },
            "returnParameters": {
              "id": 14004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14003,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14011,
                  "src": "10264:4:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14002,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10264:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10263:6:45"
            },
            "scope": 14418,
            "src": "10207:117:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14050,
              "nodeType": "Block",
              "src": "10573:238:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14023,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14016,
                            "src": "10599:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 14022,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14011,
                          "src": "10591:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 14024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10591:16:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 14025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10609:46:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 14021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10583:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10583:73:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14027,
                  "nodeType": "ExpressionStatement",
                  "src": "10583:73:45"
                },
                {
                  "assignments": [
                    14029
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14029,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14050,
                      "src": "10666:13:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14028,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10666:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14033,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14031,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14016,
                        "src": "10690:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14030,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13635,
                      "src": "10682:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 14032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10682:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10666:32:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 14042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 14036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 14034,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14014,
                              "src": "10716:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 14035,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14029,
                              "src": "10727:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10716:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 14041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 14038,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14016,
                                  "src": "10748:7:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 14037,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13840,
                                "src": "10736:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 14039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10736:20:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 14040,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14014,
                              "src": "10760:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "10736:31:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10716:51:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 14044,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14029,
                              "src": "10788:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 14045,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14014,
                              "src": "10795:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14043,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13892,
                            "src": "10771:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 14046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10771:32:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10716:87:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 14048,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "10715:89:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14020,
                  "id": 14049,
                  "nodeType": "Return",
                  "src": "10708:96:45"
                }
              ]
            },
            "documentation": {
              "id": 14012,
              "nodeType": "StructuredDocumentation",
              "src": "10330:147:45",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 14051,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14014,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14051,
                  "src": "10510:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10510:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14016,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14051,
                  "src": "10527:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10527:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10509:34:45"
            },
            "returnParameters": {
              "id": 14020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14019,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14051,
                  "src": "10567:4:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14018,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10567:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10566:6:45"
            },
            "scope": 14418,
            "src": "10482:329:45",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14065,
              "nodeType": "Block",
              "src": "11207:43:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14060,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14054,
                        "src": "11227:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14061,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14056,
                        "src": "11231:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 14062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11240:2:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 14059,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        14066,
                        14095
                      ],
                      "referencedDeclaration": 14095,
                      "src": "11217:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 14063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11217:26:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14064,
                  "nodeType": "ExpressionStatement",
                  "src": "11217:26:45"
                }
              ]
            },
            "documentation": {
              "id": 14052,
              "nodeType": "StructuredDocumentation",
              "src": "10817:320:45",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\nd*\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 14066,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14054,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14066,
                  "src": "11161:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11161:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14056,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14066,
                  "src": "11173:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11173:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11160:29:45"
            },
            "returnParameters": {
              "id": 14058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11207:0:45"
            },
            "scope": 14418,
            "src": "11142:108:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14094,
              "nodeType": "Block",
              "src": "11556:162:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14077,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14069,
                        "src": "11572:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14078,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14071,
                        "src": "11576:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14076,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14154,
                      "src": "11566:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11566:18:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14080,
                  "nodeType": "ExpressionStatement",
                  "src": "11566:18:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 14085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11633:1:45",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 14084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11625:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 14083,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11625:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 14086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11625:10:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 14087,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14069,
                            "src": "11637:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 14088,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14071,
                            "src": "11641:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 14089,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14073,
                            "src": "11650:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 14082,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14384,
                          "src": "11602:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 14090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11602:54:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 14091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11658:52:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 14081,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11594:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11594:117:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14093,
                  "nodeType": "ExpressionStatement",
                  "src": "11594:117:45"
                }
              ]
            },
            "documentation": {
              "id": 14067,
              "nodeType": "StructuredDocumentation",
              "src": "11256:210:45",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 14095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14069,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14095,
                  "src": "11490:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14068,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11490:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14071,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14095,
                  "src": "11502:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11502:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14073,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14095,
                  "src": "11519:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14072,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11519:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11489:49:45"
            },
            "returnParameters": {
              "id": 14075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11556:0:45"
            },
            "scope": 14418,
            "src": "11471:247:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14153,
              "nodeType": "Block",
              "src": "12101:332:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14104,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14098,
                          "src": "12119:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 14107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12133:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12125:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14105,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12125:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 14108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12125:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "12119:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 14110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12137:34:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 14103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12111:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12111:61:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14112,
                  "nodeType": "ExpressionStatement",
                  "src": "12111:61:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "12190:17:45",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 14115,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14100,
                              "src": "12199:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14114,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14011,
                            "src": "12191:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 14116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12191:16:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 14118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12209:30:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 14113,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12182:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12182:58:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14120,
                  "nodeType": "ExpressionStatement",
                  "src": "12182:58:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12280:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12272:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12272:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12272:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14126,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14098,
                        "src": "12284:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14127,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14100,
                        "src": "12288:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14121,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14417,
                      "src": "12251:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12251:45:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14129,
                  "nodeType": "ExpressionStatement",
                  "src": "12251:45:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14134,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14100,
                        "src": "12329:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 14130,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13533,
                          "src": "12307:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 14132,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 14131,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14098,
                          "src": "12321:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12307:17:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$15789_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 14133,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15809,
                      "src": "12307:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$15789_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$15789_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 14135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12307:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14136,
                  "nodeType": "ExpressionStatement",
                  "src": "12307:30:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14140,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14100,
                        "src": "12365:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14141,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14098,
                        "src": "12374:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14137,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "12348:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 14139,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15343,
                      "src": "12348:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$15314_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 14142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12348:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14143,
                  "nodeType": "ExpressionStatement",
                  "src": "12348:29:45"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12410:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12402:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12402:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12402:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14149,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14098,
                        "src": "12414:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14150,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14100,
                        "src": "12418:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14144,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14527,
                      "src": "12393:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12393:33:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14152,
                  "nodeType": "EmitStatement",
                  "src": "12388:38:45"
                }
              ]
            },
            "documentation": {
              "id": 14096,
              "nodeType": "StructuredDocumentation",
              "src": "11724:311:45",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 14154,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14098,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14154,
                  "src": "12055:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12055:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14100,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14154,
                  "src": "12067:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12067:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12054:29:45"
            },
            "returnParameters": {
              "id": 14102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12101:0:45"
            },
            "scope": 14418,
            "src": "12040:393:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14221,
              "nodeType": "Block",
              "src": "12699:453:45",
              "statements": [
                {
                  "assignments": [
                    14161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14161,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14221,
                      "src": "12709:13:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14160,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12709:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14165,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14163,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "12733:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14162,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13635,
                      "src": "12725:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 14164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12725:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12709:32:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14167,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14161,
                        "src": "12773:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12788:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12780:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12780:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12780:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14172,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "12792:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14166,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14417,
                      "src": "12752:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12752:48:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14174,
                  "nodeType": "ExpressionStatement",
                  "src": "12752:48:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12855:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12847:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14176,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12847:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12847:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14180,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "12859:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14175,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14406,
                      "src": "12838:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12838:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14182,
                  "nodeType": "ExpressionStatement",
                  "src": "12838:29:45"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 14185,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13553,
                              "src": "12923:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 14187,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 14186,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14157,
                              "src": "12934:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12923:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 14184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12917:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 14183,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "12917:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12917:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 14189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "12917:33:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 14190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12954:1:45",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12917:38:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 14198,
                  "nodeType": "IfStatement",
                  "src": "12913:95:45",
                  "trueBody": {
                    "id": 14197,
                    "nodeType": "Block",
                    "src": "12957:51:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 14195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12971:26:45",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 14192,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13553,
                              "src": "12978:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 14194,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 14193,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14157,
                              "src": "12989:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12978:19:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 14196,
                        "nodeType": "ExpressionStatement",
                        "src": "12971:26:45"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14203,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "13046:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 14199,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13533,
                          "src": "13018:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 14201,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 14200,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14161,
                          "src": "13032:5:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13018:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$15789_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 14202,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15829,
                      "src": "13018:27:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$15789_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$15789_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 14204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13018:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14205,
                  "nodeType": "ExpressionStatement",
                  "src": "13018:36:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14209,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "13085:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14206,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "13065:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 14208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15363,
                      "src": "13065:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$15314_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 14210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13065:28:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14211,
                  "nodeType": "ExpressionStatement",
                  "src": "13065:28:45"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14213,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14161,
                        "src": "13118:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13133:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13125:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14214,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13125:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13125:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14218,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14157,
                        "src": "13137:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14212,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14527,
                      "src": "13109:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13109:36:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14220,
                  "nodeType": "EmitStatement",
                  "src": "13104:41:45"
                }
              ]
            },
            "documentation": {
              "id": 14155,
              "nodeType": "StructuredDocumentation",
              "src": "12439:206:45",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 14222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14157,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14222,
                  "src": "12665:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12665:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12664:17:45"
            },
            "returnParameters": {
              "id": 14159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12699:0:45"
            },
            "scope": 14418,
            "src": "12650:502:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14292,
              "nodeType": "Block",
              "src": "13555:480:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 14234,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14229,
                              "src": "13581:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 14233,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13635,
                            "src": "13573:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 14235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13573:16:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 14236,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14225,
                          "src": "13593:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13573:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 14238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13599:43:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 14232,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13565:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13565:78:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14240,
                  "nodeType": "ExpressionStatement",
                  "src": "13565:78:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 14247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14242,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14227,
                          "src": "13661:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 14245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13675:1:45",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 14244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13667:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 14243,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13667:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 14246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13667:10:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "13661:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 14248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13679:38:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 14241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13653:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13653:65:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14250,
                  "nodeType": "ExpressionStatement",
                  "src": "13653:65:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14252,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14225,
                        "src": "13750:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14253,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14227,
                        "src": "13756:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14254,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "13760:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14251,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14417,
                      "src": "13729:20:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13729:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14256,
                  "nodeType": "ExpressionStatement",
                  "src": "13729:39:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 14260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13847:1:45",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 14259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13839:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 14258,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13839:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 14261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13839:10:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14262,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "13851:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14257,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14406,
                      "src": "13830:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 14263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13830:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14264,
                  "nodeType": "ExpressionStatement",
                  "src": "13830:29:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14269,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "13897:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 14265,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13533,
                          "src": "13870:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 14267,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 14266,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14225,
                          "src": "13884:4:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13870:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$15789_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 14268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15829,
                      "src": "13870:26:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$15789_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$15789_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 14270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13870:35:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14271,
                  "nodeType": "ExpressionStatement",
                  "src": "13870:35:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14276,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "13937:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 14272,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13533,
                          "src": "13915:13:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$15789_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 14274,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 14273,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14227,
                          "src": "13929:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13915:17:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$15789_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 14275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15809,
                      "src": "13915:21:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$15789_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$15789_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 14277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13915:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14278,
                  "nodeType": "ExpressionStatement",
                  "src": "13915:30:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14282,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "13973:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14283,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14227,
                        "src": "13982:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14279,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13535,
                        "src": "13956:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$15314_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 14281,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15343,
                      "src": "13956:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$15314_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$15314_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 14284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13956:29:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14285,
                  "nodeType": "ExpressionStatement",
                  "src": "13956:29:45"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14287,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14225,
                        "src": "14010:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14288,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14227,
                        "src": "14016:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14289,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14229,
                        "src": "14020:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14286,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14527,
                      "src": "14001:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14001:27:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14291,
                  "nodeType": "EmitStatement",
                  "src": "13996:32:45"
                }
              ]
            },
            "documentation": {
              "id": 14223,
              "nodeType": "StructuredDocumentation",
              "src": "13158:313:45",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 14293,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14225,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14293,
                  "src": "13495:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13495:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14227,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14293,
                  "src": "13509:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13509:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14229,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14293,
                  "src": "13521:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13521:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13494:43:45"
            },
            "returnParameters": {
              "id": 14231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13555:0:45"
            },
            "scope": 14418,
            "src": "13476:559:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14314,
              "nodeType": "Block",
              "src": "14263:131:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14303,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14296,
                            "src": "14289:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 14302,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14011,
                          "src": "14281:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 14304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14281:16:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
                        "id": 14305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14299:46:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI set of nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        }
                      ],
                      "id": 14301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14273:7:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14273:73:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14307,
                  "nodeType": "ExpressionStatement",
                  "src": "14273:73:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14308,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13553,
                        "src": "14356:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 14310,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 14309,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14296,
                        "src": "14367:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14356:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14311,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14298,
                      "src": "14378:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "14356:31:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 14313,
                  "nodeType": "ExpressionStatement",
                  "src": "14356:31:45"
                }
              ]
            },
            "documentation": {
              "id": 14294,
              "nodeType": "StructuredDocumentation",
              "src": "14041:136:45",
              "text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 14315,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14296,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14315,
                  "src": "14204:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14204:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14298,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14315,
                  "src": "14221:23:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14297,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14221:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14203:42:45"
            },
            "returnParameters": {
              "id": 14300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14263:0:45"
            },
            "scope": 14418,
            "src": "14182:212:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14325,
              "nodeType": "Block",
              "src": "14679:36:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 14321,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13555,
                      "src": "14689:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14322,
                      "name": "baseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14318,
                      "src": "14700:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "14689:19:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 14324,
                  "nodeType": "ExpressionStatement",
                  "src": "14689:19:45"
                }
              ]
            },
            "documentation": {
              "id": 14316,
              "nodeType": "StructuredDocumentation",
              "src": "14400:212:45",
              "text": " @dev Internal function to set the base URI for all token IDs. It is\n automatically added as a prefix to the value returned in {tokenURI},\n or to the token ID if {tokenURI} is empty."
            },
            "id": 14326,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14318,
                  "mutability": "mutable",
                  "name": "baseURI_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14326,
                  "src": "14638:22:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14638:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14637:24:45"
            },
            "returnParameters": {
              "id": 14320,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14679:0:45"
            },
            "scope": 14418,
            "src": "14617:98:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14383,
              "nodeType": "Block",
              "src": "15398:459:45",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 14343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "15412:16:45",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 14340,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14331,
                          "src": "15413:2:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 14341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14724,
                        "src": "15413:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 14342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15413:15:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 14347,
                  "nodeType": "IfStatement",
                  "src": "15408:58:45",
                  "trueBody": {
                    "id": 14346,
                    "nodeType": "Block",
                    "src": "15430:36:45",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 14344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15451:4:45",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 14339,
                        "id": 14345,
                        "nodeType": "Return",
                        "src": "15444:11:45"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    14349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14349,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14383,
                      "src": "15475:23:45",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 14348,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "15475:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14367,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 14355,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14331,
                                    "src": "15569:2:45",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 14354,
                                  "name": "IERC721Receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14704,
                                  "src": "15553:15:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$14704_$",
                                    "typeString": "type(contract IERC721Receiver)"
                                  }
                                },
                                "id": 14356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15553:19:45",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Receiver_$14704",
                                  "typeString": "contract IERC721Receiver"
                                }
                              },
                              "id": 14357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "onERC721Received",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14703,
                              "src": "15553:36:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                              }
                            },
                            "id": 14358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "15553:45:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 14359,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4758,
                              "src": "15612:10:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 14360,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15612:12:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 14361,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14329,
                            "src": "15638:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 14362,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14333,
                            "src": "15656:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 14363,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14335,
                            "src": "15677:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 14352,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15517:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 14353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15517:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 14364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15517:175:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 14365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15694:52:45",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14350,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14331,
                        "src": "15501:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 14351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "functionCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14795,
                      "src": "15501:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 14366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15501:246:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15475:272:45"
                },
                {
                  "assignments": [
                    14369
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14369,
                      "mutability": "mutable",
                      "name": "retval",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 14383,
                      "src": "15757:13:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 14368,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "15757:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 14377,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 14372,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14349,
                        "src": "15784:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 14374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15797:6:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes4_$",
                              "typeString": "type(bytes4)"
                            },
                            "typeName": {
                              "id": 14373,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "15797:6:45",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          }
                        ],
                        "id": 14375,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15796:8:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 14370,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "15773:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 14371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "15773:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 14376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15773:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15757:48:45"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 14380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 14378,
                          "name": "retval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14369,
                          "src": "15823:6:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 14379,
                          "name": "_ERC721_RECEIVED",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13529,
                          "src": "15833:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "15823:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 14381,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15822:28:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14339,
                  "id": 14382,
                  "nodeType": "Return",
                  "src": "15815:35:45"
                }
              ]
            },
            "documentation": {
              "id": 14327,
              "nodeType": "StructuredDocumentation",
              "src": "14721:542:45",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 14384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14329,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14384,
                  "src": "15300:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14328,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15300:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14331,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14384,
                  "src": "15314:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15314:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14333,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14384,
                  "src": "15326:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14332,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15326:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14335,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14384,
                  "src": "15343:18:45",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14334,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15343:5:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15299:63:45"
            },
            "returnParameters": {
              "id": 14339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14338,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14384,
                  "src": "15388:4:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14337,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15388:4:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15387:6:45"
            },
            "scope": 14418,
            "src": "15268:589:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 14405,
              "nodeType": "Block",
              "src": "15918:100:45",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 14395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 14391,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13539,
                        "src": "15928:15:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 14393,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 14392,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14388,
                        "src": "15944:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15928:24:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14394,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14386,
                      "src": "15955:2:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15928:29:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14396,
                  "nodeType": "ExpressionStatement",
                  "src": "15928:29:45"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 14399,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14388,
                            "src": "15989:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 14398,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13635,
                          "src": "15981:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 14400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15981:16:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14401,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14386,
                        "src": "15999:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 14402,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14388,
                        "src": "16003:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 14397,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14536,
                      "src": "15972:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 14403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15972:39:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14404,
                  "nodeType": "EmitStatement",
                  "src": "15967:44:45"
                }
              ]
            },
            "documentation": null,
            "id": 14406,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14386,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14406,
                  "src": "15881:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15881:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14388,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14406,
                  "src": "15893:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15893:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15880:29:45"
            },
            "returnParameters": {
              "id": 14390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15918:0:45"
            },
            "scope": 14418,
            "src": "15863:155:45",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 14416,
              "nodeType": "Block",
              "src": "16704:3:45",
              "statements": []
            },
            "documentation": {
              "id": 14407,
              "nodeType": "StructuredDocumentation",
              "src": "16024:585:45",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 14417,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 14414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14409,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14417,
                  "src": "16644:12:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16644:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14411,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14417,
                  "src": "16658:10:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16658:7:45",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14413,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 14417,
                  "src": "16670:15:45",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16670:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16643:43:45"
            },
            "returnParameters": {
              "id": 14415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16704:0:45"
            },
            "scope": 14418,
            "src": "16614:93:45",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 14419,
        "src": "528:16181:45"
      }
    ],
    "src": "0:16710:45"
  },
  "bytecode": "",
  "bytecodeSha1": "7c544c19e27222ead2abd0f02ad6abc580d0fa48",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "11": {},
      "33": {},
      "34": {},
      "36": {},
      "45": {
        "ERC721._checkOnERC721Received": {
          "101": [
            15413,
            15428,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "97": [
            10591,
            10607,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "100": [
            9794,
            9842,
            true
          ]
        },
        "ERC721._transfer": {
          "98": [
            13573,
            13597,
            true
          ],
          "99": [
            13661,
            13677,
            true
          ]
        },
        "ERC721.approve": {
          "88": [
            6750,
            6761,
            true
          ],
          "89": [
            6818,
            6839,
            true
          ],
          "90": [
            6843,
            6880,
            true
          ]
        },
        "ERC721.balanceOf": {
          "92": [
            4049,
            4068,
            true
          ]
        },
        "ERC721.getApproved": {
          "87": [
            7157,
            7173,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "94": [
            8622,
            8663,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "93": [
            7440,
            7464,
            true
          ]
        },
        "ERC721.tokenURI": {
          "95": [
            4867,
            4883,
            true
          ],
          "96": [
            5236,
            5263,
            false
          ]
        },
        "ERC721.transferFrom": {
          "91": [
            8069,
            8110,
            true
          ]
        }
      },
      "49": {},
      "50": {},
      "51": {},
      "52": {},
      "53": {
        "Address._functionCallWithValue": {
          "102": [
            5049,
            5067,
            true
          ],
          "103": [
            5263,
            5270,
            false
          ],
          "104": [
            5404,
            5425,
            false
          ]
        }
      },
      "56": {
        "EnumerableMap._at": {
          "105": [
            5004,
            5031,
            true
          ]
        },
        "EnumerableMap._get": {
          "106": [
            5749,
            5762,
            true
          ]
        },
        "EnumerableMap._set": {
          "107": [
            2036,
            2049,
            false
          ]
        }
      },
      "57": {
        "EnumerableSet._add": {
          "110": [
            1662,
            1683,
            false
          ]
        },
        "EnumerableSet._at": {
          "108": [
            4484,
            4510,
            true
          ]
        },
        "EnumerableSet._remove": {
          "109": [
            2387,
            2402,
            false
          ]
        }
      },
      "59": {
        "Strings.toString": {
          "111": [
            442,
            452,
            false
          ]
        }
      }
    },
    "statements": {
      "11": {
        "Context._msgSender": {
          "28": [
            637,
            654
          ]
        }
      },
      "33": {
        "ERC165.supportsInterface": {
          "0": [
            1041,
            1081
          ]
        }
      },
      "34": {},
      "36": {},
      "45": {
        "ERC721._approve": {
          "29": [
            15928,
            15957
          ],
          "30": [
            15967,
            16011
          ]
        },
        "ERC721._checkOnERC721Received": {
          "64": [
            15444,
            15455
          ],
          "65": [
            15815,
            15850
          ]
        },
        "ERC721._exists": {
          "27": [
            10280,
            10317
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "32": [
            10583,
            10656
          ],
          "33": [
            10708,
            10804
          ]
        },
        "ERC721._safeTransfer": {
          "44": [
            9748,
            9776
          ],
          "45": [
            9786,
            9897
          ]
        },
        "ERC721._transfer": {
          "34": [
            13565,
            13643
          ],
          "35": [
            13653,
            13718
          ],
          "36": [
            13729,
            13768
          ],
          "37": [
            13830,
            13859
          ],
          "38": [
            13870,
            13905
          ],
          "39": [
            13915,
            13945
          ],
          "40": [
            13956,
            13985
          ],
          "41": [
            13996,
            14028
          ]
        },
        "ERC721.approve": {
          "4": [
            6742,
            6799
          ],
          "5": [
            6810,
            6962
          ],
          "6": [
            6973,
            6994
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            4041,
            4115
          ],
          "15": [
            4126,
            4162
          ]
        },
        "ERC721.baseURI": {
          "13": [
            5806,
            5821
          ]
        },
        "ERC721.getApproved": {
          "2": [
            7149,
            7222
          ],
          "3": [
            7233,
            7264
          ]
        },
        "ERC721.isApprovedForAll": {
          "26": [
            7799,
            7841
          ]
        },
        "ERC721.name": {
          "1": [
            4526,
            4538
          ]
        },
        "ERC721.ownerOf": {
          "12": [
            4309,
            4386
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            8379,
            8418
          ],
          "20": [
            8614,
            8717
          ],
          "21": [
            8727,
            8766
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            7432,
            7494
          ],
          "18": [
            7505,
            7558
          ],
          "19": [
            7568,
            7621
          ]
        },
        "ERC721.symbol": {
          "16": [
            4682,
            4696
          ]
        },
        "ERC721.tokenOfOwnerByIndex": {
          "10": [
            6015,
            6052
          ]
        },
        "ERC721.tokenURI": {
          "22": [
            4859,
            4935
          ],
          "23": [
            5107,
            5123
          ],
          "24": [
            5279,
            5331
          ],
          "25": [
            5441,
            5502
          ]
        },
        "ERC721.totalSupply": {
          "7": [
            6295,
            6323
          ]
        },
        "ERC721.transferFrom": {
          "8": [
            8061,
            8164
          ],
          "9": [
            8175,
            8203
          ]
        }
      },
      "49": {},
      "50": {},
      "51": {},
      "52": {},
      "53": {
        "Address._functionCallWithValue": {
          "84": [
            5041,
            5101
          ],
          "85": [
            5286,
            5303
          ],
          "86": [
            5794,
            5814
          ]
        },
        "Address.functionCall": {
          "83": [
            3667,
            3727
          ]
        },
        "Address.isContract": {
          "82": [
            1076,
            1091
          ]
        }
      },
      "56": {
        "EnumerableMap._at": {
          "60": [
            4996,
            5070
          ],
          "61": [
            5135,
            5168
          ]
        },
        "EnumerableMap._contains": {
          "66": [
            4324,
            4353
          ]
        },
        "EnumerableMap._get": {
          "62": [
            5741,
            5777
          ],
          "63": [
            5823,
            5863
          ]
        },
        "EnumerableMap._length": {
          "54": [
            4525,
            4551
          ]
        },
        "EnumerableMap._set": {
          "77": [
            2102,
            2159
          ],
          "78": [
            2294,
            2333
          ],
          "79": [
            2347,
            2358
          ],
          "80": [
            2389,
            2430
          ],
          "81": [
            2444,
            2456
          ]
        },
        "EnumerableMap.contains": {
          "53": [
            6858,
            6900
          ]
        },
        "EnumerableMap.get": {
          "43": [
            8208,
            8277
          ]
        },
        "EnumerableMap.length": {
          "31": [
            7078,
            7104
          ]
        },
        "EnumerableMap.set": {
          "57": [
            6311,
            6373
          ]
        }
      },
      "57": {
        "EnumerableSet._add": {
          "73": [
            1699,
            1722
          ],
          "74": [
            1857,
            1897
          ],
          "75": [
            1911,
            1922
          ],
          "76": [
            1953,
            1965
          ]
        },
        "EnumerableSet._at": {
          "58": [
            4476,
            4549
          ],
          "59": [
            4559,
            4584
          ]
        },
        "EnumerableSet._remove": {
          "67": [
            3212,
            3250
          ],
          "68": [
            3316,
            3359
          ],
          "69": [
            3465,
            3482
          ],
          "70": [
            3550,
            3576
          ],
          "71": [
            3591,
            3602
          ],
          "72": [
            3633,
            3645
          ]
        },
        "EnumerableSet.add": {
          "56": [
            6517,
            6556
          ]
        },
        "EnumerableSet.at": {
          "42": [
            7706,
            7744
          ]
        },
        "EnumerableSet.remove": {
          "55": [
            6817,
            6859
          ]
        }
      },
      "59": {
        "Strings.toString": {
          "46": [
            468,
            478
          ],
          "47": [
            584,
            592
          ],
          "48": [
            606,
            616
          ],
          "49": [
            721,
            733
          ],
          "50": [
            775,
            820
          ],
          "51": [
            834,
            844
          ],
          "52": [
            864,
            885
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "EnumerableMap",
    "EnumerableSet",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "IERC721Receiver",
    "SafeMath",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b5035610549565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ab565b005b610237610686565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b03813581169160208101359091169060400135610697565b6102376004803603604081101561029557600080fd5b506001600160a01b0381351690602001356106ee565b61022d600480360360608110156102c157600080fd5b506001600160a01b03813581169160208101359091169060400135610719565b610237600480360360208110156102f757600080fd5b5035610734565b6101e56004803603602081101561031457600080fd5b503561074a565b610153610772565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166107d3565b61015361083b565b61022d6004803603604081101561036757600080fd5b506001600160a01b038135169060200135151561089c565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109a1945050505050565b6101536004803603602081101561045b57600080fd5b50356109ff565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610ca6565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600061055482610cd4565b61058f5760405162461bcd60e51b815260040180806020018281038252602c815260200180611897602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105b68261074a565b9050806001600160a01b0316836001600160a01b031614156106095760405162461bcd60e51b815260040180806020018281038252602181526020018061191b6021913960400191505060405180910390fd5b806001600160a01b031661061b610ce1565b6001600160a01b0316148061063c575061063c81610637610ce1565b610ca6565b6106775760405162461bcd60e51b81526004018080602001828103825260388152602001806117ea6038913960400191505060405180910390fd5b6106818383610ce5565b505050565b60006106926002610d53565b905090565b6106a86106a2610ce1565b82610d5e565b6106e35760405162461bcd60e51b815260040180806020018281038252603181526020018061193c6031913960400191505060405180910390fd5b610681838383610e02565b6001600160a01b03821660009081526001602052604081206107109083610f4e565b90505b92915050565b610681838383604051806020016040528060008152506109a1565b600080610742600284610f5a565b509392505050565b60006107138260405180606001604052806029815260200161184c6029913960029190610f76565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b03821661081a5760405162461bcd60e51b815260040180806020018281038252602a815260200180611822602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061071390610d53565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6108a4610ce1565b6001600160a01b0316826001600160a01b0316141561090a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610917610ce1565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561095b610ce1565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6109b26109ac610ce1565b83610d5e565b6109ed5760405162461bcd60e51b815260040180806020018281038252603181526020018061193c6031913960400191505060405180910390fd5b6109f984848484610f8d565b50505050565b6060610a0a82610cd4565b610a455760405162461bcd60e51b815260040180806020018281038252602f8152602001806118ec602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505060095493945050505060026000196101006001841615020190911604610b035790506104ae565b805115610bd4576009816040516020018083805460018160011615610100020316600290048015610b6b5780601f10610b49576101008083540402835291820191610b6b565b820191906000526020600020905b815481529060010190602001808311610b57575b5050825160208401908083835b60208310610b975780518252601f199092019160209182019101610b78565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104ae565b6009610bdf84610fdf565b6040516020018083805460018160011615610100020316600290048015610c3d5780601f10610c1b576101008083540402835291820191610c3d565b820191906000526020600020905b815481529060010190602001808311610c29575b5050825160208401908083835b60208310610c695780518252601f199092019160209182019101610c4a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006107136002836110ba565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d1a8261074a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610713826110c6565b6000610d6982610cd4565b610da45760405162461bcd60e51b815260040180806020018281038252602c8152602001806117be602c913960400191505060405180910390fd5b6000610daf8361074a565b9050806001600160a01b0316846001600160a01b03161480610dea5750836001600160a01b0316610ddf84610549565b6001600160a01b0316145b80610dfa5750610dfa8185610ca6565b949350505050565b826001600160a01b0316610e158261074a565b6001600160a01b031614610e5a5760405162461bcd60e51b81526004018080602001828103825260298152602001806118c36029913960400191505060405180910390fd5b6001600160a01b038216610e9f5760405162461bcd60e51b815260040180806020018281038252602481526020018061179a6024913960400191505060405180910390fd5b610eaa838383610681565b610eb5600082610ce5565b6001600160a01b0383166000908152600160205260409020610ed790826110ca565b506001600160a01b0382166000908152600160205260409020610efa90826110d6565b50610f07600282846110e2565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061071083836110f8565b6000808080610f69868661115c565b9097909650945050505050565b6000610f838484846111d7565b90505b9392505050565b610f98848484610e02565b610fa4848484846112a1565b6109f95760405162461bcd60e51b81526004018080602001828103825260328152602001806117686032913960400191505060405180910390fd5b60608161100457506040805180820190915260018152600360fc1b60208201526104ae565b8160005b811561101c57600101600a82049150611008565b60608167ffffffffffffffff8111801561103557600080fd5b506040519080825280601f01601f191660200182016040528015611060576020820181803683370190505b50859350905060001982015b83156110b157600a840660300160f81b8282806001900393508151811061108f57fe5b60200101906001600160f81b031916908160001a905350600a8404935061106c565b50949350505050565b60006107108383611409565b5490565b60006107108383611421565b600061071083836114e7565b6000610f8384846001600160a01b038516611531565b8154600090821061113a5760405162461bcd60e51b81526004018080602001828103825260228152602001806117466022913960400191505060405180910390fd5b82600001828154811061114957fe5b9060005260206000200154905092915050565b8154600090819083106111a05760405162461bcd60e51b81526004018080602001828103825260228152602001806118756022913960400191505060405180910390fd5b60008460000184815481106111b157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816112725760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561123757818101518382015260200161121f565b50505050905090810190601f1680156112645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061128557fe5b9060005260206000209060020201600101549150509392505050565b60006112b5846001600160a01b03166115c8565b6112c157506001610dfa565b60606113cf630a85bd0160e11b6112d6610ce1565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561133d578181015183820152602001611325565b50505050905090810190601f16801561136a5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001611768603291396001600160a01b03881691906115ce565b905060008180602001905160208110156113e857600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600081815260018301602052604081205480156114dd578354600019808301919081019060009087908390811061145457fe5b906000526020600020015490508087600001848154811061147157fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806114a157fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610713565b6000915050610713565b60006114f38383611409565b61152957508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610713565b506000610713565b600082815260018401602052604081205480611596575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f86565b828560000160018303815481106115a957fe5b9060005260206000209060020201600101819055506000915050610f86565b3b151590565b6060610f83848460008560606115e3856115c8565b611634576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106116735780518252601f199092019160209182019101611654565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146116d5576040519150601f19603f3d011682016040523d82523d6000602084013e6116da565b606091505b509150915081156116ee579150610dfa9050565b8051156116fe5780518082602001fd5b60405162461bcd60e51b815260206004820181815286516024840152865187939192839260440191908501908083836000831561123757818101518382015260200161121f56fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a26469706673582212200e10e789a8851af80f81d3d8777333a9a3a4c1ddf58498d80a978073c1cc024e64736f6c634300060c0033",
  "deployedSourceMap": "528:16181:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:140:33;;;;;;;;;;;;;;;;-1:-1:-1;948:140:33;-1:-1:-1;;;;;;948:140:33;;:::i;:::-;;;;;;;;;;;;;;;;;;4455:90:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7062:209;;;;;;;;;;;;;;;;-1:-1:-1;7062:209:45;;:::i;:::-;;;;-1:-1:-1;;;;;7062:209:45;;;;;;;;;;;;;;6620:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6620:381:45;;;;;;;;:::i;:::-;;6130:200;;;:::i;:::-;;;;;;;;;;;;;;;;7910:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7910:300:45;;;;;;;;;;;;;;;;;:::i;5907:152::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5907:152:45;;;;;;;;:::i;8276:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8276:149:45;;;;;;;;;;;;;;;;;:::i;6402:161::-;;;;;;;;;;;;;;;;-1:-1:-1;6402:161:45;;:::i;4226:167::-;;;;;;;;;;;;;;;;-1:-1:-1;4226:167:45;;:::i;5741:87::-;;;:::i;3958:211::-;;;;;;;;;;;;;;;;-1:-1:-1;3958:211:45;-1:-1:-1;;;;;3958:211:45;;:::i;4609:94::-;;;:::i;7338:290::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7338:290:45;;;;;;;;;;:::i;8491:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8491:282:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8491:282:45;;-1:-1:-1;8491:282:45;;-1:-1:-1;;;;;8491:282:45:i;4769:740::-;;;;;;;;;;;;;;;;-1:-1:-1;4769:740:45;;:::i;7694:154::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7694:154:45;;;;;;;;;;:::i;948:140:33:-;-1:-1:-1;;;;;;1048:33:33;;1025:4;1048:33;;;;;;;;;;;;;948:140;;;;:::o;4455:90:45:-;4533:5;4526:12;;;;;;;;-1:-1:-1;;4526:12:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4501:13;;4526:12;;4533:5;;4526:12;;4533:5;4526:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4455:90;:::o;7062:209::-;7130:7;7157:16;7165:7;7157;:16::i;:::-;7149:73;;;;-1:-1:-1;;;7149:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7240:24:45;;;;:15;:24;;;;;;-1:-1:-1;;;;;7240:24:45;;7062:209::o;6620:381::-;6700:13;6716:16;6724:7;6716;:16::i;:::-;6700:32;;6756:5;-1:-1:-1;;;;;6750:11:45;:2;-1:-1:-1;;;;;6750:11:45;;;6742:57;;;;-1:-1:-1;;;6742:57:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6834:5;-1:-1:-1;;;;;6818:21:45;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6818:21:45;;:62;;;;6843:37;6860:5;6867:12;:10;:12::i;:::-;6843:16;:37::i;:::-;6810:152;;;;-1:-1:-1;;;6810:152:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6973:21;6982:2;6986:7;6973:8;:21::i;:::-;6620:381;;;:::o;6130:200::-;6183:7;6302:21;:12;:19;:21::i;:::-;6295:28;;6130:200;:::o;7910:300::-;8069:41;8088:12;:10;:12::i;:::-;8102:7;8069:18;:41::i;:::-;8061:103;;;;-1:-1:-1;;;8061:103:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8175:28;8185:4;8191:2;8195:7;8175:9;:28::i;5907:152::-;-1:-1:-1;;;;;6022:20:45;;5996:7;6022:20;;;:13;:20;;;;;:30;;6046:5;6022:23;:30::i;:::-;6015:37;;5907:152;;;;;:::o;8276:149::-;8379:39;8396:4;8402:2;8406:7;8379:39;;;;;;;;;;;;:16;:39::i;6402:161::-;6469:7;;6510:22;:12;6526:5;6510:15;:22::i;:::-;-1:-1:-1;6488:44:45;6402:161;-1:-1:-1;;;6402:161:45:o;4226:167::-;4290:7;4316:70;4333:7;4316:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;5741:87::-;5813:8;5806:15;;;;;;;;-1:-1:-1;;5806:15:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5781:13;;5806:15;;5813:8;;5806:15;;5813:8;5806:15;;;;;;;;;;;;;;;;;;;;;;;;3958:211;4022:7;-1:-1:-1;;;;;4049:19:45;;4041:74;;;;-1:-1:-1;;;4041:74:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4133:20:45;;;;;;:13;:20;;;;;:29;;:27;:29::i;4609:94::-;4689:7;4682:14;;;;;;;;-1:-1:-1;;4682:14:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4657:13;;4682:14;;4689:7;;4682:14;;4689:7;4682:14;;;;;;;;;;;;;;;;;;;;;;;;7338:290;7452:12;:10;:12::i;:::-;-1:-1:-1;;;;;7440:24:45;:8;-1:-1:-1;;;;;7440:24:45;;;7432:62;;;;;-1:-1:-1;;;7432:62:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;7550:8;7505:18;:32;7524:12;:10;:12::i;:::-;-1:-1:-1;;;;;7505:32:45;;;;;;;;;;;;;;;;;-1:-1:-1;7505:32:45;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;7505:53:45;;;;;;;;;;;7588:12;:10;:12::i;:::-;-1:-1:-1;;;;;7573:48:45;;7612:8;7573:48;;;;;;;;;;;;;;;;;;;;7338:290;;:::o;8491:282::-;8622:41;8641:12;:10;:12::i;:::-;8655:7;8622:18;:41::i;:::-;8614:103;;;;-1:-1:-1;;;8614:103:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8727:39;8741:4;8747:2;8751:7;8760:5;8727:13;:39::i;:::-;8491:282;;;;:::o;4769:740::-;4834:13;4867:16;4875:7;4867;:16::i;:::-;4859:76;;;;-1:-1:-1;;;4859:76:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:19;;;;:10;:19;;;;;;;;;4946:45;;;;;;-1:-1:-1;;4946:45:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;4972:19;4946:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5070:8:45;5064:22;4946:45;;-1:-1:-1;;;;5064:22:45;-1:-1:-1;;5064:22:45;;;;;;;;;;;5060:74;;5114:9;-1:-1:-1;5107:16:45;;5060:74;5236:23;;:27;5232:110;;5310:8;5320:9;5293:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5293:37:45;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5293:37:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5279:52;;;;;5232:110;5472:8;5482:18;:7;:16;:18::i;:::-;5455:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5455:46:45;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5455:46:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5441:61;;;4769:740;;;:::o;7694:154::-;-1:-1:-1;;;;;7806:25:45;;;7783:4;7806:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7694:154::o;10207:117::-;10264:4;10287:30;:12;10309:7;10287:21;:30::i;557:104:11:-;644:10;557:104;:::o;15863:155:45:-;15928:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15928:29:45;-1:-1:-1;;;;;15928:29:45;;;;;;;;:24;;15981:16;15928:24;15981:7;:16::i;:::-;-1:-1:-1;;;;;15972:39:45;;;;;;;;;;;15863:155;;:::o;6990:121:56:-;7059:7;7085:19;7093:3;7085:7;:19::i;10482:329:45:-;10567:4;10591:16;10599:7;10591;:16::i;:::-;10583:73;;;;-1:-1:-1;;;10583:73:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10666:13;10682:16;10690:7;10682;:16::i;:::-;10666:32;;10727:5;-1:-1:-1;;;;;10716:16:45;:7;-1:-1:-1;;;;;10716:16:45;;:51;;;;10760:7;-1:-1:-1;;;;;10736:31:45;:20;10748:7;10736:11;:20::i;:::-;-1:-1:-1;;;;;10736:31:45;;10716:51;:87;;;;10771:32;10788:5;10795:7;10771:16;:32::i;:::-;10708:96;10482:329;-1:-1:-1;;;;10482:329:45:o;13476:559::-;13593:4;-1:-1:-1;;;;;13573:24:45;:16;13581:7;13573;:16::i;:::-;-1:-1:-1;;;;;13573:24:45;;13565:78;;;;-1:-1:-1;;;13565:78:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13661:16:45;;13653:65;;;;-1:-1:-1;;;13653:65:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13729:39;13750:4;13756:2;13760:7;13729:20;:39::i;:::-;13830:29;13847:1;13851:7;13830:8;:29::i;:::-;-1:-1:-1;;;;;13870:19:45;;;;;;:13;:19;;;;;:35;;13897:7;13870:26;:35::i;:::-;-1:-1:-1;;;;;;13915:17:45;;;;;;:13;:17;;;;;:30;;13937:7;13915:21;:30::i;:::-;-1:-1:-1;13956:29:45;:12;13973:7;13982:2;13956:16;:29::i;:::-;;14020:7;14016:2;-1:-1:-1;;;;;14001:27:45;14010:4;-1:-1:-1;;;;;14001:27:45;;;;;;;;;;;13476:559;;;:::o;7616:135:57:-;7687:7;7721:22;7725:3;7737:5;7721:3;:22::i;7439:224:56:-;7519:7;;;;7578:22;7582:3;7594:5;7578:3;:22::i;:::-;7547:53;;;;-1:-1:-1;7439:224:56;-1:-1:-1;;;;;7439:224:56:o;8082:202::-;8189:7;8231:44;8236:3;8256;8262:12;8231:4;:44::i;:::-;8223:53;-1:-1:-1;8082:202:56;;;;;;:::o;9635:269:45:-;9748:28;9758:4;9764:2;9768:7;9748:9;:28::i;:::-;9794:48;9817:4;9823:2;9827:7;9836:5;9794:22;:48::i;:::-;9786:111;;;;-1:-1:-1;;;9786:111:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:723:59;225:13;442:10;438:51;;-1:-1:-1;468:10:59;;;;;;;;;;;;-1:-1:-1;;;468:10:59;;;;;;438:51;513:5;498:12;552:75;559:9;;552:75;;584:8;;614:2;606:10;;;;552:75;;;636:19;668:6;658:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;658:17:59;-1:-1:-1;728:5:59;;-1:-1:-1;636:39:59;-1:-1:-1;;;701:10:59;;743:112;750:9;;743:112;;816:2;809:4;:9;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;-1:-1:-1;;;;;775:45:59;;;;;;;;-1:-1:-1;842:2:59;834:10;;;;743:112;;;-1:-1:-1;878:6:59;169:723;-1:-1:-1;;;;169:723:59:o;6758:149:56:-;6842:4;6865:35;6875:3;6895;6865:9;:35::i;4450:108::-;4532:19;;4450:108::o;6731:135:57:-;6801:4;6824:35;6832:3;6852:5;6824:7;:35::i;6434:129::-;6501:4;6524:32;6529:3;6549:5;6524:4;:32::i;6206:174:56:-;6295:4;6318:55;6323:3;6343;-1:-1:-1;;;;;6357:14:56;;6318:4;:55::i;4390:201:57:-;4484:18;;4457:7;;4484:26;-1:-1:-1;4476:73:57;;;;-1:-1:-1;;;4476:73:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;4901:274:56:-;5004:19;;4968:7;;;;5004:27;-1:-1:-1;4996:74:56;;;;-1:-1:-1;;;4996:74:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;5582:315::-;5676:7;5714:17;;;:12;;;:17;;;;;;5764:12;5749:13;5741:36;;;;-1:-1:-1;;;5741:36:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;15268:589:45:-;15388:4;15413:15;:2;-1:-1:-1;;;;;15413:13:45;;:15::i;:::-;15408:58;;-1:-1:-1;15451:4:45;15444:11;;15408:58;15475:23;15501:246;-1:-1:-1;;;15612:12:45;:10;:12::i;:::-;15638:4;15656:7;15677:5;15517:175;;;;;;-1:-1:-1;;;;;15517:175:45;;;;;;-1:-1:-1;;;;;15517:175:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15517:175:45;;;;;;;-1:-1:-1;;;;;15517:175:45;;;;;;;;;;;15501:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15501:15:45;;;:246;:15;:246::i;:::-;15475:272;;15757:13;15784:10;15773:32;;;;;;;;;;;;;;;-1:-1:-1;15773:32:45;-1:-1:-1;;;;;;15823:26:45;-1:-1:-1;;;15823:26:45;;-1:-1:-1;;;15268:589:45;;;;;;:::o;4237:123:56:-;4308:4;4331:17;;;:12;;;;;:17;;;;;;:22;;;4237:123::o;2150:1512:57:-;2216:4;2353:19;;;:12;;;:19;;;;;;2387:15;;2383:1273;;2816:18;;-1:-1:-1;;2768:14:57;;;;2816:22;;;;2744:21;;2816:3;;:22;;3098;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;;;;;:38;;;;3316:23;;;3358:1;3316:12;;;:23;;;;;;3342:17;;;3316:43;;3465:17;;3316:3;;3465:17;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;;;1578:404;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;-1:-1:-1;1699:23:57;;;;;;;;:11;:23;;;;;;;;;;;;;1879:18;;1857:19;;;:12;;;:19;;;;;;:40;;;;1911:11;;1657:319;-1:-1:-1;1960:5:57;1953:12;;1795:678:56;1871:4;2004:17;;;:12;;;:17;;;;;;2036:13;2032:435;;-1:-1:-1;;2120:38:56;;;;;;;;;;;;;;;;;;2102:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2314:19;;2294:17;;;:12;;;:17;;;;;;;:39;2347:11;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;;;685:413:53;1045:20;1083:8;;;685:413::o;3540:194::-;3643:12;3674:53;3697:6;3705:4;3711:1;3714:12;5017;5049:18;5060:6;5049:10;:18::i;:::-;5041:60;;;;;-1:-1:-1;;;5041:60:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;5172:12;5186:23;5213:6;-1:-1:-1;;;;;5213:11:53;5233:8;5244:4;5213:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5213:36:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5171:78;;;;5263:7;5259:580;;;5293:10;-1:-1:-1;5286:17:53;;-1:-1:-1;5286:17:53;5259:580;5404:17;;:21;5400:429;;5662:10;5656:17;5722:15;5709:10;5705:2;5701:19;5694:44;5611:145;5794:20;;-1:-1:-1;;;5794:20:53;;;;;;;;;;;;;;;;;5801:12;;5794:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "title": "ERC721 Non-Fungible Token Standard basic implementation",
    "version": 1
  },
  "offset": [
    528,
    16709
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x462 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2AB JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x201 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x74A JUMP JUMPDEST PUSH2 0x153 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x89C JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x9A1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x522 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 DUP3 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1897 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x191B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x63C JUMPI POP PUSH2 0x63C DUP2 PUSH2 0x637 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17EA PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 PUSH2 0xCE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x692 PUSH1 0x2 PUSH2 0xD53 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x6A2 PUSH2 0xCE1 JUMP JUMPDEST DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x193C PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x710 SWAP1 DUP4 PUSH2 0xF4E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x742 PUSH1 0x2 DUP5 PUSH2 0xF5A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x184C PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1822 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x713 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x8A4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x917 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x95B PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x9AC PUSH2 0xCE1 JUMP JUMPDEST DUP4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x193C PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0A DUP3 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18EC PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xADA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP PUSH1 0x9 SLOAD SWAP4 SWAP5 POP POP POP POP PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0xB03 JUMPI SWAP1 POP PUSH2 0x4AE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x9 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB49 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB57 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB97 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x9 PUSH2 0xBDF DUP5 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xC3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC29 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xC69 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 PUSH1 0x2 DUP4 PUSH2 0x10BA JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD1A DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 DUP3 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17BE PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDEA JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDDF DUP5 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xDFA JUMPI POP PUSH2 0xDFA DUP2 DUP6 PUSH2 0xCA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE15 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18C3 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x179A PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP4 DUP4 DUP4 PUSH2 0x681 JUMP JUMPDEST PUSH2 0xEB5 PUSH1 0x0 DUP3 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xED7 SWAP1 DUP3 PUSH2 0x10CA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xEFA SWAP1 DUP3 PUSH2 0x10D6 JUMP JUMPDEST POP PUSH2 0xF07 PUSH1 0x2 DUP3 DUP5 PUSH2 0x10E2 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF69 DUP7 DUP7 PUSH2 0x115C JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP5 DUP5 DUP5 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF98 DUP5 DUP5 DUP5 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xFA4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1768 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1004 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4AE JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x101C JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1060 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 SWAP4 POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP4 ISZERO PUSH2 0x10B1 JUMPI PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x108F JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x106C JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x1409 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x1531 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1746 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1149 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 LT PUSH2 0x11A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1875 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11B1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1237 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1264 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH1 0x0 ADD PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1285 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x12C1 JUMPI POP PUSH1 0x1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13CF PUSH4 0xA85BD01 PUSH1 0xE1 SHL PUSH2 0x12D6 PUSH2 0xCE1 JUMP JUMPDEST DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x133D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1325 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x136A JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1768 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x14DD JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1454 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1471 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x14A1 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F3 DUP4 DUP4 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x1529 JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1596 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP7 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP10 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP6 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP6 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP7 SLOAD DUP7 DUP5 MSTORE DUP2 DUP9 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0xF86 JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x1 DUP4 SUB DUP2 SLOAD DUP2 LT PUSH2 0x15A9 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP POP PUSH2 0xF86 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF83 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH1 0x60 PUSH2 0x15E3 DUP6 PUSH2 0x15C8 JUMP JUMPDEST PUSH2 0x1634 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1673 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO PUSH2 0x16EE JUMPI SWAP2 POP PUSH2 0xDFA SWAP1 POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x16FE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP7 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP7 MLOAD DUP8 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0x44 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x1237 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121F JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734552433732313A20747261 PUSH15 0x7366657220746F206E6F6E20455243 CALLDATACOPY ORIGIN BALANCE MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x70657261746F7220717565727920666F PUSH19 0x206E6F6E6578697374656E7420746F6B656E45 MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652063616C6C6572206973206E6F74206F PUSH24 0x6E6572206E6F7220617070726F76656420666F7220616C6C GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x6573734552433732313A206F776E6572207175 PUSH6 0x727920666F72 KECCAK256 PUSH15 0x6F6E6578697374656E7420746F6B65 PUSH15 0x456E756D657261626C654D61703A20 PUSH10 0x6E646578206F7574206F PUSH7 0x20626F756E6473 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76656420717565727920666F72206E6F6E65 PUSH25 0x697374656E7420746F6B656E4552433732313A207472616E73 PUSH7 0x6572206F662074 PUSH16 0x6B656E2074686174206973206E6F7420 PUSH16 0x776E4552433732314D65746164617461 GASPRICE KECCAK256 SSTORE MSTORE 0x49 KECCAK256 PUSH18 0x7565727920666F72206E6F6E657869737465 PUSH15 0x7420746F6B656E4552433732313A20 PUSH2 0x7070 PUSH19 0x6F76616C20746F2063757272656E74206F776E PUSH6 0x724552433732 BALANCE GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0xA264697066 PUSH20 0x582212200E10E789A8851AF80F81D3D8777333A9 LOG3 LOG4 0xC1 0xDD CREATE2 DUP5 SWAP9 0xD8 EXP SWAP8 DUP1 PUSH20 0xC1CC024E64736F6C634300060C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "CALLVALUE",
      "path": "45"
    },
    "6": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "7": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "8": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "12": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "REVERT",
      "path": "45"
    },
    "16": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "17": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "POP",
      "path": "45"
    },
    "18": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "21": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "LT",
      "path": "45"
    },
    "22": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "26": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "29": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "SHR",
      "path": "45"
    },
    "32": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "33": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x4F6CCCE7"
    },
    "38": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "GT",
      "path": "45"
    },
    "39": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "43": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "44": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "GT",
      "path": "45"
    },
    "50": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "54": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "55": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "61": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x349"
    },
    "64": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "65": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "66": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "72": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x351"
    },
    "75": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "76": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "77": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xB88D4FDE"
    },
    "82": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "83": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x37F"
    },
    "86": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "87": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "88": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xC87B56DD"
    },
    "93": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "94": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x445"
    },
    "97": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "98": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "99": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "105": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x462"
    },
    "108": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "109": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMP",
      "path": "45"
    },
    "113": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "114": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "115": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x4F6CCCE7"
    },
    "120": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "121": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2E1"
    },
    "124": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "125": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "126": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6352211E"
    },
    "131": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "132": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2FE"
    },
    "135": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "136": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "137": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6C0360EB"
    },
    "142": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "143": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x31B"
    },
    "146": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "147": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "148": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x70A08231"
    },
    "153": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "154": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x323"
    },
    "157": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "158": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMP",
      "path": "45"
    },
    "162": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "163": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "164": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "GT",
      "path": "45"
    },
    "170": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "174": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "175": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x18160DDD"
    },
    "180": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "181": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22F"
    },
    "184": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "185": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "186": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "192": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x249"
    },
    "195": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "196": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "197": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x2F745C59"
    },
    "202": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "203": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x27F"
    },
    "206": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "207": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "208": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x42842E0E"
    },
    "213": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "214": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2AB"
    },
    "217": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "218": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMP",
      "path": "45"
    },
    "222": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "223": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "224": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x1FFC9A7"
    },
    "229": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "230": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "234": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "235": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x6FDDE03"
    },
    "240": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "241": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x14B"
    },
    "244": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "245": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "246": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x81812FC"
    },
    "251": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "252": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1C8"
    },
    "255": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "256": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "257": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH4",
      "path": "45",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "EQ",
      "path": "45"
    },
    "263": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x201"
    },
    "266": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "267": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "268": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "DUP1",
      "path": "45"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        528,
        16709
      ],
      "op": "REVERT",
      "path": "45"
    },
    "272": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "273": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x137"
    },
    "276": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x4"
    },
    "278": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "DUP1",
      "path": "33"
    },
    "279": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "CALLDATASIZE",
      "path": "33"
    },
    "280": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SUB",
      "path": "33"
    },
    "281": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "283": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "DUP2",
      "path": "33"
    },
    "284": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "LT",
      "path": "33"
    },
    "285": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "286": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x126"
    },
    "289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "JUMPI",
      "path": "33"
    },
    "290": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "292": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "DUP1",
      "path": "33"
    },
    "293": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "REVERT",
      "path": "33"
    },
    "294": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "CALLDATALOAD",
      "path": "33"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "op": "NOT"
    },
    "306": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "AND",
      "path": "33"
    },
    "307": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH2",
      "path": "33",
      "value": "0x490"
    },
    "310": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        948,
        1088
      ],
      "op": "JUMP",
      "path": "33"
    },
    "311": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "312": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "314": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "DUP1",
      "path": "33"
    },
    "315": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "316": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "317": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "318": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "ISZERO",
      "path": "33"
    },
    "319": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "DUP3",
      "path": "33"
    },
    "320": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "321": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "MLOAD",
      "path": "33"
    },
    "322": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "323": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "DUP2",
      "path": "33"
    },
    "324": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "325": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SUB",
      "path": "33"
    },
    "326": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "328": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "ADD",
      "path": "33"
    },
    "329": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "330": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "RETURN",
      "path": "33"
    },
    "331": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "332": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x153"
    },
    "335": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4B3"
    },
    "338": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMP",
      "path": "45"
    },
    "339": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "340": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "342": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "343": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "344": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "346": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "347": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP3",
      "path": "45"
    },
    "348": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "349": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "350": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "351": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP2",
      "path": "45"
    },
    "352": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "353": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "354": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "355": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "356": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "357": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "358": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "359": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "360": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "361": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "362": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "363": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "364": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "365": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP6",
      "path": "45"
    },
    "366": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "367": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "368": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "369": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "370": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "371": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "373": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "374": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "375": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP2",
      "path": "45"
    },
    "376": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "LT",
      "path": "45"
    },
    "377": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "378": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x18D"
    },
    "381": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "382": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP2",
      "path": "45"
    },
    "383": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP2",
      "path": "45"
    },
    "384": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "385": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "386": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "387": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP3",
      "path": "45"
    },
    "388": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "389": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "390": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "392": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "393": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x175"
    },
    "396": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMP",
      "path": "45"
    },
    "397": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "398": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "399": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "400": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "401": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "402": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "403": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "404": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "405": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP2",
      "path": "45"
    },
    "406": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "407": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "408": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "410": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "AND",
      "path": "45"
    },
    "411": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "412": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "413": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1BA"
    },
    "416": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "417": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "418": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP3",
      "path": "45"
    },
    "419": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SUB",
      "path": "45"
    },
    "420": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "421": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "422": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "424": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP4",
      "path": "45"
    },
    "425": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SUB",
      "path": "45"
    },
    "428": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "431": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "EXP",
      "path": "45"
    },
    "432": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SUB",
      "path": "45"
    },
    "433": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "NOT",
      "path": "45"
    },
    "434": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "AND",
      "path": "45"
    },
    "435": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP2",
      "path": "45"
    },
    "436": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "437": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "439": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "ADD",
      "path": "45"
    },
    "440": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "441": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "442": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "443": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "444": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "445": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "446": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "447": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "POP",
      "path": "45"
    },
    "448": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "450": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "451": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "DUP1",
      "path": "45"
    },
    "452": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "453": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SUB",
      "path": "45"
    },
    "454": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "455": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "RETURN",
      "path": "45"
    },
    "456": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "457": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E5"
    },
    "460": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "462": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "463": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "464": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SUB",
      "path": "45"
    },
    "465": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "467": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "DUP2",
      "path": "45"
    },
    "468": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "LT",
      "path": "45"
    },
    "469": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "470": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1DE"
    },
    "473": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "474": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "477": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "REVERT",
      "path": "45"
    },
    "478": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "481": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x549"
    },
    "484": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMP",
      "path": "45"
    },
    "485": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "486": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "488": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "DUP1",
      "path": "45"
    },
    "489": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "499": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "500": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "AND",
      "path": "45"
    },
    "501": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "DUP3",
      "path": "45"
    },
    "502": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "503": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "504": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "505": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "DUP2",
      "path": "45"
    },
    "506": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "507": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SUB",
      "path": "45"
    },
    "508": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "510": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "ADD",
      "path": "45"
    },
    "511": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "512": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "RETURN",
      "path": "45"
    },
    "513": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "514": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22D"
    },
    "517": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "519": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "DUP1",
      "path": "45"
    },
    "520": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "521": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "SUB",
      "path": "45"
    },
    "522": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "524": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "DUP2",
      "path": "45"
    },
    "525": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "LT",
      "path": "45"
    },
    "526": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "527": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x217"
    },
    "530": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "531": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "533": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "DUP1",
      "path": "45"
    },
    "534": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "REVERT",
      "path": "45"
    },
    "535": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "DUP2",
      "path": "45"
    },
    "546": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "547": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "AND",
      "path": "45"
    },
    "548": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "549": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "ADD",
      "path": "45"
    },
    "552": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "553": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5AB"
    },
    "556": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMP",
      "path": "45"
    },
    "557": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "558": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "STOP",
      "path": "45"
    },
    "559": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "560": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x237"
    },
    "563": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x686"
    },
    "566": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6130,
        6330
      ],
      "op": "JUMP",
      "path": "45"
    },
    "567": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "568": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "570": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "571": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "572": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "573": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "574": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "575": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "576": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "577": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "578": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "579": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "SUB",
      "path": "45"
    },
    "580": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "582": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "ADD",
      "path": "45"
    },
    "583": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "584": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "RETURN",
      "path": "45"
    },
    "585": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "586": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22D"
    },
    "589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "DUP1",
      "path": "45"
    },
    "592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "SUB",
      "path": "45"
    },
    "594": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "DUP2",
      "path": "45"
    },
    "597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "LT",
      "path": "45"
    },
    "598": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "599": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x25F"
    },
    "602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "DUP1",
      "path": "45"
    },
    "606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "REVERT",
      "path": "45"
    },
    "607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "DUP2",
      "path": "45"
    },
    "618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "619": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "DUP2",
      "path": "45"
    },
    "620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "AND",
      "path": "45"
    },
    "621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "622": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "624": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "DUP2",
      "path": "45"
    },
    "625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "ADD",
      "path": "45"
    },
    "626": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "627": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "628": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "AND",
      "path": "45"
    },
    "630": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "631": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "ADD",
      "path": "45"
    },
    "634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x697"
    },
    "638": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        7910,
        8210
      ],
      "op": "JUMP",
      "path": "45"
    },
    "639": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "640": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x237"
    },
    "643": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "645": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "DUP1",
      "path": "45"
    },
    "646": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "647": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "SUB",
      "path": "45"
    },
    "648": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "650": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "DUP2",
      "path": "45"
    },
    "651": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "LT",
      "path": "45"
    },
    "652": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "653": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x295"
    },
    "656": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "657": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "DUP1",
      "path": "45"
    },
    "660": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "REVERT",
      "path": "45"
    },
    "661": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "DUP2",
      "path": "45"
    },
    "672": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "673": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "AND",
      "path": "45"
    },
    "674": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "675": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "677": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "ADD",
      "path": "45"
    },
    "678": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "679": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6EE"
    },
    "682": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMP",
      "path": "45"
    },
    "683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22D"
    },
    "687": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "DUP1",
      "path": "45"
    },
    "690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "691": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "SUB",
      "path": "45"
    },
    "692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "DUP2",
      "path": "45"
    },
    "695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "LT",
      "path": "45"
    },
    "696": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2C1"
    },
    "700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "DUP1",
      "path": "45"
    },
    "704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "REVERT",
      "path": "45"
    },
    "705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "DUP2",
      "path": "45"
    },
    "716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "DUP2",
      "path": "45"
    },
    "718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "AND",
      "path": "45"
    },
    "719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "DUP2",
      "path": "45"
    },
    "723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "ADD",
      "path": "45"
    },
    "724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "AND",
      "path": "45"
    },
    "728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "ADD",
      "path": "45"
    },
    "732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x719"
    },
    "736": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8276,
        8425
      ],
      "op": "JUMP",
      "path": "45"
    },
    "737": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "738": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x237"
    },
    "741": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "743": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "DUP1",
      "path": "45"
    },
    "744": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "745": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "SUB",
      "path": "45"
    },
    "746": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "DUP2",
      "path": "45"
    },
    "749": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "LT",
      "path": "45"
    },
    "750": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "751": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x2F7"
    },
    "754": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "755": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "757": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "DUP1",
      "path": "45"
    },
    "758": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "REVERT",
      "path": "45"
    },
    "759": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "762": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x734"
    },
    "765": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6402,
        6563
      ],
      "op": "JUMP",
      "path": "45"
    },
    "766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1E5"
    },
    "770": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "772": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "DUP1",
      "path": "45"
    },
    "773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "SUB",
      "path": "45"
    },
    "775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "DUP2",
      "path": "45"
    },
    "778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "LT",
      "path": "45"
    },
    "779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x314"
    },
    "783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "786": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "DUP1",
      "path": "45"
    },
    "787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "REVERT",
      "path": "45"
    },
    "788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "791": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x74A"
    },
    "794": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4226,
        4393
      ],
      "op": "JUMP",
      "path": "45"
    },
    "795": {
      "fn": "ERC721.baseURI",
      "offset": [
        5741,
        5828
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "796": {
      "fn": "ERC721.baseURI",
      "offset": [
        5741,
        5828
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x153"
    },
    "799": {
      "fn": "ERC721.baseURI",
      "offset": [
        5741,
        5828
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x772"
    },
    "802": {
      "fn": "ERC721.baseURI",
      "jump": "i",
      "offset": [
        5741,
        5828
      ],
      "op": "JUMP",
      "path": "45"
    },
    "803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "804": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x237"
    },
    "807": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "DUP1",
      "path": "45"
    },
    "810": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "SUB",
      "path": "45"
    },
    "812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "DUP2",
      "path": "45"
    },
    "815": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "LT",
      "path": "45"
    },
    "816": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "817": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x339"
    },
    "820": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "821": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "823": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "DUP1",
      "path": "45"
    },
    "824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "REVERT",
      "path": "45"
    },
    "825": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "AND",
      "path": "45"
    },
    "837": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x7D3"
    },
    "840": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        3958,
        4169
      ],
      "op": "JUMP",
      "path": "45"
    },
    "841": {
      "fn": "ERC721.symbol",
      "offset": [
        4609,
        4703
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "842": {
      "fn": "ERC721.symbol",
      "offset": [
        4609,
        4703
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x153"
    },
    "845": {
      "fn": "ERC721.symbol",
      "offset": [
        4609,
        4703
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x83B"
    },
    "848": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        4609,
        4703
      ],
      "op": "JUMP",
      "path": "45"
    },
    "849": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "850": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22D"
    },
    "853": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "DUP1",
      "path": "45"
    },
    "856": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "857": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "SUB",
      "path": "45"
    },
    "858": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "DUP2",
      "path": "45"
    },
    "861": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "LT",
      "path": "45"
    },
    "862": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "863": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x367"
    },
    "866": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "867": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "DUP1",
      "path": "45"
    },
    "870": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "REVERT",
      "path": "45"
    },
    "871": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "DUP2",
      "path": "45"
    },
    "882": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "883": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "AND",
      "path": "45"
    },
    "884": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "885": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "ADD",
      "path": "45"
    },
    "888": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "889": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "890": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "891": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x89C"
    },
    "894": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7338,
        7628
      ],
      "op": "JUMP",
      "path": "45"
    },
    "895": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "896": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x22D"
    },
    "899": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "901": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "902": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "903": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SUB",
      "path": "45"
    },
    "904": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "906": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "907": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "LT",
      "path": "45"
    },
    "908": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "909": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x395"
    },
    "912": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "913": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "915": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "916": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "REVERT",
      "path": "45"
    },
    "917": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP3",
      "path": "45"
    },
    "927": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "928": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "929": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "AND",
      "path": "45"
    },
    "930": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "931": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "933": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "934": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "935": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "938": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "AND",
      "path": "45"
    },
    "939": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "940": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP3",
      "path": "45"
    },
    "943": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "944": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "947": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "949": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "950": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x80"
    },
    "952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "953": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "954": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "956": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP3",
      "path": "45"
    },
    "957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "959": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "965": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "966": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "GT",
      "path": "45"
    },
    "967": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "968": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3D0"
    },
    "971": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "972": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "975": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "REVERT",
      "path": "45"
    },
    "976": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "977": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP3",
      "path": "45"
    },
    "978": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "979": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP4",
      "path": "45"
    },
    "980": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP3",
      "path": "45"
    },
    "983": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "984": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "GT",
      "path": "45"
    },
    "985": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "986": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x3E2"
    },
    "989": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "990": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "992": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "993": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "REVERT",
      "path": "45"
    },
    "994": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "996": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "997": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "998": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "MUL",
      "path": "45"
    },
    "1007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "GT",
      "path": "45"
    },
    "1010": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH5",
      "path": "45",
      "value": "0x100000000"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1017": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "GT",
      "path": "45"
    },
    "1018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "OR",
      "path": "45"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x404"
    },
    "1023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1036": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1040": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DIV",
      "path": "45"
    },
    "1041": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "MUL",
      "path": "45"
    },
    "1042": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1044": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1045": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1047": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1048": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1050": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1058": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1059": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1067": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "CALLDATACOPY",
      "path": "45"
    },
    "1071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "ADD",
      "path": "45"
    },
    "1075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1077": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1078": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9A1"
    },
    "1086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x153"
    },
    "1097": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "SUB",
      "path": "45"
    },
    "1102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1105": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "LT",
      "path": "45"
    },
    "1106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x45B"
    },
    "1110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9FF"
    },
    "1121": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        4769,
        5509
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1123": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x137"
    },
    "1126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1129": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "CALLDATASIZE",
      "path": "45"
    },
    "1130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "SUB",
      "path": "45"
    },
    "1131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "LT",
      "path": "45"
    },
    "1135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1136": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x478"
    },
    "1139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "AND",
      "path": "45"
    },
    "1158": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1159": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1161": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "ADD",
      "path": "45"
    },
    "1162": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "CALLDATALOAD",
      "path": "45"
    },
    "1163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "AND",
      "path": "45"
    },
    "1164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCA6"
    },
    "1167": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        7694,
        7848
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1168": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "op": "NOT"
    },
    "1178": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "DUP2",
      "path": "33",
      "statement": 0
    },
    "1179": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "AND",
      "path": "33"
    },
    "1180": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1025,
        1029
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x0"
    },
    "1182": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1183": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1184": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1185": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "DUP2",
      "path": "33"
    },
    "1188": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1189": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "MSTORE",
      "path": "33"
    },
    "1190": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0x40"
    },
    "1192": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1193": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "KECCAK256",
      "path": "33"
    },
    "1194": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "SLOAD",
      "path": "33"
    },
    "1195": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "PUSH1",
      "path": "33",
      "value": "0xFF"
    },
    "1197": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1048,
        1081
      ],
      "op": "AND",
      "path": "33"
    },
    "1198": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "JUMPDEST",
      "path": "33"
    },
    "1199": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SWAP2",
      "path": "33"
    },
    "1200": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "SWAP1",
      "path": "33"
    },
    "1201": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        948,
        1088
      ],
      "op": "POP",
      "path": "33"
    },
    "1202": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        948,
        1088
      ],
      "op": "JUMP",
      "path": "33"
    },
    "1203": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1204": {
      "fn": "ERC721.name",
      "offset": [
        4533,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 1,
      "value": "0x6"
    },
    "1206": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1207": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1208": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1210": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1211": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1212": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1214": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1216": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "1224": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1226": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP9",
      "path": "45"
    },
    "1227": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "AND",
      "path": "45"
    },
    "1228": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1229": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MUL",
      "path": "45"
    },
    "1230": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1231": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1232": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "1233": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "AND",
      "path": "45"
    },
    "1234": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1235": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1236": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1237": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DIV",
      "path": "45"
    },
    "1238": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1239": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1240": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1241": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1242": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1243": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DIV",
      "path": "45"
    },
    "1244": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1245": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MUL",
      "path": "45"
    },
    "1246": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1247": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1248": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1249": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1250": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1251": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1252": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1253": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1254": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1255": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1256": {
      "fn": "ERC721.name",
      "offset": [
        4501,
        4514
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "1258": {
      "fn": "ERC721.name",
      "offset": [
        4501,
        4514
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1259": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1260": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1261": {
      "fn": "ERC721.name",
      "offset": [
        4533,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1262": {
      "fn": "ERC721.name",
      "offset": [
        4533,
        4538
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1263": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1264": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1265": {
      "fn": "ERC721.name",
      "offset": [
        4533,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1266": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1267": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1268": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1269": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x53F"
    },
    "1272": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1273": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1274": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1276": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "LT",
      "path": "45"
    },
    "1277": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x514"
    },
    "1280": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1281": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "1284": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1285": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1286": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1287": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DIV",
      "path": "45"
    },
    "1288": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MUL",
      "path": "45"
    },
    "1289": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1290": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1291": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1292": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1294": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1295": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1296": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x53F"
    },
    "1299": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1300": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1301": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1302": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1303": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1304": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1305": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1308": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1310": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1312": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "1313": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1314": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1315": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1316": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1317": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1318": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1319": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1320": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1322": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1323": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1324": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1326": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1327": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1328": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1329": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "GT",
      "path": "45"
    },
    "1330": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x522"
    },
    "1333": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1334": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1335": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1336": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SUB",
      "path": "45"
    },
    "1337": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1339": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "AND",
      "path": "45"
    },
    "1340": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1341": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "ADD",
      "path": "45"
    },
    "1342": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1343": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1344": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "POP",
      "path": "45"
    },
    "1345": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "POP",
      "path": "45"
    },
    "1346": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "POP",
      "path": "45"
    },
    "1347": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "POP",
      "path": "45"
    },
    "1348": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "POP",
      "path": "45"
    },
    "1349": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1350": {
      "fn": "ERC721.name",
      "offset": [
        4526,
        4538
      ],
      "op": "POP",
      "path": "45"
    },
    "1351": {
      "fn": "ERC721.name",
      "offset": [
        4455,
        4545
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1352": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        4455,
        4545
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1353": {
      "fn": "ERC721.getApproved",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1354": {
      "fn": "ERC721.getApproved",
      "offset": [
        7130,
        7137
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1356": {
      "fn": "ERC721.getApproved",
      "offset": [
        7157,
        7173
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 2,
      "value": "0x554"
    },
    "1359": {
      "fn": "ERC721.getApproved",
      "offset": [
        7165,
        7172
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1360": {
      "fn": "ERC721.getApproved",
      "offset": [
        7157,
        7164
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCD4"
    },
    "1363": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        7157,
        7173
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1364": {
      "branch": 87,
      "fn": "ERC721.getApproved",
      "offset": [
        7157,
        7173
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1365": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x58F"
    },
    "1368": {
      "branch": 87,
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1369": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1371": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1380": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1381": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1383": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "ADD",
      "path": "45"
    },
    "1384": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1385": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1386": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1388": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "ADD",
      "path": "45"
    },
    "1389": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1390": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1391": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "SUB",
      "path": "45"
    },
    "1392": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1393": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1394": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2C"
    },
    "1396": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1397": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1398": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1400": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "ADD",
      "path": "45"
    },
    "1401": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1402": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1897"
    },
    "1405": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2C"
    },
    "1407": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1408": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "1409": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1411": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "ADD",
      "path": "45"
    },
    "1412": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1413": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "POP",
      "path": "45"
    },
    "1414": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "POP",
      "path": "45"
    },
    "1415": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1417": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1418": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1419": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1420": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "SUB",
      "path": "45"
    },
    "1421": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1422": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1423": {
      "fn": "ERC721.getApproved",
      "offset": [
        7149,
        7222
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 3,
      "value": "0x0"
    },
    "1427": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1428": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1429": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1430": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7255
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1432": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1434": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1435": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1437": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1438": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "1439": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "AND",
      "path": "45"
    },
    "1449": {
      "fn": "ERC721.getApproved",
      "offset": [
        7240,
        7264
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1450": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        7062,
        7271
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1451": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1452": {
      "fn": "ERC721.approve",
      "offset": [
        6700,
        6713
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1454": {
      "fn": "ERC721.approve",
      "offset": [
        6716,
        6732
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "ERC721.approve",
      "offset": [
        6724,
        6731
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1458": {
      "fn": "ERC721.approve",
      "offset": [
        6716,
        6723
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x74A"
    },
    "1461": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6716,
        6732
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1462": {
      "fn": "ERC721.approve",
      "offset": [
        6716,
        6732
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1463": {
      "fn": "ERC721.approve",
      "offset": [
        6700,
        6732
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1464": {
      "fn": "ERC721.approve",
      "offset": [
        6700,
        6732
      ],
      "op": "POP",
      "path": "45"
    },
    "1465": {
      "fn": "ERC721.approve",
      "offset": [
        6756,
        6761
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 4
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC721.approve",
      "offset": [
        6750,
        6761
      ],
      "op": "AND",
      "path": "45"
    },
    "1475": {
      "fn": "ERC721.approve",
      "offset": [
        6750,
        6752
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "ERC721.approve",
      "offset": [
        6750,
        6761
      ],
      "op": "AND",
      "path": "45"
    },
    "1485": {
      "fn": "ERC721.approve",
      "offset": [
        6750,
        6761
      ],
      "op": "EQ",
      "path": "45"
    },
    "1486": {
      "branch": 88,
      "fn": "ERC721.approve",
      "offset": [
        6750,
        6761
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1487": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x609"
    },
    "1490": {
      "branch": 88,
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1491": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1493": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1502": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1503": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1505": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "ADD",
      "path": "45"
    },
    "1506": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1507": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1508": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1510": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "ADD",
      "path": "45"
    },
    "1511": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1512": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1513": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "SUB",
      "path": "45"
    },
    "1514": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1515": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1516": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x21"
    },
    "1518": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1519": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1520": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1522": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "ADD",
      "path": "45"
    },
    "1523": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1524": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x191B"
    },
    "1527": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x21"
    },
    "1529": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1530": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "1531": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1533": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "ADD",
      "path": "45"
    },
    "1534": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1535": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "POP",
      "path": "45"
    },
    "1536": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "POP",
      "path": "45"
    },
    "1537": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1539": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1540": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1541": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1542": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "SUB",
      "path": "45"
    },
    "1543": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1544": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1545": {
      "fn": "ERC721.approve",
      "offset": [
        6742,
        6799
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1546": {
      "fn": "ERC721.approve",
      "offset": [
        6834,
        6839
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 5
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "SUB"
    },
    "1555": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6839
      ],
      "op": "AND",
      "path": "45"
    },
    "1556": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6830
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x61B"
    },
    "1559": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6828
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "1562": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6818,
        6830
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1563": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6830
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6839
      ],
      "op": "AND",
      "path": "45"
    },
    "1573": {
      "branch": 89,
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6839
      ],
      "op": "EQ",
      "path": "45"
    },
    "1574": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6880
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1575": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6880
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x63C"
    },
    "1578": {
      "branch": 89,
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6880
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1579": {
      "fn": "ERC721.approve",
      "offset": [
        6818,
        6880
      ],
      "op": "POP",
      "path": "45"
    },
    "1580": {
      "fn": "ERC721.approve",
      "offset": [
        6843,
        6880
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x63C"
    },
    "1583": {
      "fn": "ERC721.approve",
      "offset": [
        6860,
        6865
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1584": {
      "fn": "ERC721.approve",
      "offset": [
        6867,
        6879
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x637"
    },
    "1587": {
      "fn": "ERC721.approve",
      "offset": [
        6867,
        6877
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "1590": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6867,
        6879
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1591": {
      "fn": "ERC721.approve",
      "offset": [
        6867,
        6879
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1592": {
      "fn": "ERC721.approve",
      "offset": [
        6843,
        6859
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCA6"
    },
    "1595": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6843,
        6880
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1596": {
      "branch": 90,
      "fn": "ERC721.approve",
      "offset": [
        6843,
        6880
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1597": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x677"
    },
    "1600": {
      "branch": 90,
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1601": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1603": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1612": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1613": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1615": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "ADD",
      "path": "45"
    },
    "1616": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1617": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1618": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1620": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "ADD",
      "path": "45"
    },
    "1621": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1622": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1623": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "SUB",
      "path": "45"
    },
    "1624": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1625": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1626": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x38"
    },
    "1628": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1629": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1630": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "ADD",
      "path": "45"
    },
    "1633": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1634": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x17EA"
    },
    "1637": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x38"
    },
    "1639": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1640": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "1641": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1643": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "ADD",
      "path": "45"
    },
    "1644": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1645": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "POP",
      "path": "45"
    },
    "1646": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "POP",
      "path": "45"
    },
    "1647": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1649": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1650": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1651": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1652": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "SUB",
      "path": "45"
    },
    "1653": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1654": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1655": {
      "fn": "ERC721.approve",
      "offset": [
        6810,
        6962
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1656": {
      "fn": "ERC721.approve",
      "offset": [
        6973,
        6994
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 6,
      "value": "0x681"
    },
    "1659": {
      "fn": "ERC721.approve",
      "offset": [
        6982,
        6984
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1660": {
      "fn": "ERC721.approve",
      "offset": [
        6986,
        6993
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1661": {
      "fn": "ERC721.approve",
      "offset": [
        6973,
        6981
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE5"
    },
    "1664": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        6973,
        6994
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1665": {
      "fn": "ERC721.approve",
      "offset": [
        6973,
        6994
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1666": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "POP",
      "path": "45"
    },
    "1667": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "POP",
      "path": "45"
    },
    "1668": {
      "fn": "ERC721.approve",
      "offset": [
        6620,
        7001
      ],
      "op": "POP",
      "path": "45"
    },
    "1669": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        6620,
        7001
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1670": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1671": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6183,
        6190
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1673": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6302,
        6323
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 7,
      "value": "0x692"
    },
    "1676": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6302,
        6314
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "1678": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6302,
        6321
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD53"
    },
    "1681": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        6302,
        6323
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1682": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6302,
        6323
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1683": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6295,
        6323
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1684": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6295,
        6323
      ],
      "op": "POP",
      "path": "45"
    },
    "1685": {
      "fn": "ERC721.totalSupply",
      "offset": [
        6130,
        6330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1686": {
      "fn": "ERC721.totalSupply",
      "jump": "o",
      "offset": [
        6130,
        6330
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1687": {
      "fn": "ERC721.transferFrom",
      "offset": [
        7910,
        8210
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1688": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8069,
        8110
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 8,
      "value": "0x6A8"
    },
    "1691": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8088,
        8100
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6A2"
    },
    "1694": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8088,
        8098
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "1697": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8088,
        8100
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1698": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8088,
        8100
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1699": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8102,
        8109
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1700": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8069,
        8087
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD5E"
    },
    "1703": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8069,
        8110
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1704": {
      "branch": 91,
      "fn": "ERC721.transferFrom",
      "offset": [
        8069,
        8110
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1705": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x6E3"
    },
    "1708": {
      "branch": 91,
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1709": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1711": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1720": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1721": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "1723": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "ADD",
      "path": "45"
    },
    "1724": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1725": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1726": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1728": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "ADD",
      "path": "45"
    },
    "1729": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1730": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1731": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "SUB",
      "path": "45"
    },
    "1732": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1733": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1734": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x31"
    },
    "1736": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1737": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1738": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1740": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "ADD",
      "path": "45"
    },
    "1741": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1742": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x193C"
    },
    "1745": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x31"
    },
    "1747": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1748": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "1749": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "ADD",
      "path": "45"
    },
    "1752": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1753": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "POP",
      "path": "45"
    },
    "1754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "POP",
      "path": "45"
    },
    "1755": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1759": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "SUB",
      "path": "45"
    },
    "1761": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "REVERT",
      "path": "45"
    },
    "1763": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8061,
        8164
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8175,
        8203
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 9,
      "value": "0x681"
    },
    "1767": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8185,
        8189
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8191,
        8193
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1769": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8195,
        8202
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        8175,
        8184
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE02"
    },
    "1773": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        8175,
        8203
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1774": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "SUB"
    },
    "1783": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 10
    },
    "1784": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "AND",
      "path": "45"
    },
    "1785": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5996,
        6003
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1788": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1789": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1790": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6035
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1792": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1794": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1795": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1797": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1798": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6042
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "1799": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6052
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x710"
    },
    "1802": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1803": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6046,
        6051
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1804": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6045
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF4E"
    },
    "1807": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        6022,
        6052
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1808": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6022,
        6052
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1809": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6015,
        6052
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1810": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        6015,
        6052
      ],
      "op": "POP",
      "path": "45"
    },
    "1811": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1812": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1813": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1814": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "POP",
      "path": "45"
    },
    "1815": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        5907,
        6059
      ],
      "op": "POP",
      "path": "45"
    },
    "1816": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        5907,
        6059
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8276,
        8425
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1818": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 11,
      "value": "0x681"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8396,
        8400
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8402,
        8404
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8406,
        8413
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1824": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1826": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "ADD",
      "path": "45"
    },
    "1831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1835": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8418
      ],
      "op": "POP",
      "path": "45"
    },
    "1840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8379,
        8395
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9A1"
    },
    "1843": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8379,
        8418
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1844": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1845": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6469,
        6476
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1847": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6469,
        6476
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1848": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6510,
        6532
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x742"
    },
    "1851": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6510,
        6522
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "1853": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6526,
        6531
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1854": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6510,
        6525
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF5A"
    },
    "1857": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        6510,
        6532
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1858": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6510,
        6532
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6488,
        6532
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1861": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        6402,
        6563
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "ERC721.tokenByIndex",
      "jump": "o",
      "offset": [
        6402,
        6563
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1866": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4226,
        4393
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1867": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4290,
        4297
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "1869": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 12,
      "value": "0x713"
    },
    "1872": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4333,
        4340
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1873": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1876": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1877": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "1879": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "ADD",
      "path": "45"
    },
    "1880": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1883": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1884": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x29"
    },
    "1886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1887": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1888": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1890": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "ADD",
      "path": "45"
    },
    "1891": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x184C"
    },
    "1894": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x29"
    },
    "1896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1897": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "1898": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4328
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "1900": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4328
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4386
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1902": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4316,
        4332
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF76"
    },
    "1905": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4316,
        4386
      ],
      "op": "JUMP",
      "path": "45"
    },
    "1906": {
      "fn": "ERC721.baseURI",
      "offset": [
        5741,
        5828
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "1907": {
      "fn": "ERC721.baseURI",
      "offset": [
        5813,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 13,
      "value": "0x9"
    },
    "1909": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1910": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1911": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "1913": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1914": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "1915": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1917": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1919": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "NOT"
    },
    "1924": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "1927": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "1929": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP9",
      "path": "45"
    },
    "1930": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "AND",
      "path": "45"
    },
    "1931": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1932": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MUL",
      "path": "45"
    },
    "1933": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ADD",
      "path": "45"
    },
    "1934": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1935": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "1936": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "AND",
      "path": "45"
    },
    "1937": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1938": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1939": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "1940": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DIV",
      "path": "45"
    },
    "1941": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1942": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP5",
      "path": "45"
    },
    "1943": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ADD",
      "path": "45"
    },
    "1944": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1945": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1946": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DIV",
      "path": "45"
    },
    "1947": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1948": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MUL",
      "path": "45"
    },
    "1949": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1950": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ADD",
      "path": "45"
    },
    "1951": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1952": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ADD",
      "path": "45"
    },
    "1953": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1954": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1955": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1956": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1957": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP2",
      "path": "45"
    },
    "1958": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1959": {
      "fn": "ERC721.baseURI",
      "offset": [
        5781,
        5794
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "1961": {
      "fn": "ERC721.baseURI",
      "offset": [
        5781,
        5794
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "1962": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1963": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "1964": {
      "fn": "ERC721.baseURI",
      "offset": [
        5813,
        5821
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "1965": {
      "fn": "ERC721.baseURI",
      "offset": [
        5813,
        5821
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1966": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1967": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ADD",
      "path": "45"
    },
    "1968": {
      "fn": "ERC721.baseURI",
      "offset": [
        5813,
        5821
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1969": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP3",
      "path": "45"
    },
    "1970": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1971": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "1972": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x53F"
    },
    "1975": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1976": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1977": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "1979": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "LT",
      "path": "45"
    },
    "1980": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x514"
    },
    "1983": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "1984": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "1987": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP1",
      "path": "45"
    },
    "1988": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1989": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "1990": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DIV",
      "path": "45"
    },
    "1991": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MUL",
      "path": "45"
    },
    "1992": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "DUP4",
      "path": "45"
    },
    "1993": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "1994": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1995": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "1997": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "ADD",
      "path": "45"
    },
    "1998": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "1999": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x53F"
    },
    "2002": {
      "fn": "ERC721.baseURI",
      "offset": [
        5806,
        5821
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2003": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3958,
        4169
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2004": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4022,
        4029
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "op": "SUB"
    },
    "2014": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4049,
        4068
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 14
    },
    "2015": {
      "branch": 92,
      "fn": "ERC721.balanceOf",
      "offset": [
        4049,
        4068
      ],
      "op": "AND",
      "path": "45"
    },
    "2016": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x81A"
    },
    "2019": {
      "branch": 92,
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2020": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2031": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2032": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2034": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "ADD",
      "path": "45"
    },
    "2035": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2036": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2037": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2039": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "ADD",
      "path": "45"
    },
    "2040": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2041": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2042": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "SUB",
      "path": "45"
    },
    "2043": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2044": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2045": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2A"
    },
    "2047": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2048": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2049": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "ADD",
      "path": "45"
    },
    "2052": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2053": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1822"
    },
    "2056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2A"
    },
    "2058": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "2060": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2062": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "ADD",
      "path": "45"
    },
    "2063": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "POP",
      "path": "45"
    },
    "2065": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "POP",
      "path": "45"
    },
    "2066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2069": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2070": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2071": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "SUB",
      "path": "45"
    },
    "2072": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2073": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2074": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4041,
        4115
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 15
    },
    "2084": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "AND",
      "path": "45"
    },
    "2085": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2087": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2088": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2089": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2090": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4146
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2092": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2094": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2095": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2097": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2098": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4153
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2099": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4162
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x713"
    },
    "2102": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4162
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2103": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4133,
        4160
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD53"
    },
    "2106": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4133,
        4162
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2107": {
      "fn": "ERC721.symbol",
      "offset": [
        4609,
        4703
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2108": {
      "fn": "ERC721.symbol",
      "offset": [
        4689,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 16,
      "value": "0x7"
    },
    "2110": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2111": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2112": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2114": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2115": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2116": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2118": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2120": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2124": {
      "op": "NOT"
    },
    "2125": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2128": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2130": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP9",
      "path": "45"
    },
    "2131": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "AND",
      "path": "45"
    },
    "2132": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2133": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MUL",
      "path": "45"
    },
    "2134": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2135": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2136": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "2137": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "AND",
      "path": "45"
    },
    "2138": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2139": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2140": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2141": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DIV",
      "path": "45"
    },
    "2142": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2143": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2144": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2145": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2146": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2147": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DIV",
      "path": "45"
    },
    "2148": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2149": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MUL",
      "path": "45"
    },
    "2150": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2151": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2152": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2153": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2154": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2155": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2156": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2157": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2158": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2159": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2160": {
      "fn": "ERC721.symbol",
      "offset": [
        4657,
        4670
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "2162": {
      "fn": "ERC721.symbol",
      "offset": [
        4657,
        4670
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2163": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2164": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2165": {
      "fn": "ERC721.symbol",
      "offset": [
        4689,
        4696
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2166": {
      "fn": "ERC721.symbol",
      "offset": [
        4689,
        4696
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2167": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2168": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2169": {
      "fn": "ERC721.symbol",
      "offset": [
        4689,
        4696
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2170": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2171": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2172": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2173": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x53F"
    },
    "2176": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2177": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2178": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2180": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "LT",
      "path": "45"
    },
    "2181": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x514"
    },
    "2184": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2185": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2188": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2189": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2190": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2191": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DIV",
      "path": "45"
    },
    "2192": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MUL",
      "path": "45"
    },
    "2193": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2194": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2195": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2196": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "ADD",
      "path": "45"
    },
    "2199": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2200": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x53F"
    },
    "2203": {
      "fn": "ERC721.symbol",
      "offset": [
        4682,
        4696
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7452,
        7464
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 17,
      "value": "0x8A4"
    },
    "2208": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7452,
        7462
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "2211": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7452,
        7464
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2212": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7452,
        7464
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "op": "SUB"
    },
    "2221": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7440,
        7464
      ],
      "op": "AND",
      "path": "45"
    },
    "2222": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7440,
        7448
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7440,
        7464
      ],
      "op": "AND",
      "path": "45"
    },
    "2232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7440,
        7464
      ],
      "op": "EQ",
      "path": "45"
    },
    "2233": {
      "branch": 93,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7440,
        7464
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2234": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x90A"
    },
    "2237": {
      "branch": 93,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2238": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2241": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2250": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2251": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2253": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2255": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2256": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "ADD",
      "path": "45"
    },
    "2257": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2258": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x19"
    },
    "2260": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "2262": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2263": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "ADD",
      "path": "45"
    },
    "2264": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2265": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2298": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x44"
    },
    "2300": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2301": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "ADD",
      "path": "45"
    },
    "2302": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2303": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2304": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2305": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2307": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "SUB",
      "path": "45"
    },
    "2309": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x64"
    },
    "2311": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "ADD",
      "path": "45"
    },
    "2312": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2313": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2314": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7432,
        7494
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2315": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7550,
        7558
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 18
    },
    "2316": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7523
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x5"
    },
    "2318": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2320": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7524,
        7536
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x917"
    },
    "2323": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7524,
        7534
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "2326": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7524,
        7536
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2327": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7524,
        7536
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2337": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2338": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "AND",
      "path": "45"
    },
    "2339": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2340": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2343": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2344": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2345": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "ADD",
      "path": "45"
    },
    "2346": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2347": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2348": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2349": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2352": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2353": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2354": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "ADD",
      "path": "45"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2358": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2359": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7537
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2360": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2361": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "DUP8",
      "path": "45"
    },
    "2362": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "AND",
      "path": "45"
    },
    "2363": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2364": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2365": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2366": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2367": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2368": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2369": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2370": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2371": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7547
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2372": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2373": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2376": {
      "op": "NOT"
    },
    "2377": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "AND",
      "path": "45"
    },
    "2378": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2380": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2381": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2382": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2383": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2384": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "OR",
      "path": "45"
    },
    "2385": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2386": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2387": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7505,
        7558
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "2388": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7588,
        7600
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 19,
      "value": "0x95B"
    },
    "2391": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7588,
        7598
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "2394": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        7588,
        7600
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2395": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7588,
        7600
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "SUB"
    },
    "2404": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "AND",
      "path": "45"
    },
    "2405": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2438": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7612,
        7620
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2441": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2444": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2446": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2447": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2448": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "ADD",
      "path": "45"
    },
    "2451": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2452": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "POP",
      "path": "45"
    },
    "2453": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "POP",
      "path": "45"
    },
    "2454": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2456": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2457": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2458": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "SUB",
      "path": "45"
    },
    "2460": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7573,
        7621
      ],
      "op": "LOG3",
      "path": "45"
    },
    "2462": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "POP",
      "path": "45"
    },
    "2463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        7338,
        7628
      ],
      "op": "POP",
      "path": "45"
    },
    "2464": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        7338,
        7628
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2465": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8622,
        8663
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 20,
      "value": "0x9B2"
    },
    "2469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8641,
        8653
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9AC"
    },
    "2472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8641,
        8651
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "2475": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8641,
        8653
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8641,
        8653
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2477": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8655,
        8662
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2478": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8622,
        8640
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xD5E"
    },
    "2481": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8622,
        8663
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2482": {
      "branch": 94,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8622,
        8663
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9ED"
    },
    "2486": {
      "branch": 94,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2499": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "ADD",
      "path": "45"
    },
    "2502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2503": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "ADD",
      "path": "45"
    },
    "2507": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2508": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "SUB",
      "path": "45"
    },
    "2510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x31"
    },
    "2514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2518": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "ADD",
      "path": "45"
    },
    "2519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x193C"
    },
    "2523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x31"
    },
    "2525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "2527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "ADD",
      "path": "45"
    },
    "2530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "POP",
      "path": "45"
    },
    "2532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "POP",
      "path": "45"
    },
    "2533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "SUB",
      "path": "45"
    },
    "2539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8614,
        8717
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8727,
        8766
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 21,
      "value": "0x9F9"
    },
    "2545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8741,
        8745
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8747,
        8749
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8751,
        8758
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8760,
        8765
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8727,
        8740
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xF8D"
    },
    "2552": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        8727,
        8766
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8727,
        8766
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "POP",
      "path": "45"
    },
    "2555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "POP",
      "path": "45"
    },
    "2556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "POP",
      "path": "45"
    },
    "2557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        8491,
        8773
      ],
      "op": "POP",
      "path": "45"
    },
    "2558": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        8491,
        8773
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4834,
        4847
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "2562": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4867,
        4883
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 22,
      "value": "0xA0A"
    },
    "2565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4875,
        4882
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2566": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4867,
        4874
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCD4"
    },
    "2569": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        4867,
        4883
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2570": {
      "branch": 95,
      "fn": "ERC721.tokenURI",
      "offset": [
        4867,
        4883
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2571": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xA45"
    },
    "2574": {
      "branch": 95,
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2577": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "2589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "ADD",
      "path": "45"
    },
    "2590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2591": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "ADD",
      "path": "45"
    },
    "2595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "SUB",
      "path": "45"
    },
    "2598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2600": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2F"
    },
    "2602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2606": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "ADD",
      "path": "45"
    },
    "2607": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2608": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x18EC"
    },
    "2611": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2F"
    },
    "2613": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2614": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "2615": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2617": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "ADD",
      "path": "45"
    },
    "2618": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2619": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "POP",
      "path": "45"
    },
    "2620": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "POP",
      "path": "45"
    },
    "2621": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2623": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2624": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2625": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2626": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "SUB",
      "path": "45"
    },
    "2627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "REVERT",
      "path": "45"
    },
    "2629": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4859,
        4935
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2630": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2632": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2633": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2634": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2635": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4982
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x8"
    },
    "2637": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2639": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2640": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2641": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2642": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2647": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2648": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2649": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2650": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2651": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2652": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2654": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2658": {
      "op": "NOT"
    },
    "2659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2662": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2664": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP7",
      "path": "45"
    },
    "2665": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "AND",
      "path": "45"
    },
    "2666": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2667": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MUL",
      "path": "45"
    },
    "2668": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "AND",
      "path": "45"
    },
    "2672": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2674": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DIV",
      "path": "45"
    },
    "2676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2678": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2679": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2680": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2681": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DIV",
      "path": "45"
    },
    "2682": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2683": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MUL",
      "path": "45"
    },
    "2684": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2685": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2686": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2687": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2688": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2689": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2690": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2691": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2692": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2693": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2694": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4969
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "2696": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4969
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2697": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2698": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2699": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2700": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4972,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2701": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2702": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2703": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2704": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xADA"
    },
    "2707": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2708": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2709": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2711": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "LT",
      "path": "45"
    },
    "2712": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xAAF"
    },
    "2715": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2719": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2720": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2721": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2722": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DIV",
      "path": "45"
    },
    "2723": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MUL",
      "path": "45"
    },
    "2724": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2725": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2726": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2727": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2730": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2731": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xADA"
    },
    "2734": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2735": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2739": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2740": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2743": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2749": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2753": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2759": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2764": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "GT",
      "path": "45"
    },
    "2765": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xABD"
    },
    "2768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2771": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SUB",
      "path": "45"
    },
    "2772": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "AND",
      "path": "45"
    },
    "2775": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2776": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "ADD",
      "path": "45"
    },
    "2777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2779": {
      "op": "POP"
    },
    "2780": {
      "op": "POP"
    },
    "2781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5070,
        5078
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x9"
    },
    "2783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "2785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4946,
        4991
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "op": "POP"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2794": {
      "op": "NOT"
    },
    "2795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "AND",
      "path": "45"
    },
    "2802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "MUL",
      "path": "45"
    },
    "2804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "ADD",
      "path": "45"
    },
    "2805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2807": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "AND",
      "path": "45"
    },
    "2808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5064,
        5086
      ],
      "op": "DIV",
      "path": "45"
    },
    "2809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5060,
        5134
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB03"
    },
    "2812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5060,
        5134
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2813": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5114,
        5123
      ],
      "op": "SWAP1",
      "path": "45",
      "statement": 23
    },
    "2814": {
      "op": "POP"
    },
    "2815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5107,
        5123
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4AE"
    },
    "2818": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5107,
        5123
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5060,
        5134
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5236,
        5259
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2821": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5236,
        5259
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2822": {
      "branch": 96,
      "fn": "ERC721.tokenURI",
      "offset": [
        5236,
        5263
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5232,
        5342
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBD4"
    },
    "2826": {
      "branch": 96,
      "fn": "ERC721.tokenURI",
      "offset": [
        5232,
        5342
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5310,
        5318
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 24,
      "value": "0x9"
    },
    "2829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5320,
        5329
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "2832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2835": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "AND",
      "path": "45"
    },
    "2846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MUL",
      "path": "45"
    },
    "2851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SUB",
      "path": "45"
    },
    "2852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "AND",
      "path": "45"
    },
    "2853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "2855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DIV",
      "path": "45"
    },
    "2857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2858": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "2859": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB6B"
    },
    "2862": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2863": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2864": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "2866": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "LT",
      "path": "45"
    },
    "2867": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB49"
    },
    "2870": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2871": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2874": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2875": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2876": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DIV",
      "path": "45"
    },
    "2878": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MUL",
      "path": "45"
    },
    "2879": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2880": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2881": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2882": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2883": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2884": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2885": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB6B"
    },
    "2888": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2889": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2890": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2891": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2892": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2893": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2894": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2896": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2899": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "2901": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "2902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2904": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2905": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "2906": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2907": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2908": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2909": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2911": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2912": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2913": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2915": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2916": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "GT",
      "path": "45"
    },
    "2919": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB57"
    },
    "2922": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2923": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2927": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2928": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2930": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2934": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "LT",
      "path": "45"
    },
    "2941": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB97"
    },
    "2944": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "2945": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2946": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2947": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2948": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2951": {
      "op": "NOT"
    },
    "2952": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "2953": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "2954": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2955": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2956": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "2962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "2963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xB78"
    },
    "2966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMP",
      "path": "45"
    },
    "2967": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "2968": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "2970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "2971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "2973": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SUB",
      "path": "45"
    },
    "2974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "2977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "EXP",
      "path": "45"
    },
    "2978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SUB",
      "path": "45"
    },
    "2979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "NOT",
      "path": "45"
    },
    "2981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "AND",
      "path": "45"
    },
    "2984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "2985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP5",
      "path": "45"
    },
    "2986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "2987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "AND",
      "path": "45"
    },
    "2988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP1",
      "path": "45"
    },
    "2989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP3",
      "path": "45"
    },
    "2990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "OR",
      "path": "45"
    },
    "2991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP6",
      "path": "45"
    },
    "2992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "2993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "2994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "2995": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "2996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "2997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "2998": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "2999": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "3001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "ADD",
      "path": "45"
    },
    "3002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "3004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "3005": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "POP",
      "path": "45"
    },
    "3006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3011": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SUB",
      "path": "45"
    },
    "3014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SUB",
      "path": "45"
    },
    "3015": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3016": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3017": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5293,
        5330
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5279,
        5331
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5279,
        5331
      ],
      "op": "POP",
      "path": "45"
    },
    "3023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5279,
        5331
      ],
      "op": "POP",
      "path": "45"
    },
    "3024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5279,
        5331
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x4AE"
    },
    "3027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5279,
        5331
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5232,
        5342
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5472,
        5480
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 25,
      "value": "0x9"
    },
    "3031": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5482,
        5500
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xBDF"
    },
    "3034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5482,
        5489
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5482,
        5498
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xFDF"
    },
    "3038": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5482,
        5500
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3039": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5482,
        5500
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3040": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3042": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3043": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3045": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3046": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3048": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3049": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3050": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3052": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3055": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "AND",
      "path": "45"
    },
    "3056": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3057": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "3060": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MUL",
      "path": "45"
    },
    "3061": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SUB",
      "path": "45"
    },
    "3062": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "AND",
      "path": "45"
    },
    "3063": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "3065": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3066": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DIV",
      "path": "45"
    },
    "3067": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3068": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "3069": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC3D"
    },
    "3072": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3073": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "3076": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "LT",
      "path": "45"
    },
    "3077": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC1B"
    },
    "3080": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3081": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "3084": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3085": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3086": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3087": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DIV",
      "path": "45"
    },
    "3088": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MUL",
      "path": "45"
    },
    "3089": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3090": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3091": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3092": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3095": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC3D"
    },
    "3098": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3103": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3109": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3112": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3116": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3119": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3121": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3122": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3123": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3125": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3126": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3127": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3128": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "GT",
      "path": "45"
    },
    "3129": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC29"
    },
    "3132": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3133": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "op": "POP"
    },
    "3136": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3137": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3138": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3140": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3141": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3142": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3143": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3144": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3145": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3146": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3147": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3149": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3150": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "LT",
      "path": "45"
    },
    "3151": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC69"
    },
    "3154": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3155": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3156": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3157": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3158": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3161": {
      "op": "NOT"
    },
    "3162": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3163": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3164": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3165": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3166": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3168": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3169": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3170": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3171": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3172": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3173": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xC4A"
    },
    "3176": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3177": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3178": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3180": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3181": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3183": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SUB",
      "path": "45"
    },
    "3184": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "3187": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "EXP",
      "path": "45"
    },
    "3188": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SUB",
      "path": "45"
    },
    "3189": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3190": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "NOT",
      "path": "45"
    },
    "3191": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3192": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3193": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "AND",
      "path": "45"
    },
    "3194": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3195": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3196": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3197": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "AND",
      "path": "45"
    },
    "3198": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3199": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3200": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "OR",
      "path": "45"
    },
    "3201": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP6",
      "path": "45"
    },
    "3202": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3203": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3204": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3205": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3206": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3207": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3208": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3209": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3210": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3211": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "ADD",
      "path": "45"
    },
    "3212": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "3213": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3214": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3215": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "POP",
      "path": "45"
    },
    "3216": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3218": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3219": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3221": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3222": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3223": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SUB",
      "path": "45"
    },
    "3224": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SUB",
      "path": "45"
    },
    "3225": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3226": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3227": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3228": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3230": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5455,
        5501
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3231": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5441,
        5502
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3232": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5441,
        5502
      ],
      "op": "POP",
      "path": "45"
    },
    "3233": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5441,
        5502
      ],
      "op": "POP",
      "path": "45"
    },
    "3234": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3235": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3236": {
      "fn": "ERC721.tokenURI",
      "offset": [
        4769,
        5509
      ],
      "op": "POP",
      "path": "45"
    },
    "3237": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        4769,
        5509
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3238": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7694,
        7848
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3245": {
      "op": "SHL"
    },
    "3246": {
      "op": "SUB"
    },
    "3247": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "SWAP2",
      "path": "45",
      "statement": 26
    },
    "3248": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3249": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "AND",
      "path": "45"
    },
    "3250": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7783,
        7787
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3252": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3253": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3254": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3255": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7824
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x5"
    },
    "3257": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3259": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3260": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3261": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3262": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7831
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3269": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "3270": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "AND",
      "path": "45"
    },
    "3271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3274": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3276": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3277": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3278": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0xFF"
    },
    "3281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "AND",
      "path": "45"
    },
    "3282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        7806,
        7841
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3283": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        7694,
        7848
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3284": {
      "fn": "ERC721._exists",
      "offset": [
        10207,
        10324
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3285": {
      "fn": "ERC721._exists",
      "offset": [
        10264,
        10268
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3287": {
      "fn": "ERC721._exists",
      "offset": [
        10287,
        10317
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 27,
      "value": "0x713"
    },
    "3290": {
      "fn": "ERC721._exists",
      "offset": [
        10287,
        10299
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "3292": {
      "fn": "ERC721._exists",
      "offset": [
        10309,
        10316
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3293": {
      "fn": "ERC721._exists",
      "offset": [
        10287,
        10308
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10BA"
    },
    "3296": {
      "fn": "ERC721._exists",
      "jump": "i",
      "offset": [
        10287,
        10317
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        557,
        661
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3298": {
      "fn": "Context._msgSender",
      "offset": [
        644,
        654
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 28
    },
    "3299": {
      "fn": "Context._msgSender",
      "offset": [
        557,
        661
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3300": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        557,
        661
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3301": {
      "fn": "ERC721._approve",
      "offset": [
        15863,
        16018
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3302": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 29,
      "value": "0x0"
    },
    "3304": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3305": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3306": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3307": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15943
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3309": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3311": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3312": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3314": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3315": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3316": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3317": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "SLOAD",
      "path": "45"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "op": "NOT"
    },
    "3327": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "AND",
      "path": "45"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "op": "SUB"
    },
    "3336": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3337": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "AND",
      "path": "45"
    },
    "3338": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3339": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3340": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "OR",
      "path": "45"
    },
    "3341": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3342": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3343": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15957
      ],
      "op": "SSTORE",
      "path": "45"
    },
    "3344": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3345": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3346": {
      "fn": "ERC721._approve",
      "offset": [
        15981,
        15997
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 30,
      "value": "0xD1A"
    },
    "3349": {
      "fn": "ERC721._approve",
      "offset": [
        15928,
        15952
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3350": {
      "fn": "ERC721._approve",
      "offset": [
        15981,
        15988
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x74A"
    },
    "3353": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        15981,
        15997
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3354": {
      "fn": "ERC721._approve",
      "offset": [
        15981,
        15997
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "AND",
      "path": "45"
    },
    "3364": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3397": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3399": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3400": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3402": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3403": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3404": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3405": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "SUB",
      "path": "45"
    },
    "3406": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3407": {
      "fn": "ERC721._approve",
      "offset": [
        15972,
        16011
      ],
      "op": "LOG4",
      "path": "45"
    },
    "3408": {
      "fn": "ERC721._approve",
      "offset": [
        15863,
        16018
      ],
      "op": "POP",
      "path": "45"
    },
    "3409": {
      "fn": "ERC721._approve",
      "offset": [
        15863,
        16018
      ],
      "op": "POP",
      "path": "45"
    },
    "3410": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        15863,
        16018
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3411": {
      "fn": "EnumerableMap.length",
      "offset": [
        6990,
        7111
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "3412": {
      "fn": "EnumerableMap.length",
      "offset": [
        7059,
        7066
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "3414": {
      "fn": "EnumerableMap.length",
      "offset": [
        7085,
        7104
      ],
      "op": "PUSH2",
      "path": "56",
      "statement": 31,
      "value": "0x713"
    },
    "3417": {
      "fn": "EnumerableMap.length",
      "offset": [
        7093,
        7096
      ],
      "op": "DUP3",
      "path": "56"
    },
    "3418": {
      "fn": "EnumerableMap.length",
      "offset": [
        7085,
        7092
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x10C6"
    },
    "3421": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        7085,
        7104
      ],
      "op": "JUMP",
      "path": "56"
    },
    "3422": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10482,
        10811
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10567,
        10571
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3425": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10591,
        10607
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 32,
      "value": "0xD69"
    },
    "3428": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10599,
        10606
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3429": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10591,
        10598
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCD4"
    },
    "3432": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10591,
        10607
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3433": {
      "branch": 97,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10591,
        10607
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3434": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDA4"
    },
    "3437": {
      "branch": 97,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3438": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3440": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3447": {
      "op": "SHL"
    },
    "3448": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3449": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3450": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3452": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "ADD",
      "path": "45"
    },
    "3453": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3454": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3455": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3457": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "ADD",
      "path": "45"
    },
    "3458": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "SUB",
      "path": "45"
    },
    "3461": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3462": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2C"
    },
    "3465": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3466": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3467": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3469": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "ADD",
      "path": "45"
    },
    "3470": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3471": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x17BE"
    },
    "3474": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2C"
    },
    "3476": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3477": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "3478": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "ADD",
      "path": "45"
    },
    "3481": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3482": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "POP",
      "path": "45"
    },
    "3483": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "POP",
      "path": "45"
    },
    "3484": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3486": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3487": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3488": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3489": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "SUB",
      "path": "45"
    },
    "3490": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3491": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3492": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10583,
        10656
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3493": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10666,
        10679
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3495": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10682,
        10698
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDAF"
    },
    "3498": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10690,
        10697
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3499": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10682,
        10689
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x74A"
    },
    "3502": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10682,
        10698
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3503": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10682,
        10698
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3504": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10666,
        10698
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3505": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10666,
        10698
      ],
      "op": "POP",
      "path": "45"
    },
    "3506": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10727,
        10732
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 33
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "op": "SUB"
    },
    "3515": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10732
      ],
      "op": "AND",
      "path": "45"
    },
    "3516": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10723
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10732
      ],
      "op": "AND",
      "path": "45"
    },
    "3526": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10732
      ],
      "op": "EQ",
      "path": "45"
    },
    "3527": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10767
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3528": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10767
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDEA"
    },
    "3531": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10767
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3532": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10767
      ],
      "op": "POP",
      "path": "45"
    },
    "3533": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10760,
        10767
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3540": {
      "op": "SHL"
    },
    "3541": {
      "op": "SUB"
    },
    "3542": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10736,
        10767
      ],
      "op": "AND",
      "path": "45"
    },
    "3543": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10736,
        10756
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDDF"
    },
    "3546": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10748,
        10755
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3547": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10736,
        10747
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x549"
    },
    "3550": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10736,
        10756
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3551": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10736,
        10756
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10736,
        10767
      ],
      "op": "AND",
      "path": "45"
    },
    "3561": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10736,
        10767
      ],
      "op": "EQ",
      "path": "45"
    },
    "3562": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10767
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3563": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10803
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3564": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10803
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDFA"
    },
    "3567": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10803
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3568": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10716,
        10803
      ],
      "op": "POP",
      "path": "45"
    },
    "3569": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10771,
        10803
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDFA"
    },
    "3572": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10788,
        10793
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3573": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10795,
        10802
      ],
      "op": "DUP6",
      "path": "45"
    },
    "3574": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10771,
        10787
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCA6"
    },
    "3577": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        10771,
        10803
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3578": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10771,
        10803
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3579": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10708,
        10804
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "3580": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        10482,
        10811
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        10482,
        10811
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3586": {
      "fn": "ERC721._transfer",
      "offset": [
        13476,
        14035
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3587": {
      "fn": "ERC721._transfer",
      "offset": [
        13593,
        13597
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 34
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "fn": "ERC721._transfer",
      "offset": [
        13573,
        13597
      ],
      "op": "AND",
      "path": "45"
    },
    "3597": {
      "fn": "ERC721._transfer",
      "offset": [
        13573,
        13589
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE15"
    },
    "3600": {
      "fn": "ERC721._transfer",
      "offset": [
        13581,
        13588
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3601": {
      "fn": "ERC721._transfer",
      "offset": [
        13573,
        13580
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x74A"
    },
    "3604": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13573,
        13589
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3605": {
      "fn": "ERC721._transfer",
      "offset": [
        13573,
        13589
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "fn": "ERC721._transfer",
      "offset": [
        13573,
        13597
      ],
      "op": "AND",
      "path": "45"
    },
    "3615": {
      "branch": 98,
      "fn": "ERC721._transfer",
      "offset": [
        13573,
        13597
      ],
      "op": "EQ",
      "path": "45"
    },
    "3616": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE5A"
    },
    "3619": {
      "branch": 98,
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3620": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3622": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3631": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3632": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3634": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "ADD",
      "path": "45"
    },
    "3635": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3636": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3637": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3639": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "ADD",
      "path": "45"
    },
    "3640": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3641": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3642": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "SUB",
      "path": "45"
    },
    "3643": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3644": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3645": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x29"
    },
    "3647": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3648": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3649": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3651": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "ADD",
      "path": "45"
    },
    "3652": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3653": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x18C3"
    },
    "3656": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x29"
    },
    "3658": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3659": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "3660": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3662": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "ADD",
      "path": "45"
    },
    "3663": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3664": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "POP",
      "path": "45"
    },
    "3665": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "POP",
      "path": "45"
    },
    "3666": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3668": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3669": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3670": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3671": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "SUB",
      "path": "45"
    },
    "3672": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3673": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3674": {
      "fn": "ERC721._transfer",
      "offset": [
        13565,
        13643
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3681": {
      "op": "SHL"
    },
    "3682": {
      "op": "SUB"
    },
    "3683": {
      "fn": "ERC721._transfer",
      "offset": [
        13661,
        13677
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 35
    },
    "3684": {
      "branch": 99,
      "fn": "ERC721._transfer",
      "offset": [
        13661,
        13677
      ],
      "op": "AND",
      "path": "45"
    },
    "3685": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE9F"
    },
    "3688": {
      "branch": 99,
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "3689": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3691": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3698": {
      "op": "SHL"
    },
    "3699": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3700": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3701": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "3703": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "ADD",
      "path": "45"
    },
    "3704": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3705": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3706": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3708": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "ADD",
      "path": "45"
    },
    "3709": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3710": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3711": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "SUB",
      "path": "45"
    },
    "3712": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3713": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3714": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "3716": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3717": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3718": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3720": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "ADD",
      "path": "45"
    },
    "3721": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3722": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x179A"
    },
    "3725": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "3727": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3728": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "3729": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3731": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "ADD",
      "path": "45"
    },
    "3732": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3733": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "POP",
      "path": "45"
    },
    "3734": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "POP",
      "path": "45"
    },
    "3735": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3737": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3738": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3739": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3740": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "SUB",
      "path": "45"
    },
    "3741": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3742": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "REVERT",
      "path": "45"
    },
    "3743": {
      "fn": "ERC721._transfer",
      "offset": [
        13653,
        13718
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3744": {
      "fn": "ERC721._transfer",
      "offset": [
        13729,
        13768
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 36,
      "value": "0xEAA"
    },
    "3747": {
      "fn": "ERC721._transfer",
      "offset": [
        13750,
        13754
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3748": {
      "fn": "ERC721._transfer",
      "offset": [
        13756,
        13758
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3749": {
      "fn": "ERC721._transfer",
      "offset": [
        13760,
        13767
      ],
      "op": "DUP4",
      "path": "45"
    },
    "3750": {
      "fn": "ERC721._transfer",
      "offset": [
        13729,
        13749
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x681"
    },
    "3753": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13729,
        13768
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3754": {
      "fn": "ERC721._transfer",
      "offset": [
        13729,
        13768
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3755": {
      "fn": "ERC721._transfer",
      "offset": [
        13830,
        13859
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 37,
      "value": "0xEB5"
    },
    "3758": {
      "fn": "ERC721._transfer",
      "offset": [
        13847,
        13848
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3760": {
      "fn": "ERC721._transfer",
      "offset": [
        13851,
        13858
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3761": {
      "fn": "ERC721._transfer",
      "offset": [
        13830,
        13838
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE5"
    },
    "3764": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13830,
        13859
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3765": {
      "fn": "ERC721._transfer",
      "offset": [
        13830,
        13859
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "op": "SUB"
    },
    "3774": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "DUP4",
      "path": "45",
      "statement": 38
    },
    "3775": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "AND",
      "path": "45"
    },
    "3776": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3778": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3779": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3780": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3781": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13883
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3783": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3785": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3786": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3788": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3789": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13889
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3790": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13905
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xED7"
    },
    "3793": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13905
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3794": {
      "fn": "ERC721._transfer",
      "offset": [
        13897,
        13904
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3795": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13896
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10CA"
    },
    "3798": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13870,
        13905
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3799": {
      "fn": "ERC721._transfer",
      "offset": [
        13870,
        13905
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "DUP3",
      "path": "45",
      "statement": 39
    },
    "3810": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "AND",
      "path": "45"
    },
    "3811": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "3813": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3814": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "DUP2",
      "path": "45"
    },
    "3815": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3816": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13928
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "3818": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "3820": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "3821": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3823": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3824": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13932
      ],
      "op": "KECCAK256",
      "path": "45"
    },
    "3825": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13945
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xEFA"
    },
    "3828": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13945
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3829": {
      "fn": "ERC721._transfer",
      "offset": [
        13937,
        13944
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3830": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13936
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10D6"
    },
    "3833": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13915,
        13945
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3834": {
      "fn": "ERC721._transfer",
      "offset": [
        13915,
        13945
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "fn": "ERC721._transfer",
      "offset": [
        13956,
        13985
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 40,
      "value": "0xF07"
    },
    "3839": {
      "fn": "ERC721._transfer",
      "offset": [
        13956,
        13968
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x2"
    },
    "3841": {
      "fn": "ERC721._transfer",
      "offset": [
        13973,
        13980
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3842": {
      "fn": "ERC721._transfer",
      "offset": [
        13982,
        13984
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3843": {
      "fn": "ERC721._transfer",
      "offset": [
        13956,
        13972
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x10E2"
    },
    "3846": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        13956,
        13985
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3847": {
      "fn": "ERC721._transfer",
      "offset": [
        13956,
        13985
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3848": {
      "fn": "ERC721._transfer",
      "offset": [
        13956,
        13985
      ],
      "op": "POP",
      "path": "45"
    },
    "3849": {
      "fn": "ERC721._transfer",
      "offset": [
        14020,
        14027
      ],
      "op": "DUP1",
      "path": "45",
      "statement": 41
    },
    "3850": {
      "fn": "ERC721._transfer",
      "offset": [
        14016,
        14018
      ],
      "op": "DUP3",
      "path": "45"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "op": "SUB"
    },
    "3859": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "AND",
      "path": "45"
    },
    "3860": {
      "fn": "ERC721._transfer",
      "offset": [
        14010,
        14014
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "op": "SUB"
    },
    "3869": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "AND",
      "path": "45"
    },
    "3870": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "PUSH32",
      "path": "45",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3903": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3905": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3906": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "3908": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "3909": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "DUP1",
      "path": "45"
    },
    "3910": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "3911": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "SUB",
      "path": "45"
    },
    "3912": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "3913": {
      "fn": "ERC721._transfer",
      "offset": [
        14001,
        14028
      ],
      "op": "LOG4",
      "path": "45"
    },
    "3914": {
      "fn": "ERC721._transfer",
      "offset": [
        13476,
        14035
      ],
      "op": "POP",
      "path": "45"
    },
    "3915": {
      "fn": "ERC721._transfer",
      "offset": [
        13476,
        14035
      ],
      "op": "POP",
      "path": "45"
    },
    "3916": {
      "fn": "ERC721._transfer",
      "offset": [
        13476,
        14035
      ],
      "op": "POP",
      "path": "45"
    },
    "3917": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        13476,
        14035
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3918": {
      "fn": "EnumerableSet.at",
      "offset": [
        7616,
        7751
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "3919": {
      "fn": "EnumerableSet.at",
      "offset": [
        7687,
        7694
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "3921": {
      "fn": "EnumerableSet.at",
      "offset": [
        7721,
        7743
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 42,
      "value": "0x710"
    },
    "3924": {
      "fn": "EnumerableSet.at",
      "offset": [
        7725,
        7728
      ],
      "op": "DUP4",
      "path": "57"
    },
    "3925": {
      "fn": "EnumerableSet.at",
      "offset": [
        7737,
        7742
      ],
      "op": "DUP4",
      "path": "57"
    },
    "3926": {
      "fn": "EnumerableSet.at",
      "offset": [
        7721,
        7724
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x10F8"
    },
    "3929": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7721,
        7743
      ],
      "op": "JUMP",
      "path": "57"
    },
    "3930": {
      "fn": "EnumerableMap.at",
      "offset": [
        7439,
        7663
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "3931": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "3933": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "DUP1",
      "path": "56"
    },
    "3934": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "DUP1",
      "path": "56"
    },
    "3935": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "DUP1",
      "path": "56"
    },
    "3936": {
      "fn": "EnumerableMap.at",
      "offset": [
        7578,
        7600
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0xF69"
    },
    "3939": {
      "fn": "EnumerableMap.at",
      "offset": [
        7582,
        7585
      ],
      "op": "DUP7",
      "path": "56"
    },
    "3940": {
      "fn": "EnumerableMap.at",
      "offset": [
        7594,
        7599
      ],
      "op": "DUP7",
      "path": "56"
    },
    "3941": {
      "fn": "EnumerableMap.at",
      "offset": [
        7578,
        7581
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x115C"
    },
    "3944": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        7578,
        7600
      ],
      "op": "JUMP",
      "path": "56"
    },
    "3945": {
      "fn": "EnumerableMap.at",
      "offset": [
        7578,
        7600
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "3946": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "3947": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP8",
      "path": "56"
    },
    "3948": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "3949": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP7",
      "path": "56"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "fn": "EnumerableMap.at",
      "offset": [
        7439,
        7663
      ],
      "op": "SWAP5",
      "path": "56"
    },
    "3952": {
      "op": "POP"
    },
    "3953": {
      "op": "POP"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        7439,
        7663
      ],
      "op": "JUMP",
      "path": "56"
    },
    "3958": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "3959": {
      "fn": "EnumerableMap.get",
      "offset": [
        8189,
        8196
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "3961": {
      "fn": "EnumerableMap.get",
      "offset": [
        8231,
        8275
      ],
      "op": "PUSH2",
      "path": "56",
      "statement": 43,
      "value": "0xF83"
    },
    "3964": {
      "fn": "EnumerableMap.get",
      "offset": [
        8236,
        8239
      ],
      "op": "DUP5",
      "path": "56"
    },
    "3965": {
      "fn": "EnumerableMap.get",
      "offset": [
        8256,
        8259
      ],
      "op": "DUP5",
      "path": "56"
    },
    "3966": {
      "fn": "EnumerableMap.get",
      "offset": [
        8262,
        8274
      ],
      "op": "DUP5",
      "path": "56"
    },
    "3967": {
      "fn": "EnumerableMap.get",
      "offset": [
        8231,
        8235
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x11D7"
    },
    "3970": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        8231,
        8275
      ],
      "op": "JUMP",
      "path": "56"
    },
    "3971": {
      "fn": "EnumerableMap.get",
      "offset": [
        8231,
        8275
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "3972": {
      "fn": "EnumerableMap.get",
      "offset": [
        8223,
        8276
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "3975": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "SWAP4",
      "path": "56"
    },
    "3976": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "3977": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "POP",
      "path": "56"
    },
    "3978": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "POP",
      "path": "56"
    },
    "3979": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "POP",
      "path": "56"
    },
    "3980": {
      "fn": "EnumerableMap.get",
      "jump": "o",
      "offset": [
        8082,
        8284
      ],
      "op": "JUMP",
      "path": "56"
    },
    "3981": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9635,
        9904
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3982": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9748,
        9776
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 44,
      "value": "0xF98"
    },
    "3985": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9758,
        9762
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3986": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9764,
        9766
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3987": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9768,
        9775
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3988": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9748,
        9757
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xE02"
    },
    "3991": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        9748,
        9776
      ],
      "op": "JUMP",
      "path": "45"
    },
    "3992": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9748,
        9776
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "3993": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9794,
        9842
      ],
      "op": "PUSH2",
      "path": "45",
      "statement": 45,
      "value": "0xFA4"
    },
    "3996": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9817,
        9821
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3997": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9823,
        9825
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3998": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9827,
        9834
      ],
      "op": "DUP5",
      "path": "45"
    },
    "3999": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9836,
        9841
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4000": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9794,
        9816
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12A1"
    },
    "4003": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        9794,
        9842
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4004": {
      "branch": 100,
      "fn": "ERC721._safeTransfer",
      "offset": [
        9794,
        9842
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4005": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x9F9"
    },
    "4008": {
      "branch": 100,
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4009": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4011": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4020": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4021": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x4"
    },
    "4023": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "ADD",
      "path": "45"
    },
    "4024": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4025": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4026": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4028": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "ADD",
      "path": "45"
    },
    "4029": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4030": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4031": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "SUB",
      "path": "45"
    },
    "4032": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4033": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4034": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x32"
    },
    "4036": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4037": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4038": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4040": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "ADD",
      "path": "45"
    },
    "4041": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4042": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1768"
    },
    "4045": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x32"
    },
    "4047": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4048": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "4049": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4051": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "ADD",
      "path": "45"
    },
    "4052": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4053": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "POP",
      "path": "45"
    },
    "4054": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "POP",
      "path": "45"
    },
    "4055": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4057": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4058": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4059": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4060": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "SUB",
      "path": "45"
    },
    "4061": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4062": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        9786,
        9897
      ],
      "op": "REVERT",
      "path": "45"
    },
    "4063": {
      "fn": "Strings.toString",
      "offset": [
        169,
        892
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4064": {
      "fn": "Strings.toString",
      "offset": [
        225,
        238
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x60"
    },
    "4066": {
      "branch": 111,
      "fn": "Strings.toString",
      "offset": [
        442,
        452
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4067": {
      "fn": "Strings.toString",
      "offset": [
        438,
        489
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x1004"
    },
    "4070": {
      "branch": 111,
      "fn": "Strings.toString",
      "offset": [
        438,
        489
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 46,
      "value": "0x40"
    },
    "4074": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4075": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "4076": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4077": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4078": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "ADD",
      "path": "59"
    },
    "4079": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4080": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "4081": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "4082": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1"
    },
    "4084": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4085": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4090": {
      "op": "SHL"
    },
    "4091": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "4093": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4094": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "ADD",
      "path": "59"
    },
    "4095": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "4096": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x4AE"
    },
    "4099": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "JUMP",
      "path": "59"
    },
    "4100": {
      "fn": "Strings.toString",
      "offset": [
        438,
        489
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4101": {
      "fn": "Strings.toString",
      "offset": [
        513,
        518
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4102": {
      "fn": "Strings.toString",
      "offset": [
        498,
        510
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "4104": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4105": {
      "fn": "Strings.toString",
      "offset": [
        559,
        568
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4106": {
      "fn": "Strings.toString",
      "offset": [
        559,
        568
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "4107": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x101C"
    },
    "4110": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "4111": {
      "fn": "Strings.toString",
      "offset": [
        584,
        592
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 47,
      "value": "0x1"
    },
    "4113": {
      "fn": "Strings.toString",
      "offset": [
        584,
        592
      ],
      "op": "ADD",
      "path": "59"
    },
    "4114": {
      "fn": "Strings.toString",
      "offset": [
        614,
        616
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 48,
      "value": "0xA"
    },
    "4116": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4117": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "DIV",
      "path": "59"
    },
    "4118": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "SWAP2",
      "path": "59"
    },
    "4119": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "POP",
      "path": "59"
    },
    "4120": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x1008"
    },
    "4123": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMP",
      "path": "59"
    },
    "4124": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4125": {
      "fn": "Strings.toString",
      "offset": [
        636,
        655
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x60"
    },
    "4127": {
      "fn": "Strings.toString",
      "offset": [
        668,
        674
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4128": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH8",
      "path": "59",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4137": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4138": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "GT",
      "path": "59"
    },
    "4139": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4140": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "4141": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x1035"
    },
    "4144": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "4145": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "4147": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4148": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "REVERT",
      "path": "59"
    },
    "4149": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4150": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "POP",
      "path": "59"
    },
    "4151": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "4153": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "4154": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4155": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4156": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4157": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "4158": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4159": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1F"
    },
    "4161": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "59"
    },
    "4162": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1F"
    },
    "4164": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "NOT",
      "path": "59"
    },
    "4165": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "AND",
      "path": "59"
    },
    "4166": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "4168": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "59"
    },
    "4169": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4170": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "59"
    },
    "4171": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x40"
    },
    "4173": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "MSTORE",
      "path": "59"
    },
    "4174": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4175": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "4176": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x1060"
    },
    "4179": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "4180": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "4182": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4183": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "59"
    },
    "4184": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4185": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4186": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "CALLDATASIZE",
      "path": "59"
    },
    "4187": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP4",
      "path": "59"
    },
    "4188": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "CALLDATACOPY",
      "path": "59"
    },
    "4189": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "59"
    },
    "4190": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "fn": "Strings.toString",
      "offset": [
        728,
        733
      ],
      "op": "DUP6",
      "path": "59",
      "statement": 49
    },
    "4195": {
      "fn": "Strings.toString",
      "offset": [
        728,
        733
      ],
      "op": "SWAP4",
      "path": "59"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "fn": "Strings.toString",
      "offset": [
        636,
        675
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4201": {
      "op": "NOT"
    },
    "4202": {
      "fn": "Strings.toString",
      "offset": [
        701,
        711
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4203": {
      "fn": "Strings.toString",
      "offset": [
        701,
        711
      ],
      "op": "ADD",
      "path": "59"
    },
    "4204": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4205": {
      "fn": "Strings.toString",
      "offset": [
        750,
        759
      ],
      "op": "DUP4",
      "path": "59"
    },
    "4206": {
      "fn": "Strings.toString",
      "offset": [
        750,
        759
      ],
      "op": "ISZERO",
      "path": "59"
    },
    "4207": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x10B1"
    },
    "4210": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "4211": {
      "fn": "Strings.toString",
      "offset": [
        816,
        818
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 50,
      "value": "0xA"
    },
    "4213": {
      "fn": "Strings.toString",
      "offset": [
        809,
        813
      ],
      "op": "DUP5",
      "path": "59"
    },
    "4214": {
      "fn": "Strings.toString",
      "offset": [
        809,
        818
      ],
      "op": "MOD",
      "path": "59"
    },
    "4215": {
      "fn": "Strings.toString",
      "offset": [
        804,
        806
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x30"
    },
    "4217": {
      "fn": "Strings.toString",
      "offset": [
        804,
        818
      ],
      "op": "ADD",
      "path": "59"
    },
    "4218": {
      "fn": "Strings.toString",
      "offset": [
        793,
        820
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0xF8"
    },
    "4220": {
      "fn": "Strings.toString",
      "offset": [
        793,
        820
      ],
      "op": "SHL",
      "path": "59"
    },
    "4221": {
      "fn": "Strings.toString",
      "offset": [
        775,
        781
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4222": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "DUP3",
      "path": "59"
    },
    "4223": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "DUP1",
      "path": "59"
    },
    "4224": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x1"
    },
    "4226": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4227": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "SUB",
      "path": "59"
    },
    "4228": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "SWAP4",
      "path": "59"
    },
    "4229": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "POP",
      "path": "59"
    },
    "4230": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4231": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "MLOAD",
      "path": "59"
    },
    "4232": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4233": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "LT",
      "path": "59"
    },
    "4234": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x108F"
    },
    "4237": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "JUMPI",
      "path": "59"
    },
    "4238": {
      "dev": "Index out of range",
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "INVALID",
      "path": "59"
    },
    "4239": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4240": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x20"
    },
    "4242": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "ADD",
      "path": "59"
    },
    "4243": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "ADD",
      "path": "59"
    },
    "4244": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "op": "SUB"
    },
    "4253": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "NOT",
      "path": "59"
    },
    "4254": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "AND",
      "path": "59"
    },
    "4255": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4256": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "DUP2",
      "path": "59"
    },
    "4257": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "PUSH1",
      "path": "59",
      "value": "0x0"
    },
    "4259": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "BYTE",
      "path": "59"
    },
    "4260": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "SWAP1",
      "path": "59"
    },
    "4261": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "MSTORE8",
      "path": "59"
    },
    "4262": {
      "op": "POP"
    },
    "4263": {
      "fn": "Strings.toString",
      "offset": [
        842,
        844
      ],
      "op": "PUSH1",
      "path": "59",
      "statement": 51,
      "value": "0xA"
    },
    "4265": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "DUP5",
      "path": "59"
    },
    "4266": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "DIV",
      "path": "59"
    },
    "4267": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "SWAP4",
      "path": "59"
    },
    "4268": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "POP",
      "path": "59"
    },
    "4269": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "PUSH2",
      "path": "59",
      "value": "0x106C"
    },
    "4272": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMP",
      "path": "59"
    },
    "4273": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMPDEST",
      "path": "59"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "fn": "Strings.toString",
      "offset": [
        878,
        884
      ],
      "op": "SWAP5",
      "path": "59",
      "statement": 52
    },
    "4276": {
      "fn": "Strings.toString",
      "offset": [
        169,
        892
      ],
      "op": "SWAP4",
      "path": "59"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        169,
        892
      ],
      "op": "JUMP",
      "path": "59"
    },
    "4282": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6758,
        6907
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4283": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6842,
        6846
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4285": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6865,
        6900
      ],
      "op": "PUSH2",
      "path": "56",
      "statement": 53,
      "value": "0x710"
    },
    "4288": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6875,
        6878
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4289": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6895,
        6898
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4290": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6865,
        6874
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1409"
    },
    "4293": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        6865,
        6900
      ],
      "op": "JUMP",
      "path": "56"
    },
    "4294": {
      "fn": "EnumerableMap._length",
      "offset": [
        4450,
        4558
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4295": {
      "fn": "EnumerableMap._length",
      "offset": [
        4532,
        4551
      ],
      "op": "SLOAD",
      "path": "56",
      "statement": 54
    },
    "4296": {
      "fn": "EnumerableMap._length",
      "offset": [
        4532,
        4551
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4297": {
      "fn": "EnumerableMap._length",
      "jump": "o",
      "offset": [
        4450,
        4558
      ],
      "op": "JUMP",
      "path": "56"
    },
    "4298": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6731,
        6866
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "4299": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6801,
        6805
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "4301": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6824,
        6859
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 55,
      "value": "0x710"
    },
    "4304": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6832,
        6835
      ],
      "op": "DUP4",
      "path": "57"
    },
    "4305": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6852,
        6857
      ],
      "op": "DUP4",
      "path": "57"
    },
    "4306": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6824,
        6831
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1421"
    },
    "4309": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6824,
        6859
      ],
      "op": "JUMP",
      "path": "57"
    },
    "4310": {
      "fn": "EnumerableSet.add",
      "offset": [
        6434,
        6563
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "4311": {
      "fn": "EnumerableSet.add",
      "offset": [
        6501,
        6505
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "4313": {
      "fn": "EnumerableSet.add",
      "offset": [
        6524,
        6556
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 56,
      "value": "0x710"
    },
    "4316": {
      "fn": "EnumerableSet.add",
      "offset": [
        6529,
        6532
      ],
      "op": "DUP4",
      "path": "57"
    },
    "4317": {
      "fn": "EnumerableSet.add",
      "offset": [
        6549,
        6554
      ],
      "op": "DUP4",
      "path": "57"
    },
    "4318": {
      "fn": "EnumerableSet.add",
      "offset": [
        6524,
        6528
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x14E7"
    },
    "4321": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6524,
        6556
      ],
      "op": "JUMP",
      "path": "57"
    },
    "4322": {
      "fn": "EnumerableMap.set",
      "offset": [
        6206,
        6380
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4323": {
      "fn": "EnumerableMap.set",
      "offset": [
        6295,
        6299
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4325": {
      "fn": "EnumerableMap.set",
      "offset": [
        6318,
        6373
      ],
      "op": "PUSH2",
      "path": "56",
      "statement": 57,
      "value": "0xF83"
    },
    "4328": {
      "fn": "EnumerableMap.set",
      "offset": [
        6323,
        6326
      ],
      "op": "DUP5",
      "path": "56"
    },
    "4329": {
      "fn": "EnumerableMap.set",
      "offset": [
        6343,
        6346
      ],
      "op": "DUP5",
      "path": "56"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "EnumerableMap.set",
      "offset": [
        6357,
        6371
      ],
      "op": "DUP6",
      "path": "56"
    },
    "4339": {
      "fn": "EnumerableMap.set",
      "offset": [
        6357,
        6371
      ],
      "op": "AND",
      "path": "56"
    },
    "4340": {
      "fn": "EnumerableMap.set",
      "offset": [
        6318,
        6322
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1531"
    },
    "4343": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        6318,
        6373
      ],
      "op": "JUMP",
      "path": "56"
    },
    "4344": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "4345": {
      "fn": "EnumerableSet._at",
      "offset": [
        4484,
        4502
      ],
      "op": "DUP2",
      "path": "57",
      "statement": 58
    },
    "4346": {
      "fn": "EnumerableSet._at",
      "offset": [
        4484,
        4502
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "4347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4457,
        4464
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "4349": {
      "fn": "EnumerableSet._at",
      "offset": [
        4457,
        4464
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "4350": {
      "branch": 108,
      "fn": "EnumerableSet._at",
      "offset": [
        4484,
        4510
      ],
      "op": "DUP3",
      "path": "57"
    },
    "4351": {
      "op": "LT"
    },
    "4352": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x113A"
    },
    "4355": {
      "branch": 108,
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "4356": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "4358": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "4359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4365": {
      "op": "SHL"
    },
    "4366": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP2",
      "path": "57"
    },
    "4367": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "4368": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x4"
    },
    "4370": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "57"
    },
    "4371": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "57"
    },
    "4372": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "57"
    },
    "4373": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "4375": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "57"
    },
    "4376": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP3",
      "path": "57"
    },
    "4377": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP2",
      "path": "57"
    },
    "4378": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SUB",
      "path": "57"
    },
    "4379": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP3",
      "path": "57"
    },
    "4380": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "4381": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x22"
    },
    "4383": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP2",
      "path": "57"
    },
    "4384": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "4385": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "4387": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "57"
    },
    "4388": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "57"
    },
    "4389": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1746"
    },
    "4392": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x22"
    },
    "4394": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "4395": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "CODECOPY",
      "path": "57"
    },
    "4396": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "4398": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "57"
    },
    "4399": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "4400": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "POP",
      "path": "57"
    },
    "4401": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "POP",
      "path": "57"
    },
    "4402": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "4404": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MLOAD",
      "path": "57"
    },
    "4405": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "57"
    },
    "4406": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "4407": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SUB",
      "path": "57"
    },
    "4408": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "4409": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "REVERT",
      "path": "57"
    },
    "4410": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "4411": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4569
      ],
      "op": "DUP3",
      "path": "57",
      "statement": 59
    },
    "4412": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4577
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "4414": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4577
      ],
      "op": "ADD",
      "path": "57"
    },
    "4415": {
      "fn": "EnumerableSet._at",
      "offset": [
        4578,
        4583
      ],
      "op": "DUP3",
      "path": "57"
    },
    "4416": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP2",
      "path": "57"
    },
    "4417": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "4418": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP2",
      "path": "57"
    },
    "4419": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "LT",
      "path": "57"
    },
    "4420": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1149"
    },
    "4423": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "4424": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "INVALID",
      "path": "57"
    },
    "4425": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "4426": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "4427": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "4429": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "4430": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "4432": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "4434": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "4435": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "ADD",
      "path": "57"
    },
    "4436": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "4437": {
      "fn": "EnumerableSet._at",
      "offset": [
        4559,
        4584
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "4438": {
      "fn": "EnumerableSet._at",
      "offset": [
        4559,
        4584
      ],
      "op": "POP",
      "path": "57"
    },
    "4439": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "4440": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "4441": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "POP",
      "path": "57"
    },
    "4442": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "POP",
      "path": "57"
    },
    "4443": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4390,
        4591
      ],
      "op": "JUMP",
      "path": "57"
    },
    "4444": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4445": {
      "fn": "EnumerableMap._at",
      "offset": [
        5004,
        5023
      ],
      "op": "DUP2",
      "path": "56",
      "statement": 60
    },
    "4446": {
      "fn": "EnumerableMap._at",
      "offset": [
        5004,
        5023
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4447": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4449": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4450": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4451": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4452": {
      "branch": 105,
      "fn": "EnumerableMap._at",
      "offset": [
        5004,
        5031
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4453": {
      "op": "LT"
    },
    "4454": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x11A0"
    },
    "4457": {
      "branch": 105,
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "4458": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "4460": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4467": {
      "op": "SHL"
    },
    "4468": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4469": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4470": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x4"
    },
    "4472": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "56"
    },
    "4473": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4474": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4475": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4477": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "56"
    },
    "4478": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4479": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4480": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SUB",
      "path": "56"
    },
    "4481": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4482": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4483": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x22"
    },
    "4485": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4486": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4487": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4489": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "56"
    },
    "4490": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4491": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1875"
    },
    "4494": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x22"
    },
    "4496": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4497": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "CODECOPY",
      "path": "56"
    },
    "4498": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "4500": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "56"
    },
    "4501": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4502": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "POP",
      "path": "56"
    },
    "4503": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "POP",
      "path": "56"
    },
    "4504": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "4506": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4507": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4508": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4509": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SUB",
      "path": "56"
    },
    "4510": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4511": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "REVERT",
      "path": "56"
    },
    "4512": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4513": {
      "fn": "EnumerableMap._at",
      "offset": [
        5081,
        5103
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4515": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5109
      ],
      "op": "DUP5",
      "path": "56"
    },
    "4516": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5118
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4518": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5118
      ],
      "op": "ADD",
      "path": "56"
    },
    "4519": {
      "fn": "EnumerableMap._at",
      "offset": [
        5119,
        5124
      ],
      "op": "DUP5",
      "path": "56"
    },
    "4520": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4521": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4522": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4523": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "LT",
      "path": "56"
    },
    "4524": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x11B1"
    },
    "4527": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "4528": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "INVALID",
      "path": "56"
    },
    "4529": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4530": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4531": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4533": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4534": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4536": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4538": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "4539": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4540": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x2"
    },
    "4542": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "MUL",
      "path": "56"
    },
    "4543": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "ADD",
      "path": "56"
    },
    "4544": {
      "fn": "EnumerableMap._at",
      "offset": [
        5081,
        5125
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4545": {
      "fn": "EnumerableMap._at",
      "offset": [
        5081,
        5125
      ],
      "op": "POP",
      "path": "56"
    },
    "4546": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5148
      ],
      "op": "DUP1",
      "path": "56",
      "statement": 61
    },
    "4547": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5153
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4549": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5153
      ],
      "op": "ADD",
      "path": "56"
    },
    "4550": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5153
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4551": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4552": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5167
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "4554": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5167
      ],
      "op": "ADD",
      "path": "56"
    },
    "4555": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5167
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4556": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "4557": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "POP",
      "path": "56"
    },
    "4558": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "4559": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "POP",
      "path": "56"
    },
    "4560": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "POP",
      "path": "56"
    },
    "4561": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "4562": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "POP",
      "path": "56"
    },
    "4563": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "4564": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4565": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "POP",
      "path": "56"
    },
    "4566": {
      "fn": "EnumerableMap._at",
      "jump": "o",
      "offset": [
        4901,
        5175
      ],
      "op": "JUMP",
      "path": "56"
    },
    "4567": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4568": {
      "fn": "EnumerableMap._get",
      "offset": [
        5676,
        5683
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4570": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4571": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4572": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4573": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5726
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "4575": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5726
      ],
      "op": "DUP5",
      "path": "56"
    },
    "4576": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5726
      ],
      "op": "ADD",
      "path": "56"
    },
    "4577": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4579": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4580": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "4582": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4583": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "4584": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4585": {
      "fn": "EnumerableMap._get",
      "offset": [
        5764,
        5776
      ],
      "op": "DUP3",
      "path": "56",
      "statement": 62
    },
    "4586": {
      "branch": 106,
      "fn": "EnumerableMap._get",
      "offset": [
        5749,
        5762
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4587": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1272"
    },
    "4590": {
      "branch": 106,
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "4591": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "4593": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4600": {
      "op": "SHL"
    },
    "4601": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4602": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4603": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x4"
    },
    "4605": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4606": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4607": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4608": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4610": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4611": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4612": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4613": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "56"
    },
    "4614": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4615": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4616": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4617": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4618": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4619": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4620": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4621": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4622": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4624": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4625": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4626": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4627": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4628": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4629": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4630": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4632": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4633": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4634": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4635": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4636": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4637": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4639": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4640": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4641": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4642": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "LT",
      "path": "56"
    },
    "4643": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ISZERO",
      "path": "56"
    },
    "4644": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1237"
    },
    "4647": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "4648": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4649": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4650": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4651": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4652": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4653": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4654": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4655": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4656": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4658": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4659": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x121F"
    },
    "4662": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMP",
      "path": "56"
    },
    "4663": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4664": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4665": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4666": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4667": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4668": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4669": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4670": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4671": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4672": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4673": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4674": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1F"
    },
    "4676": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "AND",
      "path": "56"
    },
    "4677": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4678": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ISZERO",
      "path": "56"
    },
    "4679": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1264"
    },
    "4682": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "4683": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4684": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4685": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "56"
    },
    "4686": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4687": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4688": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "4690": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "56"
    },
    "4691": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4693": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "56"
    },
    "4694": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x100"
    },
    "4697": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "EXP",
      "path": "56"
    },
    "4698": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "56"
    },
    "4699": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "NOT",
      "path": "56"
    },
    "4700": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "AND",
      "path": "56"
    },
    "4701": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4702": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4703": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4705": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "56"
    },
    "4706": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4707": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4708": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4709": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4710": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "4711": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4712": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4713": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4714": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "4716": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "4717": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "56"
    },
    "4718": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4719": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "56"
    },
    "4720": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4721": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "REVERT",
      "path": "56"
    },
    "4722": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4723": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "56"
    },
    "4724": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5833
      ],
      "op": "DUP5",
      "path": "56",
      "statement": 63
    },
    "4725": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5842
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4727": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5842
      ],
      "op": "ADD",
      "path": "56"
    },
    "4728": {
      "fn": "EnumerableMap._get",
      "offset": [
        5854,
        5855
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "4730": {
      "fn": "EnumerableMap._get",
      "offset": [
        5843,
        5851
      ],
      "op": "DUP3",
      "path": "56"
    },
    "4731": {
      "fn": "EnumerableMap._get",
      "offset": [
        5843,
        5855
      ],
      "op": "SUB",
      "path": "56"
    },
    "4732": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4733": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4734": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "DUP2",
      "path": "56"
    },
    "4735": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "LT",
      "path": "56"
    },
    "4736": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1285"
    },
    "4739": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "4740": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "INVALID",
      "path": "56"
    },
    "4741": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "4742": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4743": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4745": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "4746": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "4748": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "4750": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "4751": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "4752": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x2"
    },
    "4754": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "MUL",
      "path": "56"
    },
    "4755": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "ADD",
      "path": "56"
    },
    "4756": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "4758": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5863
      ],
      "op": "ADD",
      "path": "56"
    },
    "4759": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5863
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "4760": {
      "fn": "EnumerableMap._get",
      "offset": [
        5823,
        5863
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "4761": {
      "fn": "EnumerableMap._get",
      "offset": [
        5823,
        5863
      ],
      "op": "POP",
      "path": "56"
    },
    "4762": {
      "fn": "EnumerableMap._get",
      "offset": [
        5823,
        5863
      ],
      "op": "POP",
      "path": "56"
    },
    "4763": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "SWAP4",
      "path": "56"
    },
    "4764": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "4765": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "POP",
      "path": "56"
    },
    "4766": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "POP",
      "path": "56"
    },
    "4767": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "POP",
      "path": "56"
    },
    "4768": {
      "fn": "EnumerableMap._get",
      "jump": "o",
      "offset": [
        5582,
        5897
      ],
      "op": "JUMP",
      "path": "56"
    },
    "4769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15388,
        15392
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15413,
        15428
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12B5"
    },
    "4775": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15413,
        15415
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15413,
        15426
      ],
      "op": "AND",
      "path": "45"
    },
    "4785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15413,
        15426
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x15C8"
    },
    "4788": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15413,
        15428
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4789": {
      "branch": 101,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15413,
        15428
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15408,
        15466
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12C1"
    },
    "4793": {
      "branch": 101,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15408,
        15466
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4794": {
      "op": "POP"
    },
    "4795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15451,
        15455
      ],
      "op": "PUSH1",
      "path": "45",
      "statement": 64,
      "value": "0x1"
    },
    "4797": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15444,
        15455
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xDFA"
    },
    "4800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15444,
        15455
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4801": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15408,
        15466
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15475,
        15498
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "4804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13CF"
    },
    "4807": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "4812": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4814": {
      "op": "SHL"
    },
    "4815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15612,
        15624
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x12D6"
    },
    "4818": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15612,
        15622
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0xCE1"
    },
    "4821": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15612,
        15624
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4822": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15612,
        15624
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4823": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15638,
        15642
      ],
      "op": "DUP9",
      "path": "45"
    },
    "4824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15656,
        15663
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4825": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15677,
        15682
      ],
      "op": "DUP8",
      "path": "45"
    },
    "4826": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4828": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4829": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x24"
    },
    "4831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP6",
      "path": "45"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4840": {
      "op": "SHL"
    },
    "4841": {
      "op": "SUB"
    },
    "4842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "AND",
      "path": "45"
    },
    "4843": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4844": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4845": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4847": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4848": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP5",
      "path": "45"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4855": {
      "op": "SHL"
    },
    "4856": {
      "op": "SUB"
    },
    "4857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "AND",
      "path": "45"
    },
    "4858": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4859": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4860": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4862": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4863": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4870": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SUB",
      "path": "45"
    },
    "4876": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4880": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "4901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "LT",
      "path": "45"
    },
    "4905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x133D"
    },
    "4909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4921": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1325"
    },
    "4924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "JUMP",
      "path": "45"
    },
    "4925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4932": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1F"
    },
    "4938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "AND",
      "path": "45"
    },
    "4939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "4941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x136A"
    },
    "4944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "4945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4946": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP3",
      "path": "45"
    },
    "4947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SUB",
      "path": "45"
    },
    "4948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "4949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x1"
    },
    "4952": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SUB",
      "path": "45"
    },
    "4956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x100"
    },
    "4959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "EXP",
      "path": "45"
    },
    "4960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SUB",
      "path": "45"
    },
    "4961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "NOT",
      "path": "45"
    },
    "4962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "AND",
      "path": "45"
    },
    "4963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4967": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "4968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "4969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "4971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP6",
      "path": "45"
    },
    "4973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4975": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "4979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "4982": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "4984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "4986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SUB",
      "path": "45"
    },
    "4987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SUB",
      "path": "45"
    },
    "4988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "4989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "4993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "4994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "4995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4997": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5001": {
      "op": "SHL"
    },
    "5002": {
      "op": "SUB"
    },
    "5003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "NOT",
      "path": "45"
    },
    "5004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "AND",
      "path": "45"
    },
    "5005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP3",
      "path": "45"
    },
    "5008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "ADD",
      "path": "45"
    },
    "5009": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5017": {
      "op": "SHL"
    },
    "5018": {
      "op": "SUB"
    },
    "5019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5020": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "AND",
      "path": "45"
    },
    "5023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "OR",
      "path": "45"
    },
    "5024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "DUP4",
      "path": "45"
    },
    "5025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "5027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "5028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "5029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15517,
        15692
      ],
      "op": "POP",
      "path": "45"
    },
    "5030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x60"
    },
    "5036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "ADD",
      "path": "45"
    },
    "5037": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x40"
    },
    "5039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5040": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x32"
    },
    "5043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "MSTORE",
      "path": "45"
    },
    "5045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5047": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "ADD",
      "path": "45"
    },
    "5048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x1768"
    },
    "5051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x32"
    },
    "5053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "CODECOPY",
      "path": "45"
    },
    "5055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5061": {
      "op": "SHL"
    },
    "5062": {
      "op": "SUB"
    },
    "5063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15516
      ],
      "op": "DUP9",
      "path": "45"
    },
    "5064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15516
      ],
      "op": "AND",
      "path": "45"
    },
    "5065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15516
      ],
      "op": "SWAP2",
      "path": "45"
    },
    "5066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15516
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x15CE"
    },
    "5070": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        15501,
        15747
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15501,
        15747
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15475,
        15747
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15475,
        15747
      ],
      "op": "POP",
      "path": "45"
    },
    "5074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15757,
        15770
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15784,
        15794
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5080": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "ADD",
      "path": "45"
    },
    "5081": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "SWAP1",
      "path": "45"
    },
    "5082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x20"
    },
    "5085": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "DUP2",
      "path": "45"
    },
    "5086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "LT",
      "path": "45"
    },
    "5087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "ISZERO",
      "path": "45"
    },
    "5088": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "PUSH2",
      "path": "45",
      "value": "0x13E8"
    },
    "5091": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "JUMPI",
      "path": "45"
    },
    "5092": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "PUSH1",
      "path": "45",
      "value": "0x0"
    },
    "5094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "DUP1",
      "path": "45"
    },
    "5095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "REVERT",
      "path": "45"
    },
    "5096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "JUMPDEST",
      "path": "45"
    },
    "5097": {
      "op": "POP"
    },
    "5098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15773,
        15805
      ],
      "op": "MLOAD",
      "path": "45"
    },
    "5099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5105": {
      "op": "SHL"
    },
    "5106": {
      "op": "SUB"
    },
    "5107": {
      "op": "NOT"
    },
    "5108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15823,
        15849
      ],
      "op": "AND",
      "path": "45",
      "statement": 65
    },
    "5109": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5116": {
      "op": "SHL"
    },
    "5117": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15823,
        15849
      ],
      "op": "EQ",
      "path": "45"
    },
    "5118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15823,
        15849
      ],
      "op": "SWAP3",
      "path": "45"
    },
    "5119": {
      "op": "POP"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "SWAP5",
      "path": "45"
    },
    "5123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "SWAP4",
      "path": "45"
    },
    "5124": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "POP",
      "path": "45"
    },
    "5125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "POP",
      "path": "45"
    },
    "5126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "POP",
      "path": "45"
    },
    "5127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        15268,
        15857
      ],
      "op": "POP",
      "path": "45"
    },
    "5128": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        15268,
        15857
      ],
      "op": "JUMP",
      "path": "45"
    },
    "5129": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4237,
        4360
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "5130": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4308,
        4312
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "5132": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "SWAP1",
      "path": "56",
      "statement": 66
    },
    "5133": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5134": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5135": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "5137": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "5138": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5139": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "5140": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "ADD",
      "path": "56"
    },
    "5141": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "5143": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5144": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "5146": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5147": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "5148": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "5149": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4353
      ],
      "op": "ISZERO",
      "path": "56"
    },
    "5150": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4353
      ],
      "op": "ISZERO",
      "path": "56"
    },
    "5151": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4353
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5152": {
      "fn": "EnumerableMap._contains",
      "jump": "o",
      "offset": [
        4237,
        4360
      ],
      "op": "JUMP",
      "path": "56"
    },
    "5153": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2150,
        3662
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5154": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2216,
        2220
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5156": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5157": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5158": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5159": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2365
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "5161": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2365
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5162": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2365
      ],
      "op": "ADD",
      "path": "57"
    },
    "5163": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5165": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5166": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "5168": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5169": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5170": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5171": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2387,
        2402
      ],
      "op": "DUP1",
      "path": "57"
    },
    "5172": {
      "branch": 109,
      "fn": "EnumerableSet._remove",
      "offset": [
        2387,
        2402
      ],
      "op": "ISZERO",
      "path": "57"
    },
    "5173": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2383,
        3656
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x14DD"
    },
    "5176": {
      "branch": 109,
      "fn": "EnumerableSet._remove",
      "offset": [
        2383,
        3656
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "5177": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2834
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5178": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2834
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5181": {
      "op": "NOT"
    },
    "5182": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "DUP1",
      "path": "57"
    },
    "5183": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5184": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "ADD",
      "path": "57"
    },
    "5185": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "5186": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5187": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5188": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "ADD",
      "path": "57"
    },
    "5189": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5190": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2744,
        2765
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5192": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2744,
        2765
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5193": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2819
      ],
      "op": "DUP8",
      "path": "57"
    },
    "5194": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2819
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5195": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5196": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5197": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5198": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "LT",
      "path": "57"
    },
    "5199": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1454"
    },
    "5202": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "5203": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "INVALID",
      "path": "57"
    },
    "5204": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5205": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5206": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5208": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5209": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5211": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5213": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5214": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "ADD",
      "path": "57"
    },
    "5215": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5216": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3078,
        3120
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5217": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3078,
        3120
      ],
      "op": "POP",
      "path": "57"
    },
    "5218": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3241,
        3250
      ],
      "op": "DUP1",
      "path": "57",
      "statement": 67
    },
    "5219": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3215
      ],
      "op": "DUP8",
      "path": "57"
    },
    "5220": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3223
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5222": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3223
      ],
      "op": "ADD",
      "path": "57"
    },
    "5223": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3224,
        3237
      ],
      "op": "DUP5",
      "path": "57"
    },
    "5224": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5225": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5226": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5227": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "LT",
      "path": "57"
    },
    "5228": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1471"
    },
    "5231": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "5232": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "INVALID",
      "path": "57"
    },
    "5233": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5234": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5236": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "5237": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP3",
      "path": "57"
    },
    "5238": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5239": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5241": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP1",
      "path": "57"
    },
    "5242": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5243": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5244": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5245": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "5246": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "ADD",
      "path": "57"
    },
    "5247": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "5248": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5249": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "5250": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5251": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "DUP3",
      "path": "57",
      "statement": 68
    },
    "5252": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5253": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5254": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3358,
        3359
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "5256": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3328
      ],
      "op": "DUP10",
      "path": "57"
    },
    "5257": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3328
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5258": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3328
      ],
      "op": "ADD",
      "path": "57"
    },
    "5259": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5260": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "SWAP3",
      "path": "57"
    },
    "5261": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5262": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "5264": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5265": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5266": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3342,
        3359
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5267": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3342,
        3359
      ],
      "op": "DUP5",
      "path": "57"
    },
    "5268": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3342,
        3359
      ],
      "op": "ADD",
      "path": "57"
    },
    "5269": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3359
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5270": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3359
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5271": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP7",
      "path": "57",
      "statement": 69
    },
    "5272": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5273": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3319
      ],
      "op": "DUP8",
      "path": "57"
    },
    "5274": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3319
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5275": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP1",
      "path": "57"
    },
    "5276": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x14A1"
    },
    "5279": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "5280": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "INVALID",
      "path": "57"
    },
    "5281": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5282": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "5284": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5285": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SUB",
      "path": "57"
    },
    "5286": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5287": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5288": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5289": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5291": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5292": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5294": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5296": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5297": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "ADD",
      "path": "57"
    },
    "5298": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5300": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5301": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5302": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5303": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5304": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3560
      ],
      "op": "DUP7",
      "path": "57",
      "statement": 70
    },
    "5305": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3569
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "5307": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3569
      ],
      "op": "ADD",
      "path": "57"
    },
    "5308": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5310": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3570,
        3575
      ],
      "op": "DUP8",
      "path": "57"
    },
    "5311": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5312": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5313": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5315": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "ADD",
      "path": "57"
    },
    "5316": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5317": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5318": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5319": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5321": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "ADD",
      "path": "57"
    },
    "5322": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5324": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5325": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3550,
        3576
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5327": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3550,
        3576
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5328": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3550,
        3576
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5329": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3598,
        3602
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 71,
      "value": "0x1"
    },
    "5331": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "SWAP5",
      "path": "57"
    },
    "5332": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "57"
    },
    "5333": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "57"
    },
    "5334": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "57"
    },
    "5335": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "57"
    },
    "5336": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "57"
    },
    "5337": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x713"
    },
    "5340": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "JUMP",
      "path": "57"
    },
    "5341": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2383,
        3656
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5342": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3640,
        3645
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 72,
      "value": "0x0"
    },
    "5344": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "5345": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "POP",
      "path": "57"
    },
    "5346": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "POP",
      "path": "57"
    },
    "5347": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x713"
    },
    "5350": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "JUMP",
      "path": "57"
    },
    "5351": {
      "fn": "EnumerableSet._add",
      "offset": [
        1578,
        1982
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5352": {
      "fn": "EnumerableSet._add",
      "offset": [
        1641,
        1645
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5354": {
      "fn": "EnumerableSet._add",
      "offset": [
        1662,
        1683
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x14F3"
    },
    "5357": {
      "fn": "EnumerableSet._add",
      "offset": [
        1672,
        1675
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5358": {
      "fn": "EnumerableSet._add",
      "offset": [
        1677,
        1682
      ],
      "op": "DUP4",
      "path": "57"
    },
    "5359": {
      "fn": "EnumerableSet._add",
      "offset": [
        1662,
        1671
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1409"
    },
    "5362": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1662,
        1683
      ],
      "op": "JUMP",
      "path": "57"
    },
    "5363": {
      "branch": 110,
      "fn": "EnumerableSet._add",
      "offset": [
        1662,
        1683
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5364": {
      "fn": "EnumerableSet._add",
      "offset": [
        1657,
        1976
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x1529"
    },
    "5367": {
      "branch": 110,
      "fn": "EnumerableSet._add",
      "offset": [
        1657,
        1976
      ],
      "op": "JUMPI",
      "path": "57"
    },
    "5368": {
      "op": "POP"
    },
    "5369": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "57",
      "statement": 73
    },
    "5370": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5371": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x1"
    },
    "5373": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5374": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5375": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "ADD",
      "path": "57"
    },
    "5376": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP5",
      "path": "57"
    },
    "5377": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5378": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1710
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x0"
    },
    "5380": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP5",
      "path": "57"
    },
    "5381": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "57"
    },
    "5382": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5383": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x20"
    },
    "5385": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP1",
      "path": "57"
    },
    "5386": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP3",
      "path": "57"
    },
    "5387": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5388": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5389": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "5390": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "ADD",
      "path": "57"
    },
    "5391": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP5",
      "path": "57"
    },
    "5392": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5393": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5394": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1897
      ],
      "op": "DUP5",
      "path": "57",
      "statement": 74
    },
    "5395": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1897
      ],
      "op": "SLOAD",
      "path": "57"
    },
    "5396": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "DUP5",
      "path": "57"
    },
    "5397": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "DUP3",
      "path": "57"
    },
    "5398": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5399": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1869
      ],
      "op": "DUP3",
      "path": "57"
    },
    "5400": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1869
      ],
      "op": "DUP7",
      "path": "57"
    },
    "5401": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1869
      ],
      "op": "ADD",
      "path": "57"
    },
    "5402": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5403": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "SWAP4",
      "path": "57"
    },
    "5404": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "MSTORE",
      "path": "57"
    },
    "5405": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "PUSH1",
      "path": "57",
      "value": "0x40"
    },
    "5407": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5408": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "KECCAK256",
      "path": "57"
    },
    "5409": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "5410": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SWAP1",
      "path": "57"
    },
    "5411": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SWAP2",
      "path": "57"
    },
    "5412": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SSTORE",
      "path": "57"
    },
    "5413": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1922
      ],
      "op": "PUSH2",
      "path": "57",
      "statement": 75,
      "value": "0x713"
    },
    "5416": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1922
      ],
      "op": "JUMP",
      "path": "57"
    },
    "5417": {
      "fn": "EnumerableSet._add",
      "offset": [
        1657,
        1976
      ],
      "op": "JUMPDEST",
      "path": "57"
    },
    "5418": {
      "op": "POP"
    },
    "5419": {
      "fn": "EnumerableSet._add",
      "offset": [
        1960,
        1965
      ],
      "op": "PUSH1",
      "path": "57",
      "statement": 76,
      "value": "0x0"
    },
    "5421": {
      "fn": "EnumerableSet._add",
      "offset": [
        1953,
        1965
      ],
      "op": "PUSH2",
      "path": "57",
      "value": "0x713"
    },
    "5424": {
      "fn": "EnumerableSet._add",
      "offset": [
        1953,
        1965
      ],
      "op": "JUMP",
      "path": "57"
    },
    "5425": {
      "fn": "EnumerableMap._set",
      "offset": [
        1795,
        2473
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "5426": {
      "fn": "EnumerableMap._set",
      "offset": [
        1871,
        1875
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "5428": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP3",
      "path": "56"
    },
    "5429": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5430": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5431": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2016
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "5433": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2016
      ],
      "op": "DUP5",
      "path": "56"
    },
    "5434": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2016
      ],
      "op": "ADD",
      "path": "56"
    },
    "5435": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "5437": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5438": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x40"
    },
    "5440": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5441": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "5442": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "5443": {
      "branch": 107,
      "fn": "EnumerableMap._set",
      "offset": [
        2036,
        2049
      ],
      "op": "DUP1",
      "path": "56"
    },
    "5444": {
      "fn": "EnumerableMap._set",
      "offset": [
        2032,
        2467
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x1596"
    },
    "5447": {
      "branch": 107,
      "fn": "EnumerableMap._set",
      "offset": [
        2032,
        2467
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "5448": {
      "op": "POP"
    },
    "5449": {
      "op": "POP"
    },
    "5450": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "PUSH1",
      "path": "56",
      "statement": 77,
      "value": "0x40"
    },
    "5452": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP1",
      "path": "56"
    },
    "5453": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "5454": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP1",
      "path": "56"
    },
    "5455": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP3",
      "path": "56"
    },
    "5456": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "ADD",
      "path": "56"
    },
    "5457": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP3",
      "path": "56"
    },
    "5458": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5459": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP4",
      "path": "56"
    },
    "5460": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5461": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5462": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "5464": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP1",
      "path": "56"
    },
    "5465": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP3",
      "path": "56"
    },
    "5466": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "ADD",
      "path": "56"
    },
    "5467": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP5",
      "path": "56"
    },
    "5468": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5469": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5470": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP7",
      "path": "56"
    },
    "5471": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "5472": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "5474": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5475": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5476": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "ADD",
      "path": "56"
    },
    "5477": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP10",
      "path": "56"
    },
    "5478": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SSTORE",
      "path": "56"
    },
    "5479": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2114
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "5481": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP10",
      "path": "56"
    },
    "5482": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5483": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5484": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP5",
      "path": "56"
    },
    "5485": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5486": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "5487": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP6",
      "path": "56"
    },
    "5488": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "5489": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x2"
    },
    "5491": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5492": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP4",
      "path": "56"
    },
    "5493": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MUL",
      "path": "56"
    },
    "5494": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5495": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP6",
      "path": "56"
    },
    "5496": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "ADD",
      "path": "56"
    },
    "5497": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "5498": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP3",
      "path": "56"
    },
    "5499": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SSTORE",
      "path": "56"
    },
    "5500": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "5501": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MLOAD",
      "path": "56"
    },
    "5502": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5503": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP3",
      "path": "56"
    },
    "5504": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "ADD",
      "path": "56"
    },
    "5505": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SSTORE",
      "path": "56"
    },
    "5506": {
      "fn": "EnumerableMap._set",
      "offset": [
        2314,
        2333
      ],
      "op": "DUP7",
      "path": "56",
      "statement": 78
    },
    "5507": {
      "fn": "EnumerableMap._set",
      "offset": [
        2314,
        2333
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "5508": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "DUP7",
      "path": "56"
    },
    "5509": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "DUP5",
      "path": "56"
    },
    "5510": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5511": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2306
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5512": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2306
      ],
      "op": "DUP9",
      "path": "56"
    },
    "5513": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2306
      ],
      "op": "ADD",
      "path": "56"
    },
    "5514": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5515": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "5516": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5517": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP3",
      "path": "56"
    },
    "5518": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5519": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "5520": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "5521": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2333
      ],
      "op": "SSTORE",
      "path": "56"
    },
    "5522": {
      "fn": "EnumerableMap._set",
      "offset": [
        2347,
        2358
      ],
      "op": "PUSH2",
      "path": "56",
      "statement": 79,
      "value": "0xF86"
    },
    "5525": {
      "fn": "EnumerableMap._set",
      "offset": [
        2347,
        2358
      ],
      "op": "JUMP",
      "path": "56"
    },
    "5526": {
      "fn": "EnumerableMap._set",
      "offset": [
        2032,
        2467
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "5527": {
      "fn": "EnumerableMap._set",
      "offset": [
        2425,
        2430
      ],
      "op": "DUP3",
      "path": "56",
      "statement": 80
    },
    "5528": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2392
      ],
      "op": "DUP6",
      "path": "56"
    },
    "5529": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2401
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "5531": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2401
      ],
      "op": "ADD",
      "path": "56"
    },
    "5532": {
      "fn": "EnumerableMap._set",
      "offset": [
        2413,
        2414
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "5534": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2410
      ],
      "op": "DUP4",
      "path": "56"
    },
    "5535": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2414
      ],
      "op": "SUB",
      "path": "56"
    },
    "5536": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5537": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "SLOAD",
      "path": "56"
    },
    "5538": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5539": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "LT",
      "path": "56"
    },
    "5540": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0x15A9"
    },
    "5543": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "JUMPI",
      "path": "56"
    },
    "5544": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "INVALID",
      "path": "56"
    },
    "5545": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "JUMPDEST",
      "path": "56"
    },
    "5546": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5547": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "5549": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "MSTORE",
      "path": "56"
    },
    "5550": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x20"
    },
    "5552": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x0"
    },
    "5554": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "KECCAK256",
      "path": "56"
    },
    "5555": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5556": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x2"
    },
    "5558": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "MUL",
      "path": "56"
    },
    "5559": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "ADD",
      "path": "56"
    },
    "5560": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2422
      ],
      "op": "PUSH1",
      "path": "56",
      "value": "0x1"
    },
    "5562": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2422
      ],
      "op": "ADD",
      "path": "56"
    },
    "5563": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "DUP2",
      "path": "56"
    },
    "5564": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "SWAP1",
      "path": "56"
    },
    "5565": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "SSTORE",
      "path": "56"
    },
    "5566": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "POP",
      "path": "56"
    },
    "5567": {
      "fn": "EnumerableMap._set",
      "offset": [
        2451,
        2456
      ],
      "op": "PUSH1",
      "path": "56",
      "statement": 81,
      "value": "0x0"
    },
    "5569": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "SWAP2",
      "path": "56"
    },
    "5570": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "POP",
      "path": "56"
    },
    "5571": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "POP",
      "path": "56"
    },
    "5572": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "PUSH2",
      "path": "56",
      "value": "0xF86"
    },
    "5575": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "JUMP",
      "path": "56"
    },
    "5576": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1098
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5577": {
      "fn": "Address.isContract",
      "offset": [
        1045,
        1065
      ],
      "op": "EXTCODESIZE",
      "path": "53"
    },
    "5578": {
      "fn": "Address.isContract",
      "offset": [
        1083,
        1091
      ],
      "op": "ISZERO",
      "path": "53",
      "statement": 82
    },
    "5579": {
      "fn": "Address.isContract",
      "offset": [
        1083,
        1091
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "5580": {
      "fn": "Address.isContract",
      "offset": [
        1083,
        1091
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5581": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        685,
        1098
      ],
      "op": "JUMP",
      "path": "53"
    },
    "5582": {
      "fn": "Address.functionCall",
      "offset": [
        3540,
        3734
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5583": {
      "fn": "Address.functionCall",
      "offset": [
        3643,
        3655
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x60"
    },
    "5585": {
      "fn": "Address.functionCall",
      "offset": [
        3674,
        3727
      ],
      "op": "PUSH2",
      "path": "53",
      "statement": 83,
      "value": "0xF83"
    },
    "5588": {
      "fn": "Address.functionCall",
      "offset": [
        3697,
        3703
      ],
      "op": "DUP5",
      "path": "53"
    },
    "5589": {
      "fn": "Address.functionCall",
      "offset": [
        3705,
        3709
      ],
      "op": "DUP5",
      "path": "53"
    },
    "5590": {
      "fn": "Address.functionCall",
      "offset": [
        3711,
        3712
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5592": {
      "fn": "Address.functionCall",
      "offset": [
        3714,
        3726
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5593": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5017,
        5029
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x60"
    },
    "5595": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5049,
        5067
      ],
      "op": "PUSH2",
      "path": "53",
      "statement": 84,
      "value": "0x15E3"
    },
    "5598": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5060,
        5066
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5599": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5049,
        5059
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x15C8"
    },
    "5602": {
      "fn": "Address._functionCallWithValue",
      "jump": "i",
      "offset": [
        5049,
        5067
      ],
      "op": "JUMP",
      "path": "53"
    },
    "5603": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5049,
        5067
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5604": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1634"
    },
    "5607": {
      "branch": 102,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5608": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "5610": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5611": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5612": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5616": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5618": {
      "op": "SHL"
    },
    "5619": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5620": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5621": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5623": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "5625": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5626": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "53"
    },
    "5627": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5628": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x1D"
    },
    "5630": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x24"
    },
    "5632": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5633": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "53"
    },
    "5634": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5635": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH32",
      "path": "53",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5668": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x44"
    },
    "5670": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5671": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "53"
    },
    "5672": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5673": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5674": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5675": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5676": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5677": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5678": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SUB",
      "path": "53"
    },
    "5679": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x64"
    },
    "5681": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "ADD",
      "path": "53"
    },
    "5682": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5683": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "REVERT",
      "path": "53"
    },
    "5684": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5041,
        5101
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5685": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5172,
        5184
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5687": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5186,
        5209
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x60"
    },
    "5689": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5219
      ],
      "op": "DUP7",
      "path": "53"
    },
    "5690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5696": {
      "op": "SHL"
    },
    "5697": {
      "op": "SUB"
    },
    "5698": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5224
      ],
      "op": "AND",
      "path": "53"
    },
    "5699": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5233,
        5241
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5700": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5244,
        5248
      ],
      "op": "DUP8",
      "path": "53"
    },
    "5701": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "5703": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5704": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5705": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5706": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5707": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5708": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5709": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5711": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5712": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5713": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5714": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5715": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5716": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5717": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5719": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5720": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "LT",
      "path": "53"
    },
    "5721": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1673"
    },
    "5724": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5725": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5726": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5727": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5728": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5731": {
      "op": "NOT"
    },
    "5732": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5733": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "5734": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5735": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5736": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5738": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5739": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5740": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5741": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5742": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5743": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1654"
    },
    "5746": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMP",
      "path": "53"
    },
    "5747": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5748": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x1"
    },
    "5750": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5751": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5753": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SUB",
      "path": "53"
    },
    "5754": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x100"
    },
    "5757": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "EXP",
      "path": "53"
    },
    "5758": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SUB",
      "path": "53"
    },
    "5759": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5760": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "NOT",
      "path": "53"
    },
    "5761": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5762": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5763": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "AND",
      "path": "53"
    },
    "5764": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5765": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP5",
      "path": "53"
    },
    "5766": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5767": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "AND",
      "path": "53"
    },
    "5768": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5769": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5770": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "OR",
      "path": "53"
    },
    "5771": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5772": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5773": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5774": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5775": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5776": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5777": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5778": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5779": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5780": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5781": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5782": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5783": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5784": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5785": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5787": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "5789": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5790": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5791": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5792": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SUB",
      "path": "53"
    },
    "5793": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5794": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5795": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP8",
      "path": "53"
    },
    "5796": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "GAS",
      "path": "53"
    },
    "5797": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "CALL",
      "path": "53"
    },
    "5798": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "5799": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5800": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5801": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5802": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "53"
    },
    "5803": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5804": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5806": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5807": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "EQ",
      "path": "53"
    },
    "5808": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x16D5"
    },
    "5811": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5812": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "5814": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5815": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5816": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5817": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x1F"
    },
    "5819": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "NOT",
      "path": "53"
    },
    "5820": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x3F"
    },
    "5822": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "53"
    },
    "5823": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5824": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "AND",
      "path": "53"
    },
    "5825": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5826": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5827": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x40"
    },
    "5829": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5830": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "53"
    },
    "5831": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5832": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5833": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATASIZE",
      "path": "53"
    },
    "5834": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5836": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5838": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "DUP5",
      "path": "53"
    },
    "5839": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "ADD",
      "path": "53"
    },
    "5840": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "RETURNDATACOPY",
      "path": "53"
    },
    "5841": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x16DA"
    },
    "5844": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMP",
      "path": "53"
    },
    "5845": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5846": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x60"
    },
    "5848": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5849": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5850": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5851": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5213,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5852": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5853": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5854": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5855": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5171,
        5249
      ],
      "op": "POP",
      "path": "53"
    },
    "5856": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5263,
        5270
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5857": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "5858": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x16EE"
    },
    "5861": {
      "branch": 103,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5862": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5293,
        5303
      ],
      "op": "SWAP2",
      "path": "53",
      "statement": 85
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5286,
        5303
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0xDFA"
    },
    "5867": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5286,
        5303
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5286,
        5303
      ],
      "op": "JUMP",
      "path": "53"
    },
    "5870": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5259,
        5839
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5871": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5404,
        5421
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5872": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5404,
        5421
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5873": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5404,
        5425
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "5874": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5400,
        5829
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x16FE"
    },
    "5877": {
      "branch": 104,
      "fn": "Address._functionCallWithValue",
      "offset": [
        5400,
        5829
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5878": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5662,
        5672
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5879": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5656,
        5673
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5880": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5722,
        5737
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5881": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5709,
        5719
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5882": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5705,
        5707
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5884": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5701,
        5720
      ],
      "op": "ADD",
      "path": "53"
    },
    "5885": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5694,
        5738
      ],
      "op": "REVERT",
      "path": "53"
    },
    "5886": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5611,
        5756
      ],
      "op": "JUMPDEST",
      "path": "53"
    },
    "5887": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "statement": 86,
      "value": "0x40"
    },
    "5889": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5896": {
      "op": "SHL"
    },
    "5897": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5898": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5899": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5901": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x4"
    },
    "5903": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5904": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5905": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5906": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5907": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5908": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP7",
      "path": "53"
    },
    "5909": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5910": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x24"
    },
    "5912": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP5",
      "path": "53"
    },
    "5913": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5914": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5915": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP7",
      "path": "53"
    },
    "5916": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5917": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5801,
        5813
      ],
      "op": "DUP8",
      "path": "53"
    },
    "5918": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5801,
        5813
      ],
      "op": "SWAP4",
      "path": "53"
    },
    "5919": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5920": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "5921": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5922": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP3",
      "path": "53"
    },
    "5923": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x44"
    },
    "5925": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5926": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP2",
      "path": "53"
    },
    "5927": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5928": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP6",
      "path": "53"
    },
    "5929": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5930": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "SWAP1",
      "path": "53"
    },
    "5931": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP1",
      "path": "53"
    },
    "5932": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5933": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5934": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x0"
    },
    "5936": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5937": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ISZERO",
      "path": "53"
    },
    "5938": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x1237"
    },
    "5941": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "JUMPI",
      "path": "53"
    },
    "5942": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5943": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP2",
      "path": "53"
    },
    "5944": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5945": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MLOAD",
      "path": "53"
    },
    "5946": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP4",
      "path": "53"
    },
    "5947": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "DUP3",
      "path": "53"
    },
    "5948": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5949": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "MSTORE",
      "path": "53"
    },
    "5950": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH1",
      "path": "53",
      "value": "0x20"
    },
    "5952": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "ADD",
      "path": "53"
    },
    "5953": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "PUSH2",
      "path": "53",
      "value": "0x121F"
    },
    "5956": {
      "fn": "Address._functionCallWithValue",
      "offset": [
        5794,
        5814
      ],
      "op": "JUMP",
      "path": "53"
    }
  },
  "sha1": "ae21a6034203ae7edbb84bb9761e4d43b783acdc",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC721.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./IERC721Enumerable.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"../../introspection/ERC165.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/EnumerableSet.sol\";\nimport \"../../utils/EnumerableMap.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n    using SafeMath for uint256;\n    using Address for address;\n    using EnumerableSet for EnumerableSet.UintSet;\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\n    using Strings for uint256;\n\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\n\n    // Mapping from holder address to their (enumerable) set of owned tokens\n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n\n    // Enumerable mapping from token ids to their owners\n    EnumerableMap.UintToAddressMap private _tokenOwners;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Optional mapping for token URIs\n    mapping (uint256 => string) private _tokenURIs;\n\n    // Base URI\n    string private _baseURI;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\n     *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\n     *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\n     *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\n     *\n     *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\n     *        0xa22cb465 ^ 0xe985e9c5 ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /*\n     *     bytes4(keccak256('totalSupply()')) == 0x18160ddd\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59\n     *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7\n     *\n     *     => 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721);\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n\n        return _holderTokens[owner].length();\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return _tokenOwners.get(tokenId, \"ERC721: owner query for nonexistent token\");\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n\n        // If there is no base URI, return the token URI.\n        if (bytes(_baseURI).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, _tokenURI));\n        }\n        // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\n        return string(abi.encodePacked(_baseURI, tokenId.toString()));\n    }\n\n    /**\n    * @dev Returns the base URI set via {_setBaseURI}. This will be\n    * automatically added as a prefix in {tokenURI} to each token's URI, or\n    * to the token ID if no specific URI is set for that token ID.\n    */\n    function baseURI() public view returns (string memory) {\n        return _baseURI;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view override returns (uint256) {\n        return _holderTokens[owner].at(index);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        // _tokenOwners are indexed by tokenIds, so .length() returns the number of tokenIds\n        return _tokenOwners.length();\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view override returns (uint256) {\n        (uint256 tokenId, ) = _tokenOwners.at(index);\n        return tokenId;\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _tokenOwners.contains(tokenId);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     d*\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        // Clear metadata (if any)\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n\n        _holderTokens[owner].remove(tokenId);\n\n        _tokenOwners.remove(tokenId);\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _holderTokens[from].remove(tokenId);\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721Metadata: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Internal function to set the base URI for all token IDs. It is\n     * automatically added as a prefix to the value returned in {tokenURI},\n     * or to the token ID if {tokenURI} is empty.\n     */\n    function _setBaseURI(string memory baseURI_) internal virtual {\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (!to.isContract()) {\n            return true;\n        }\n        bytes memory returndata = to.functionCall(abi.encodeWithSelector(\n            IERC721Receiver(to).onERC721Received.selector,\n            _msgSender(),\n            from,\n            tokenId,\n            _data\n        ), \"ERC721: transfer to non ERC721Receiver implementer\");\n        bytes4 retval = abi.decode(returndata, (bytes4));\n        return (retval == _ERC721_RECEIVED);\n    }\n\n    function _approve(address to, uint256 tokenId) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "528:16181:45:-:0;;;3534:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3534:365:45;;;;;;;;;;-1:-1:-1;3534:365:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3534:365:45;;;;;;;;;;-1:-1:-1;3534:365:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3534:365:45;;-1:-1:-1;751:40:33;;-1:-1:-1;;;;770:20:33;-1:-1:-1;751:18:33;:40::i;:::-;3606:12:45;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3628:16:45;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3732:40:45;-1:-1:-1;;;3732:18:45;:40::i;:::-;3782:49;-1:-1:-1;;;3782:18:45;:49::i;:::-;3841:51;-1:-1:-1;;;3841:18:45;:51::i;:::-;3534:365;;528:16181;;1482:198:33;-1:-1:-1;;;;;;1565:25:33;;;;;1557:66;;;;;-1:-1:-1;;;1557:66:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1633:33:33;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1633:40:33;1669:4;1633:40;;;1482:198::o;528:16181:45:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;528:16181:45;;;-1:-1:-1;528:16181:45;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/lib/token/ERC721/ERC721.sol",
  "type": "contract"
}
{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chef",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oldFactory",
          "type": "address"
        },
        {
          "internalType": "contract IEZZCFactory",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_notBeforeBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "chef",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "desiredLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract IEZZCFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IEZZCPair",
          "name": "orig",
          "type": "address"
        }
      ],
      "name": "migrate",
      "outputs": [
        {
          "internalType": "contract IEZZCPair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "notBeforeBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oldFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "28": "contracts/lib/ezzc/interfaces/IEZZCFactory.sol",
    "29": "contracts/lib/ezzc/interfaces/IEZZCPair.sol",
    "3": "contracts/Migrator.sol"
  },
  "ast": {
    "absolutePath": "contracts/Migrator.sol",
    "exportedSymbols": {
      "Migrator": [
        2515
      ]
    },
    "id": 2516,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2338,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "contracts/lib/ezzc/interfaces/IEZZCPair.sol",
        "file": "./lib/ezzc/interfaces/IEZZCPair.sol",
        "id": 2339,
        "nodeType": "ImportDirective",
        "scope": 2516,
        "sourceUnit": 11215,
        "src": "25:45:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/ezzc/interfaces/IEZZCFactory.sol",
        "file": "./lib/ezzc/interfaces/IEZZCFactory.sol",
        "id": 2340,
        "nodeType": "ImportDirective",
        "scope": 2516,
        "sourceUnit": 10973,
        "src": "71:48:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2515,
        "linearizedBaseContracts": [
          2515
        ],
        "name": "Migrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "1fc8bc5d",
            "id": 2342,
            "mutability": "mutable",
            "name": "chef",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2515,
            "src": "146:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2341,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "146:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1bd6dfe1",
            "id": 2344,
            "mutability": "mutable",
            "name": "oldFactory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2515,
            "src": "171:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2343,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "171:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c45a0155",
            "id": 2346,
            "mutability": "mutable",
            "name": "factory",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2515,
            "src": "202:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
              "typeString": "contract IEZZCFactory"
            },
            "typeName": {
              "contractScope": null,
              "id": 2345,
              "name": "IEZZCFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10972,
              "src": "202:12:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                "typeString": "contract IEZZCFactory"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "05293137",
            "id": 2348,
            "mutability": "mutable",
            "name": "notBeforeBlock",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2515,
            "src": "235:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2347,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "235:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "40dc0e37",
            "id": 2355,
            "mutability": "mutable",
            "name": "desiredLiquidity",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2515,
            "src": "270:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2349,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 2353,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "UnaryOperation",
                  "operator": "-",
                  "prefix": true,
                  "src": "312:2:3",
                  "subExpression": {
                    "argumentTypes": null,
                    "hexValue": "31",
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "313:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_minus_1_by_1",
                    "typeString": "int_const -1"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_minus_1_by_1",
                    "typeString": "int_const -1"
                  }
                ],
                "id": 2351,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "304:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_uint256_$",
                  "typeString": "type(uint256)"
                },
                "typeName": {
                  "id": 2350,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  }
                }
              },
              "id": 2354,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "304:11:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2382,
              "nodeType": "Block",
              "src": "463:133:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2366,
                      "name": "chef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2342,
                      "src": "473:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2367,
                      "name": "_chef",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2357,
                      "src": "480:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "473:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2369,
                  "nodeType": "ExpressionStatement",
                  "src": "473:12:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2370,
                      "name": "oldFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2344,
                      "src": "495:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2371,
                      "name": "_oldFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2359,
                      "src": "508:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "495:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2373,
                  "nodeType": "ExpressionStatement",
                  "src": "495:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2374,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2346,
                      "src": "529:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                        "typeString": "contract IEZZCFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2375,
                      "name": "_factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2361,
                      "src": "539:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                        "typeString": "contract IEZZCFactory"
                      }
                    },
                    "src": "529:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                      "typeString": "contract IEZZCFactory"
                    }
                  },
                  "id": 2377,
                  "nodeType": "ExpressionStatement",
                  "src": "529:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2378,
                      "name": "notBeforeBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2348,
                      "src": "557:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2379,
                      "name": "_notBeforeBlock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2363,
                      "src": "574:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "557:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2381,
                  "nodeType": "ExpressionStatement",
                  "src": "557:32:3"
                }
              ]
            },
            "documentation": null,
            "id": 2383,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2357,
                  "mutability": "mutable",
                  "name": "_chef",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2383,
                  "src": "343:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2356,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "343:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2359,
                  "mutability": "mutable",
                  "name": "_oldFactory",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2383,
                  "src": "366:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2361,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2383,
                  "src": "395:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                    "typeString": "contract IEZZCFactory"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2360,
                    "name": "IEZZCFactory",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10972,
                    "src": "395:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                      "typeString": "contract IEZZCFactory"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2363,
                  "mutability": "mutable",
                  "name": "_notBeforeBlock",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2383,
                  "src": "426:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2362,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "426:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "333:122:3"
            },
            "returnParameters": {
              "id": 2365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:0:3"
            },
            "scope": 2515,
            "src": "322:274:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2513,
              "nodeType": "Block",
              "src": "662:780:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2391,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "680:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "680:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2393,
                          "name": "chef",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2342,
                          "src": "694:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "680:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f742066726f6d206d61737465722063686566",
                        "id": 2395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "700:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1278e45f55102703175d7a8578ca3476802b45ec654cf2ac99265d4040f06eb9",
                          "typeString": "literal_string \"not from master chef\""
                        },
                        "value": "not from master chef"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1278e45f55102703175d7a8578ca3476802b45ec654cf2ac99265d4040f06eb9",
                          "typeString": "literal_string \"not from master chef\""
                        }
                      ],
                      "id": 2390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "672:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2397,
                  "nodeType": "ExpressionStatement",
                  "src": "672:51:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2399,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "741:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "741:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2401,
                          "name": "notBeforeBlock",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2348,
                          "src": "757:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "741:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "746f6f206561726c7920746f206d696772617465",
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "773:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67635b67ac245e95517bcde524b97c1d02dac235d9ead314adf06fdd7762bd91",
                          "typeString": "literal_string \"too early to migrate\""
                        },
                        "value": "too early to migrate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67635b67ac245e95517bcde524b97c1d02dac235d9ead314adf06fdd7762bd91",
                          "typeString": "literal_string \"too early to migrate\""
                        }
                      ],
                      "id": 2398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "733:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:63:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2405,
                  "nodeType": "ExpressionStatement",
                  "src": "733:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 2407,
                              "name": "orig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2385,
                              "src": "814:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                                "typeString": "contract IEZZCPair"
                              }
                            },
                            "id": 2408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "factory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11137,
                            "src": "814:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 2409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "814:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2410,
                          "name": "oldFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2344,
                          "src": "832:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "814:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f742066726f6d206f6c6420666163746f7279",
                        "id": 2412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "844:22:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66f7edec50e3d3d55dd5981b421c2954ed0a383746f127456dda72369d3950a8",
                          "typeString": "literal_string \"not from old factory\""
                        },
                        "value": "not from old factory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66f7edec50e3d3d55dd5981b421c2954ed0a383746f127456dda72369d3950a8",
                          "typeString": "literal_string \"not from old factory\""
                        }
                      ],
                      "id": 2406,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "806:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2414,
                  "nodeType": "ExpressionStatement",
                  "src": "806:61:3"
                },
                {
                  "assignments": [
                    2416
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2416,
                      "mutability": "mutable",
                      "name": "token0",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2513,
                      "src": "877:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2415,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "877:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2420,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2417,
                        "name": "orig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "894:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "id": 2418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token0",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11142,
                      "src": "894:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "877:30:3"
                },
                {
                  "assignments": [
                    2422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2422,
                      "mutability": "mutable",
                      "name": "token1",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2513,
                      "src": "917:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2421,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "917:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2426,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2423,
                        "name": "orig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "934:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "id": 2424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "token1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11147,
                      "src": "934:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 2425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "934:13:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "917:30:3"
                },
                {
                  "assignments": [
                    2428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2428,
                      "mutability": "mutable",
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2513,
                      "src": "957:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                        "typeString": "contract IEZZCPair"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 2427,
                        "name": "IEZZCPair",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 11214,
                        "src": "957:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2436,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2432,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "1000:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 2433,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "1008:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2430,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2346,
                            "src": "984:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                              "typeString": "contract IEZZCFactory"
                            }
                          },
                          "id": 2431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getPair",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10935,
                          "src": "984:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                            "typeString": "function (address,address) view external returns (address)"
                          }
                        },
                        "id": 2434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "984:31:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2429,
                      "name": "IEZZCPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11214,
                      "src": "974:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IEZZCPair_$11214_$",
                        "typeString": "type(contract IEZZCPair)"
                      }
                    },
                    "id": 2435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                      "typeString": "contract IEZZCPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "957:59:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                      "typeString": "contract IEZZCPair"
                    },
                    "id": 2444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2437,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2428,
                      "src": "1030:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                        "typeString": "contract IEZZCPair"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1056:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1048:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2439,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1048:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1048:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 2438,
                        "name": "IEZZCPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11214,
                        "src": "1038:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IEZZCPair_$11214_$",
                          "typeString": "type(contract IEZZCPair)"
                        }
                      },
                      "id": 2443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1038:21:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                        "typeString": "contract IEZZCPair"
                      }
                    },
                    "src": "1030:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2456,
                  "nodeType": "IfStatement",
                  "src": "1026:112:3",
                  "trueBody": {
                    "id": 2455,
                    "nodeType": "Block",
                    "src": "1061:77:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 2445,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "1075:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                              "typeString": "contract IEZZCPair"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 2449,
                                    "name": "token0",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2416,
                                    "src": "1111:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 2450,
                                    "name": "token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2422,
                                    "src": "1119:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 2447,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2346,
                                    "src": "1092:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IEZZCFactory_$10972",
                                      "typeString": "contract IEZZCFactory"
                                    }
                                  },
                                  "id": 2448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "createPair",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10956,
                                  "src": "1092:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                                    "typeString": "function (address,address) external returns (address)"
                                  }
                                },
                                "id": 2451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1092:34:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2446,
                              "name": "IEZZCPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11214,
                              "src": "1082:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IEZZCPair_$11214_$",
                                "typeString": "type(contract IEZZCPair)"
                              }
                            },
                            "id": 2452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1082:45:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                              "typeString": "contract IEZZCPair"
                            }
                          },
                          "src": "1075:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                            "typeString": "contract IEZZCPair"
                          }
                        },
                        "id": 2454,
                        "nodeType": "ExpressionStatement",
                        "src": "1075:52:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    2458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2458,
                      "mutability": "mutable",
                      "name": "lp",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2513,
                      "src": "1147:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1147:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2464,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1175:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1175:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2459,
                        "name": "orig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1160:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "id": 2460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11017,
                      "src": "1160:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1147:39:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2465,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "1200:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1206:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1200:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 2470,
                  "nodeType": "IfStatement",
                  "src": "1196:24:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 2468,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2428,
                      "src": "1216:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                        "typeString": "contract IEZZCPair"
                      }
                    },
                    "functionReturnParameters": 2389,
                    "id": 2469,
                    "nodeType": "Return",
                    "src": "1209:11:3"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2471,
                      "name": "desiredLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2355,
                      "src": "1230:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2472,
                      "name": "lp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2458,
                      "src": "1249:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1230:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2474,
                  "nodeType": "ExpressionStatement",
                  "src": "1230:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2478,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1279:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1279:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2482,
                            "name": "orig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2385,
                            "src": "1299:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                              "typeString": "contract IEZZCPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                              "typeString": "contract IEZZCPair"
                            }
                          ],
                          "id": 2481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1291:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2480,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1291:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1291:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2484,
                        "name": "lp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2458,
                        "src": "1306:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2475,
                        "name": "orig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1261:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "id": 2477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11055,
                      "src": "1261:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2486,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2492,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2428,
                            "src": "1337:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                              "typeString": "contract IEZZCPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                              "typeString": "contract IEZZCPair"
                            }
                          ],
                          "id": 2491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1329:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2487,
                        "name": "orig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2385,
                        "src": "1319:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "id": 2489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11187,
                      "src": "1319:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256,uint256)"
                      }
                    },
                    "id": 2494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:24:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 2495,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1363:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1363:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2496,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2428,
                        "src": "1353:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                          "typeString": "contract IEZZCPair"
                        }
                      },
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11178,
                      "src": "1353:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1353:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:21:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2503,
                      "name": "desiredLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2355,
                      "src": "1384:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "-",
                          "prefix": true,
                          "src": "1411:2:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 2506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1412:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_minus_1_by_1",
                            "typeString": "int_const -1"
                          }
                        ],
                        "id": 2505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1403:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 2504,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1403:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 2508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1403:11:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1384:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2510,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:30:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2511,
                    "name": "pair",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2428,
                    "src": "1431:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                      "typeString": "contract IEZZCPair"
                    }
                  },
                  "functionReturnParameters": 2389,
                  "id": 2512,
                  "nodeType": "Return",
                  "src": "1424:11:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ce5494bb",
            "id": 2514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "migrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2385,
                  "mutability": "mutable",
                  "name": "orig",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2514,
                  "src": "619:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                    "typeString": "contract IEZZCPair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2384,
                    "name": "IEZZCPair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11214,
                    "src": "619:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                      "typeString": "contract IEZZCPair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "618:16:3"
            },
            "returnParameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2388,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2514,
                  "src": "651:9:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                    "typeString": "contract IEZZCPair"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2387,
                    "name": "IEZZCPair",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11214,
                    "src": "651:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEZZCPair_$11214",
                      "typeString": "contract IEZZCPair"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:11:3"
            },
            "scope": 2515,
            "src": "602:840:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2516,
        "src": "122:1322:3"
      }
    ],
    "src": "0:1445:3"
  },
  "bytecode": "608060405260001960045534801561001657600080fd5b5060405161075f38038061075f8339818101604052608081101561003957600080fd5b50805160208201516040830151606090930151600080546001600160a01b03199081166001600160a01b039586161782556001805482169486169490941790935560028054909316939094169290921790556003556106c190819061009e90396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806305293137146100675780631bd6dfe1146100815780631fc8bc5d146100a557806340dc0e37146100ad578063c45a0155146100b5578063ce5494bb146100bd575b600080fd5b61006f6100e3565b60408051918252519081900360200190f35b6100896100e9565b604080516001600160a01b039092168252519081900360200190f35b6100896100f8565b61006f610107565b61008961010d565b610089600480360360208110156100d357600080fd5b50356001600160a01b031661011c565b60035481565b6001546001600160a01b031681565b6000546001600160a01b031681565b60045481565b6002546001600160a01b031681565b600080546001600160a01b03163314610173576040805162461bcd60e51b81526020600482015260146024820152733737ba10333937b69036b0b9ba32b91031b432b360611b604482015290519081900360640190fd5b6003544310156101c1576040805162461bcd60e51b8152602060048201526014602482015273746f6f206561726c7920746f206d69677261746560601b604482015290519081900360640190fd5b6001546040805163c45a015560e01b815290516001600160a01b039283169285169163c45a0155916004808301926020929190829003018186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d602081101561023257600080fd5b50516001600160a01b031614610286576040805162461bcd60e51b81526020600482015260146024820152736e6f742066726f6d206f6c6420666163746f727960601b604482015290519081900360640190fd5b6000826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c157600080fd5b505afa1580156102d5573d6000803e3d6000fd5b505050506040513d60208110156102eb57600080fd5b50516040805163d21220a760e01b815290519192506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d602081101561035d57600080fd5b50516002546040805163e6a4390560e01b81526001600160a01b03868116600483015280851660248301529151939450600093919092169163e6a43905916044808301926020929190829003018186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d60208110156103e457600080fd5b505190506001600160a01b03811661047c57600254604080516364e329cb60e11b81526001600160a01b03868116600483015285811660248301529151919092169163c9c653969160448083019260209291908290030181600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b505050506040513d602081101561047757600080fd5b505190505b6000856001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d60208110156104f557600080fd5b505190508061050957509250610686915050565b6004818155604080516323b872dd60e01b815233928101929092526001600160a01b0388166024830181905260448301849052905190916323b872dd9160648083019260209291908290030181600087803b15801561056757600080fd5b505af115801561057b573d6000803e3d6000fd5b505050506040513d602081101561059157600080fd5b50506040805163226bf2d160e21b81526001600160a01b0384811660048301528251908916926389afcb4492602480820193918290030181600087803b1580156105da57600080fd5b505af11580156105ee573d6000803e3d6000fd5b505050506040513d604081101561060457600080fd5b5050604080516335313c2160e11b815233600482015290516001600160a01b03841691636a6278429160248083019260209291908290030181600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d602081101561067857600080fd5b505060001960045550925050505b91905056fea2646970667358221220821bfe7e7712b9b420a8437fed4b4f463648daf3afe0ffa2384e588130c964ca64736f6c634300060c0033",
  "bytecodeSha1": "cc6be8511ebf69c09f93acf67863d826662a39b4",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "Migrator",
  "coverageMap": {
    "branches": {
      "28": {},
      "29": {},
      "3": {
        "Migrator.migrate": {
          "11": [
            680,
            698,
            true
          ],
          "12": [
            741,
            771,
            true
          ],
          "13": [
            814,
            842,
            true
          ],
          "14": [
            1030,
            1059,
            false
          ],
          "15": [
            1200,
            1207,
            false
          ]
        }
      }
    },
    "statements": {
      "28": {},
      "29": {},
      "3": {
        "Migrator.migrate": {
          "0": [
            672,
            723
          ],
          "1": [
            733,
            796
          ],
          "2": [
            806,
            867
          ],
          "3": [
            1075,
            1127
          ],
          "4": [
            1209,
            1220
          ],
          "5": [
            1230,
            1251
          ],
          "6": [
            1261,
            1309
          ],
          "7": [
            1319,
            1343
          ],
          "8": [
            1353,
            1374
          ],
          "9": [
            1384,
            1414
          ],
          "10": [
            1424,
            1435
          ]
        }
      }
    }
  },
  "dependencies": [
    "IEZZCFactory",
    "IEZZCPair"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c806305293137146100675780631bd6dfe1146100815780631fc8bc5d146100a557806340dc0e37146100ad578063c45a0155146100b5578063ce5494bb146100bd575b600080fd5b61006f6100e3565b60408051918252519081900360200190f35b6100896100e9565b604080516001600160a01b039092168252519081900360200190f35b6100896100f8565b61006f610107565b61008961010d565b610089600480360360208110156100d357600080fd5b50356001600160a01b031661011c565b60035481565b6001546001600160a01b031681565b6000546001600160a01b031681565b60045481565b6002546001600160a01b031681565b600080546001600160a01b03163314610173576040805162461bcd60e51b81526020600482015260146024820152733737ba10333937b69036b0b9ba32b91031b432b360611b604482015290519081900360640190fd5b6003544310156101c1576040805162461bcd60e51b8152602060048201526014602482015273746f6f206561726c7920746f206d69677261746560601b604482015290519081900360640190fd5b6001546040805163c45a015560e01b815290516001600160a01b039283169285169163c45a0155916004808301926020929190829003018186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d602081101561023257600080fd5b50516001600160a01b031614610286576040805162461bcd60e51b81526020600482015260146024820152736e6f742066726f6d206f6c6420666163746f727960601b604482015290519081900360640190fd5b6000826001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b1580156102c157600080fd5b505afa1580156102d5573d6000803e3d6000fd5b505050506040513d60208110156102eb57600080fd5b50516040805163d21220a760e01b815290519192506000916001600160a01b0386169163d21220a7916004808301926020929190829003018186803b15801561033357600080fd5b505afa158015610347573d6000803e3d6000fd5b505050506040513d602081101561035d57600080fd5b50516002546040805163e6a4390560e01b81526001600160a01b03868116600483015280851660248301529151939450600093919092169163e6a43905916044808301926020929190829003018186803b1580156103ba57600080fd5b505afa1580156103ce573d6000803e3d6000fd5b505050506040513d60208110156103e457600080fd5b505190506001600160a01b03811661047c57600254604080516364e329cb60e11b81526001600160a01b03868116600483015285811660248301529151919092169163c9c653969160448083019260209291908290030181600087803b15801561044d57600080fd5b505af1158015610461573d6000803e3d6000fd5b505050506040513d602081101561047757600080fd5b505190505b6000856001600160a01b03166370a08231336040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d60208110156104f557600080fd5b505190508061050957509250610686915050565b6004818155604080516323b872dd60e01b815233928101929092526001600160a01b0388166024830181905260448301849052905190916323b872dd9160648083019260209291908290030181600087803b15801561056757600080fd5b505af115801561057b573d6000803e3d6000fd5b505050506040513d602081101561059157600080fd5b50506040805163226bf2d160e21b81526001600160a01b0384811660048301528251908916926389afcb4492602480820193918290030181600087803b1580156105da57600080fd5b505af11580156105ee573d6000803e3d6000fd5b505050506040513d604081101561060457600080fd5b5050604080516335313c2160e11b815233600482015290516001600160a01b03841691636a6278429160248083019260209291908290030181600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d602081101561067857600080fd5b505060001960045550925050505b91905056fea2646970667358221220821bfe7e7712b9b420a8437fed4b4f463648daf3afe0ffa2384e588130c964ca64736f6c634300060c0033",
  "deployedSourceMap": "122:1322:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;235:29;;;:::i;:::-;;;;;;;;;;;;;;;;171:25;;;:::i;:::-;;;;-1:-1:-1;;;;;171:25:3;;;;;;;;;;;;;;146:19;;;:::i;270:45::-;;;:::i;202:27::-;;;:::i;602:840::-;;;;;;;;;;;;;;;;-1:-1:-1;602:840:3;-1:-1:-1;;;;;602:840:3;;:::i;235:29::-;;;;:::o;171:25::-;;;-1:-1:-1;;;;;171:25:3;;:::o;146:19::-;;;-1:-1:-1;;;;;146:19:3;;:::o;270:45::-;;;;:::o;202:27::-;;;-1:-1:-1;;;;;202:27:3;;:::o;602:840::-;651:9;694:4;;-1:-1:-1;;;;;694:4:3;680:10;:18;672:51;;;;;-1:-1:-1;;;672:51:3;;;;;;;;;;;;-1:-1:-1;;;672:51:3;;;;;;;;;;;;;;;757:14;;741:12;:30;;733:63;;;;;-1:-1:-1;;;733:63:3;;;;;;;;;;;;-1:-1:-1;;;733:63:3;;;;;;;;;;;;;;;832:10;;814:14;;;-1:-1:-1;;;814:14:3;;;;-1:-1:-1;;;;;832:10:3;;;;814:12;;;;;:14;;;;;;;;;;;;;;:12;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;814:14:3;-1:-1:-1;;;;;814:28:3;;806:61;;;;;-1:-1:-1;;;806:61:3;;;;;;;;;;;;-1:-1:-1;;;806:61:3;;;;;;;;;;;;;;;877:14;894:4;-1:-1:-1;;;;;894:11:3;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;894:13:3;934;;;-1:-1:-1;;;934:13:3;;;;894;;-1:-1:-1;917:14:3;;-1:-1:-1;;;;;934:11:3;;;;;:13;;;;;894;;934;;;;;;;:11;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;934:13:3;984:7;;:31;;;-1:-1:-1;;;984:31:3;;-1:-1:-1;;;;;984:31:3;;;;;;;;;;;;;;;;934:13;;-1:-1:-1;957:14:3;;984:7;;;;;:15;;:31;;;;;934:13;;984:31;;;;;;;:7;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;984:31:3;;-1:-1:-1;;;;;;1030:29:3;;1026:112;;1092:7;;:34;;;-1:-1:-1;;;1092:34:3;;-1:-1:-1;;;;;1092:34:3;;;;;;;;;;;;;;;;:7;;;;;:18;;:34;;;;;;;;;;;;;;:7;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1092:34:3;;-1:-1:-1;1026:112:3;1147:10;1160:4;-1:-1:-1;;;;;1160:14:3;;1175:10;1160:26;;;;;;;;;;;;;-1:-1:-1;;;;;1160:26:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1160:26:3;;-1:-1:-1;1200:7:3;1196:24;;-1:-1:-1;1216:4:3;-1:-1:-1;1209:11:3;;-1:-1:-1;;1209:11:3;1196:24;1230:16;:21;;;1261:48;;;-1:-1:-1;;;1261:48:3;;1279:10;1261:48;;;;;;;-1:-1:-1;;;;;1261:17:3;;:48;;;;;;;;;;;;;;:17;;;;:48;;;;;;;;;;;;;;-1:-1:-1;1261:17:3;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1319:24:3;;;-1:-1:-1;;;1319:24:3;;-1:-1:-1;;;;;1319:24:3;;;;;;;;;:9;;;;;;:24;;;;;;;;;;;-1:-1:-1;1319:9:3;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1319:24:3;1353:21;;-1:-1:-1;;;1353:21:3;;1363:10;1353:21;;;;;;-1:-1:-1;;;;;1353:9:3;;;;;:21;;;;;1319:24;;1353:21;;;;;;;-1:-1:-1;1353:9:3;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1384:16:3;:30;-1:-1:-1;1431:4:3;-1:-1:-1;;;602:840:3;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    122,
    1444
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5293137 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x1BD6DFE1 EQ PUSH2 0x81 JUMPI DUP1 PUSH4 0x1FC8BC5D EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0x40DC0E37 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xCE5494BB EQ PUSH2 0xBD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xE3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x89 PUSH2 0xF8 JUMP JUMPDEST PUSH2 0x6F PUSH2 0x107 JUMP JUMPDEST PUSH2 0x89 PUSH2 0x10D JUMP JUMPDEST PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x11C JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x173 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x3737BA10333937B69036B0B9BA32B91031B432B3 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD NUMBER LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x746F6F206561726C7920746F206D696772617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH4 0xC45A0155 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x286 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6E6F742066726F6D206F6C6420666163746F7279 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xD21220A7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH4 0xD21220A7 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x347 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE6A43905 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP6 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP4 SWAP5 POP PUSH1 0x0 SWAP4 SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xE6A43905 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x47C JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x64E329CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xC9C65396 SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x461 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x509 JUMPI POP SWAP3 POP PUSH2 0x686 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x24 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP1 SWAP2 PUSH4 0x23B872DD SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x57B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x226BF2D1 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP1 DUP10 AND SWAP3 PUSH4 0x89AFCB44 SWAP3 PUSH1 0x24 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x35313C21 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH4 0x6A627842 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x662 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x4 SSTORE POP SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SHL INVALID PUSH31 0x7712B9B420A8437FED4B4F463648DAF3AFE0FFA2384E588130C964CA64736F PUSH13 0x634300060C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5293137"
    },
    "38": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "EQ",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1BD6DFE1"
    },
    "49": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x81"
    },
    "53": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FC8BC5D"
    },
    "60": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA5"
    },
    "64": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x40DC0E37"
    },
    "71": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAD"
    },
    "75": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC45A0155"
    },
    "82": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB5"
    },
    "86": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xCE5494BB"
    },
    "93": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD"
    },
    "97": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        122,
        1444
      ],
      "op": "REVERT",
      "path": "3"
    },
    "103": {
      "offset": [
        235,
        264
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "107": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3"
    },
    "110": {
      "fn": null,
      "jump": "i",
      "offset": [
        235,
        264
      ],
      "op": "JUMP",
      "path": "3"
    },
    "111": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "114": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "116": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "117": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "DUP3",
      "path": "3"
    },
    "118": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "120": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "DUP2",
      "path": "3"
    },
    "122": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "SUB",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "126": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "ADD",
      "path": "3"
    },
    "127": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "128": {
      "fn": null,
      "offset": [
        235,
        264
      ],
      "op": "RETURN",
      "path": "3"
    },
    "129": {
      "offset": [
        171,
        196
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89"
    },
    "133": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE9"
    },
    "136": {
      "fn": null,
      "jump": "i",
      "offset": [
        171,
        196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "137": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "138": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "140": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "DUP1",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "148": {
      "op": "SHL"
    },
    "149": {
      "op": "SUB"
    },
    "150": {
      "offset": [
        171,
        196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "AND",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "DUP3",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "155": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "156": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "157": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "158": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "SUB",
      "path": "3"
    },
    "160": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "162": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "ADD",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        171,
        196
      ],
      "op": "RETURN",
      "path": "3"
    },
    "165": {
      "offset": [
        146,
        165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "166": {
      "fn": null,
      "offset": [
        146,
        165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89"
    },
    "169": {
      "fn": null,
      "offset": [
        146,
        165
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF8"
    },
    "172": {
      "fn": null,
      "jump": "i",
      "offset": [
        146,
        165
      ],
      "op": "JUMP",
      "path": "3"
    },
    "173": {
      "offset": [
        270,
        315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        270,
        315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F"
    },
    "177": {
      "fn": null,
      "offset": [
        270,
        315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x107"
    },
    "180": {
      "fn": null,
      "jump": "i",
      "offset": [
        270,
        315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "181": {
      "offset": [
        202,
        229
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "182": {
      "fn": null,
      "offset": [
        202,
        229
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89"
    },
    "185": {
      "fn": null,
      "offset": [
        202,
        229
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D"
    },
    "188": {
      "fn": null,
      "jump": "i",
      "offset": [
        202,
        229
      ],
      "op": "JUMP",
      "path": "3"
    },
    "189": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "190": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x89"
    },
    "193": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "195": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "DUP1",
      "path": "3"
    },
    "196": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "197": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "SUB",
      "path": "3"
    },
    "198": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "200": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "DUP2",
      "path": "3"
    },
    "201": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "LT",
      "path": "3"
    },
    "202": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "203": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD3"
    },
    "206": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "209": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "DUP1",
      "path": "3"
    },
    "210": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "REVERT",
      "path": "3"
    },
    "211": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "212": {
      "op": "POP"
    },
    "213": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "220": {
      "op": "SHL"
    },
    "221": {
      "op": "SUB"
    },
    "222": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "AND",
      "path": "3"
    },
    "223": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11C"
    },
    "226": {
      "fn": "Migrator.migrate",
      "jump": "i",
      "offset": [
        602,
        1442
      ],
      "op": "JUMP",
      "path": "3"
    },
    "227": {
      "offset": [
        235,
        264
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "228": {
      "fn": "Migrator.migrate",
      "offset": [
        235,
        264
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "230": {
      "fn": "Migrator.migrate",
      "offset": [
        235,
        264
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "231": {
      "fn": "Migrator.migrate",
      "offset": [
        235,
        264
      ],
      "op": "DUP2",
      "path": "3"
    },
    "232": {
      "fn": "Migrator.migrate",
      "jump": "o",
      "offset": [
        235,
        264
      ],
      "op": "JUMP",
      "path": "3"
    },
    "233": {
      "offset": [
        171,
        196
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "234": {
      "fn": "Migrator.migrate",
      "offset": [
        171,
        196
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "236": {
      "fn": "Migrator.migrate",
      "offset": [
        171,
        196
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "243": {
      "op": "SHL"
    },
    "244": {
      "op": "SUB"
    },
    "245": {
      "offset": [
        171,
        196
      ],
      "op": "AND",
      "path": "3"
    },
    "246": {
      "fn": "Migrator.migrate",
      "offset": [
        171,
        196
      ],
      "op": "DUP2",
      "path": "3"
    },
    "247": {
      "fn": "Migrator.migrate",
      "jump": "o",
      "offset": [
        171,
        196
      ],
      "op": "JUMP",
      "path": "3"
    },
    "248": {
      "offset": [
        146,
        165
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "249": {
      "fn": "Migrator.migrate",
      "offset": [
        146,
        165
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "251": {
      "fn": "Migrator.migrate",
      "offset": [
        146,
        165
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "258": {
      "op": "SHL"
    },
    "259": {
      "op": "SUB"
    },
    "260": {
      "offset": [
        146,
        165
      ],
      "op": "AND",
      "path": "3"
    },
    "261": {
      "fn": "Migrator.migrate",
      "offset": [
        146,
        165
      ],
      "op": "DUP2",
      "path": "3"
    },
    "262": {
      "fn": "Migrator.migrate",
      "jump": "o",
      "offset": [
        146,
        165
      ],
      "op": "JUMP",
      "path": "3"
    },
    "263": {
      "offset": [
        270,
        315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "264": {
      "fn": "Migrator.migrate",
      "offset": [
        270,
        315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "266": {
      "fn": "Migrator.migrate",
      "offset": [
        270,
        315
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "267": {
      "fn": "Migrator.migrate",
      "offset": [
        270,
        315
      ],
      "op": "DUP2",
      "path": "3"
    },
    "268": {
      "fn": "Migrator.migrate",
      "jump": "o",
      "offset": [
        270,
        315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "269": {
      "offset": [
        202,
        229
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "270": {
      "fn": "Migrator.migrate",
      "offset": [
        202,
        229
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "272": {
      "fn": "Migrator.migrate",
      "offset": [
        202,
        229
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "279": {
      "op": "SHL"
    },
    "280": {
      "op": "SUB"
    },
    "281": {
      "offset": [
        202,
        229
      ],
      "op": "AND",
      "path": "3"
    },
    "282": {
      "fn": "Migrator.migrate",
      "offset": [
        202,
        229
      ],
      "op": "DUP2",
      "path": "3"
    },
    "283": {
      "fn": "Migrator.migrate",
      "jump": "o",
      "offset": [
        202,
        229
      ],
      "op": "JUMP",
      "path": "3"
    },
    "284": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "285": {
      "fn": "Migrator.migrate",
      "offset": [
        651,
        660
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "287": {
      "fn": "Migrator.migrate",
      "offset": [
        694,
        698
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 0
    },
    "288": {
      "fn": "Migrator.migrate",
      "offset": [
        694,
        698
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "293": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "295": {
      "op": "SHL"
    },
    "296": {
      "op": "SUB"
    },
    "297": {
      "fn": "Migrator.migrate",
      "offset": [
        694,
        698
      ],
      "op": "AND",
      "path": "3"
    },
    "298": {
      "fn": "Migrator.migrate",
      "offset": [
        680,
        690
      ],
      "op": "CALLER",
      "path": "3"
    },
    "299": {
      "branch": 11,
      "fn": "Migrator.migrate",
      "offset": [
        680,
        698
      ],
      "op": "EQ",
      "path": "3"
    },
    "300": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x173"
    },
    "303": {
      "branch": 11,
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "304": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "306": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "DUP1",
      "path": "3"
    },
    "307": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "308": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "314": {
      "op": "SHL"
    },
    "315": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "316": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "317": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "319": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "321": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "322": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "ADD",
      "path": "3"
    },
    "323": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "324": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "326": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "328": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "329": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "ADD",
      "path": "3"
    },
    "330": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "331": {
      "op": "PUSH20",
      "value": "0x3737BA10333937B69036B0B9BA32B91031B432B3"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "354": {
      "op": "SHL"
    },
    "355": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "357": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "DUP3",
      "path": "3"
    },
    "358": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "ADD",
      "path": "3"
    },
    "359": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "360": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "361": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "362": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "363": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "DUP2",
      "path": "3"
    },
    "364": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "365": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "SUB",
      "path": "3"
    },
    "366": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "368": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "ADD",
      "path": "3"
    },
    "369": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "370": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "REVERT",
      "path": "3"
    },
    "371": {
      "fn": "Migrator.migrate",
      "offset": [
        672,
        723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "372": {
      "fn": "Migrator.migrate",
      "offset": [
        757,
        771
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x3"
    },
    "374": {
      "fn": "Migrator.migrate",
      "offset": [
        757,
        771
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "375": {
      "fn": "Migrator.migrate",
      "offset": [
        741,
        753
      ],
      "op": "NUMBER",
      "path": "3"
    },
    "376": {
      "fn": "Migrator.migrate",
      "offset": [
        741,
        771
      ],
      "op": "LT",
      "path": "3"
    },
    "377": {
      "branch": 12,
      "fn": "Migrator.migrate",
      "offset": [
        741,
        771
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "378": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1"
    },
    "381": {
      "branch": 12,
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "382": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "384": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "DUP1",
      "path": "3"
    },
    "385": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "386": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "390": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "392": {
      "op": "SHL"
    },
    "393": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "394": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "395": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "397": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "399": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "400": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "ADD",
      "path": "3"
    },
    "401": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "402": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "404": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "406": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "407": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "ADD",
      "path": "3"
    },
    "408": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "409": {
      "op": "PUSH20",
      "value": "0x746F6F206561726C7920746F206D696772617465"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "432": {
      "op": "SHL"
    },
    "433": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "435": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "DUP3",
      "path": "3"
    },
    "436": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "ADD",
      "path": "3"
    },
    "437": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "438": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "439": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "440": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "441": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "442": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "443": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "SUB",
      "path": "3"
    },
    "444": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "446": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "ADD",
      "path": "3"
    },
    "447": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "448": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "REVERT",
      "path": "3"
    },
    "449": {
      "fn": "Migrator.migrate",
      "offset": [
        733,
        796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "450": {
      "fn": "Migrator.migrate",
      "offset": [
        832,
        842
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 2,
      "value": "0x1"
    },
    "452": {
      "fn": "Migrator.migrate",
      "offset": [
        832,
        842
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "453": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "455": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "456": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "457": {
      "op": "PUSH4",
      "value": "0xC45A0155"
    },
    "462": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "464": {
      "op": "SHL"
    },
    "465": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP2",
      "path": "3"
    },
    "466": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "467": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "468": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "475": {
      "op": "SHL"
    },
    "476": {
      "op": "SUB"
    },
    "477": {
      "fn": "Migrator.migrate",
      "offset": [
        832,
        842
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "478": {
      "fn": "Migrator.migrate",
      "offset": [
        832,
        842
      ],
      "op": "DUP4",
      "path": "3"
    },
    "479": {
      "fn": "Migrator.migrate",
      "offset": [
        832,
        842
      ],
      "op": "AND",
      "path": "3"
    },
    "480": {
      "fn": "Migrator.migrate",
      "offset": [
        832,
        842
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "481": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        826
      ],
      "op": "DUP6",
      "path": "3"
    },
    "482": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        826
      ],
      "op": "AND",
      "path": "3"
    },
    "483": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        826
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "484": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        826
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC45A0155"
    },
    "489": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        826
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "490": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "492": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "493": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP4",
      "path": "3"
    },
    "494": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ADD",
      "path": "3"
    },
    "495": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "496": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "498": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "499": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "500": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "501": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP3",
      "path": "3"
    },
    "502": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "503": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "SUB",
      "path": "3"
    },
    "504": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ADD",
      "path": "3"
    },
    "505": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP2",
      "path": "3"
    },
    "506": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        826
      ],
      "op": "DUP7",
      "path": "3"
    },
    "507": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "508": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "509": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "510": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "511": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "512": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x208"
    },
    "515": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "516": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "518": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "519": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "REVERT",
      "path": "3"
    },
    "520": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "521": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "POP",
      "path": "3"
    },
    "522": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "GAS",
      "path": "3"
    },
    "523": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "524": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "525": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "526": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "527": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x21C"
    },
    "530": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "531": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "532": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "534": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "535": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "536": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "537": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "539": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "REVERT",
      "path": "3"
    },
    "540": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "541": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "POP",
      "path": "3"
    },
    "542": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "POP",
      "path": "3"
    },
    "543": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "POP",
      "path": "3"
    },
    "544": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "POP",
      "path": "3"
    },
    "545": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "547": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "548": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "549": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "551": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP2",
      "path": "3"
    },
    "552": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "LT",
      "path": "3"
    },
    "553": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "554": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x232"
    },
    "557": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "558": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "560": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "DUP1",
      "path": "3"
    },
    "561": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "REVERT",
      "path": "3"
    },
    "562": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "563": {
      "op": "POP"
    },
    "564": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        828
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "571": {
      "op": "SHL"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "fn": "Migrator.migrate",
      "offset": [
        814,
        842
      ],
      "op": "AND",
      "path": "3"
    },
    "574": {
      "branch": 13,
      "fn": "Migrator.migrate",
      "offset": [
        814,
        842
      ],
      "op": "EQ",
      "path": "3"
    },
    "575": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x286"
    },
    "578": {
      "branch": 13,
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "579": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "581": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "DUP1",
      "path": "3"
    },
    "582": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "589": {
      "op": "SHL"
    },
    "590": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "591": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "592": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "594": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "596": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "597": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "ADD",
      "path": "3"
    },
    "598": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "599": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x14"
    },
    "601": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "603": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "604": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "ADD",
      "path": "3"
    },
    "605": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "606": {
      "op": "PUSH20",
      "value": "0x6E6F742066726F6D206F6C6420666163746F7279"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "629": {
      "op": "SHL"
    },
    "630": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "632": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "DUP3",
      "path": "3"
    },
    "633": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "ADD",
      "path": "3"
    },
    "634": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "635": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "636": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "637": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "638": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "DUP2",
      "path": "3"
    },
    "639": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "640": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "SUB",
      "path": "3"
    },
    "641": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "643": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "ADD",
      "path": "3"
    },
    "644": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "645": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "REVERT",
      "path": "3"
    },
    "646": {
      "fn": "Migrator.migrate",
      "offset": [
        806,
        867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "647": {
      "fn": "Migrator.migrate",
      "offset": [
        877,
        891
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "649": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        898
      ],
      "op": "DUP3",
      "path": "3"
    },
    "650": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "654": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "656": {
      "op": "SHL"
    },
    "657": {
      "op": "SUB"
    },
    "658": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        905
      ],
      "op": "AND",
      "path": "3"
    },
    "659": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        905
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xDFE1681"
    },
    "664": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "666": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "667": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "668": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "673": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "AND",
      "path": "3"
    },
    "674": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "676": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "SHL",
      "path": "3"
    },
    "677": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "678": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "679": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "681": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "ADD",
      "path": "3"
    },
    "682": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "684": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "686": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "687": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "688": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP4",
      "path": "3"
    },
    "689": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "SUB",
      "path": "3"
    },
    "690": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "691": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP7",
      "path": "3"
    },
    "692": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "693": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "694": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "695": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "696": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "697": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C1"
    },
    "700": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "701": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "703": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "704": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "REVERT",
      "path": "3"
    },
    "705": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "706": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "POP",
      "path": "3"
    },
    "707": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "GAS",
      "path": "3"
    },
    "708": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "709": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "710": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "711": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "712": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D5"
    },
    "715": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "716": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "717": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "719": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "720": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "721": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "722": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "724": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "REVERT",
      "path": "3"
    },
    "725": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "726": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "POP",
      "path": "3"
    },
    "727": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "POP",
      "path": "3"
    },
    "728": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "POP",
      "path": "3"
    },
    "729": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "POP",
      "path": "3"
    },
    "730": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "732": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "733": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "734": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "736": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP2",
      "path": "3"
    },
    "737": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "LT",
      "path": "3"
    },
    "738": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "739": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2EB"
    },
    "742": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "743": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "745": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "DUP1",
      "path": "3"
    },
    "746": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "REVERT",
      "path": "3"
    },
    "747": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "748": {
      "op": "POP"
    },
    "749": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "750": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "752": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "753": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "754": {
      "op": "PUSH4",
      "value": "0xD21220A7"
    },
    "759": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "761": {
      "op": "SHL"
    },
    "762": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP2",
      "path": "3"
    },
    "763": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "764": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "765": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "766": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "767": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "768": {
      "op": "POP"
    },
    "769": {
      "fn": "Migrator.migrate",
      "offset": [
        917,
        931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "771": {
      "fn": "Migrator.migrate",
      "offset": [
        917,
        931
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        945
      ],
      "op": "DUP7",
      "path": "3"
    },
    "781": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        945
      ],
      "op": "AND",
      "path": "3"
    },
    "782": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        945
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "783": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        945
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD21220A7"
    },
    "788": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        945
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "789": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "791": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "792": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP4",
      "path": "3"
    },
    "793": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ADD",
      "path": "3"
    },
    "794": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "795": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "797": {
      "fn": "Migrator.migrate",
      "offset": [
        894,
        907
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "798": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "799": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "800": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP3",
      "path": "3"
    },
    "801": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "802": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SUB",
      "path": "3"
    },
    "803": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ADD",
      "path": "3"
    },
    "804": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP2",
      "path": "3"
    },
    "805": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        945
      ],
      "op": "DUP7",
      "path": "3"
    },
    "806": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "807": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "808": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "809": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "810": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "811": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x333"
    },
    "814": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "815": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "817": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "818": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "REVERT",
      "path": "3"
    },
    "819": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "820": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "POP",
      "path": "3"
    },
    "821": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "GAS",
      "path": "3"
    },
    "822": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "823": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "824": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "825": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "826": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x347"
    },
    "829": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "830": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "831": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "833": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "834": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "835": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "836": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "838": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "REVERT",
      "path": "3"
    },
    "839": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "840": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "POP",
      "path": "3"
    },
    "841": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "POP",
      "path": "3"
    },
    "842": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "POP",
      "path": "3"
    },
    "843": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "POP",
      "path": "3"
    },
    "844": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "846": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "847": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "848": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "850": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP2",
      "path": "3"
    },
    "851": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "LT",
      "path": "3"
    },
    "852": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "853": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35D"
    },
    "856": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "857": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "859": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "DUP1",
      "path": "3"
    },
    "860": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "REVERT",
      "path": "3"
    },
    "861": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "862": {
      "op": "POP"
    },
    "863": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "864": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "866": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "867": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "869": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "870": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "871": {
      "op": "PUSH4",
      "value": "0xE6A43905"
    },
    "876": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "878": {
      "op": "SHL"
    },
    "879": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP2",
      "path": "3"
    },
    "880": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "887": {
      "op": "SHL"
    },
    "888": {
      "op": "SUB"
    },
    "889": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP7",
      "path": "3"
    },
    "890": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP2",
      "path": "3"
    },
    "891": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "AND",
      "path": "3"
    },
    "892": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "894": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP4",
      "path": "3"
    },
    "895": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ADD",
      "path": "3"
    },
    "896": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "897": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "898": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP6",
      "path": "3"
    },
    "899": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "AND",
      "path": "3"
    },
    "900": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "902": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP4",
      "path": "3"
    },
    "903": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ADD",
      "path": "3"
    },
    "904": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "905": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "906": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "907": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "908": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "909": {
      "op": "POP"
    },
    "910": {
      "fn": "Migrator.migrate",
      "offset": [
        957,
        971
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "912": {
      "fn": "Migrator.migrate",
      "offset": [
        957,
        971
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "913": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "914": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "915": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "916": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "AND",
      "path": "3"
    },
    "917": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "918": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        999
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE6A43905"
    },
    "923": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        999
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "924": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "926": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "927": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP4",
      "path": "3"
    },
    "928": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ADD",
      "path": "3"
    },
    "929": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "930": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "932": {
      "fn": "Migrator.migrate",
      "offset": [
        934,
        947
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "933": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "934": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "935": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP3",
      "path": "3"
    },
    "936": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "937": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SUB",
      "path": "3"
    },
    "938": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ADD",
      "path": "3"
    },
    "939": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP2",
      "path": "3"
    },
    "940": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        991
      ],
      "op": "DUP7",
      "path": "3"
    },
    "941": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "942": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "943": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "944": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "945": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "946": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BA"
    },
    "949": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "950": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "952": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "953": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "REVERT",
      "path": "3"
    },
    "954": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "955": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "POP",
      "path": "3"
    },
    "956": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "GAS",
      "path": "3"
    },
    "957": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "958": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "959": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "960": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "961": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CE"
    },
    "964": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "965": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "966": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "968": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "969": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "970": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "971": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "973": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "REVERT",
      "path": "3"
    },
    "974": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "975": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "POP",
      "path": "3"
    },
    "976": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "POP",
      "path": "3"
    },
    "977": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "POP",
      "path": "3"
    },
    "978": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "POP",
      "path": "3"
    },
    "979": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "981": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "982": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "983": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "985": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP2",
      "path": "3"
    },
    "986": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "LT",
      "path": "3"
    },
    "987": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "988": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3E4"
    },
    "991": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "992": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "994": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "DUP1",
      "path": "3"
    },
    "995": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "REVERT",
      "path": "3"
    },
    "996": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "997": {
      "op": "POP"
    },
    "998": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "999": {
      "fn": "Migrator.migrate",
      "offset": [
        984,
        1015
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1000": {
      "op": "POP"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1007": {
      "op": "SHL"
    },
    "1008": {
      "op": "SUB"
    },
    "1009": {
      "fn": "Migrator.migrate",
      "offset": [
        1030,
        1059
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1010": {
      "branch": 14,
      "fn": "Migrator.migrate",
      "offset": [
        1030,
        1059
      ],
      "op": "AND",
      "path": "3"
    },
    "1011": {
      "fn": "Migrator.migrate",
      "offset": [
        1026,
        1138
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47C"
    },
    "1014": {
      "branch": 14,
      "fn": "Migrator.migrate",
      "offset": [
        1026,
        1138
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1015": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x2"
    },
    "1017": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1018": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1020": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1021": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1022": {
      "op": "PUSH4",
      "value": "0x64E329CB"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1029": {
      "op": "SHL"
    },
    "1030": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1031": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1041": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1042": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "AND",
      "path": "3"
    },
    "1043": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1045": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1046": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ADD",
      "path": "3"
    },
    "1047": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1048": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1049": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1050": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "AND",
      "path": "3"
    },
    "1051": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1053": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1054": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ADD",
      "path": "3"
    },
    "1055": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1056": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1057": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1058": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1059": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1060": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1061": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "AND",
      "path": "3"
    },
    "1062": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1063": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1110
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC9C65396"
    },
    "1068": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1110
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1069": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1071": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1072": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1073": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ADD",
      "path": "3"
    },
    "1074": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1075": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1077": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1078": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1079": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1080": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1081": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1082": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SUB",
      "path": "3"
    },
    "1083": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ADD",
      "path": "3"
    },
    "1084": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1085": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1087": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1099
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1088": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1089": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1090": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1091": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1092": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1093": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44D"
    },
    "1096": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1097": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1099": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1100": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1101": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1102": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "POP",
      "path": "3"
    },
    "1103": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "GAS",
      "path": "3"
    },
    "1104": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "CALL",
      "path": "3"
    },
    "1105": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1106": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1107": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1108": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x461"
    },
    "1111": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1112": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1113": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1115": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1116": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1117": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1118": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1120": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1121": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1122": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "POP",
      "path": "3"
    },
    "1123": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "POP",
      "path": "3"
    },
    "1124": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "POP",
      "path": "3"
    },
    "1125": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "POP",
      "path": "3"
    },
    "1126": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1128": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1129": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1130": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1132": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1133": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "LT",
      "path": "3"
    },
    "1134": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1135": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x477"
    },
    "1138": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1139": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1141": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1142": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1143": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1146": {
      "fn": "Migrator.migrate",
      "offset": [
        1092,
        1126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1147": {
      "op": "POP"
    },
    "1148": {
      "fn": "Migrator.migrate",
      "offset": [
        1026,
        1138
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1149": {
      "fn": "Migrator.migrate",
      "offset": [
        1147,
        1157
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1151": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1164
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1174
      ],
      "op": "AND",
      "path": "3"
    },
    "1161": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1174
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "1166": {
      "fn": "Migrator.migrate",
      "offset": [
        1175,
        1185
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1167": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1169": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1170": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1171": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1176": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "AND",
      "path": "3"
    },
    "1177": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "1179": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "SHL",
      "path": "3"
    },
    "1180": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1181": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1182": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1184": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ADD",
      "path": "3"
    },
    "1185": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1186": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1193": {
      "op": "SHL"
    },
    "1194": {
      "op": "SUB"
    },
    "1195": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "AND",
      "path": "3"
    },
    "1196": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1197": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1198": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1200": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ADD",
      "path": "3"
    },
    "1201": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1202": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1203": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1204": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1206": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1208": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1209": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1210": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1211": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "SUB",
      "path": "3"
    },
    "1212": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1213": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1214": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1215": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1216": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1217": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1218": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1219": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4CB"
    },
    "1222": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1223": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1225": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1226": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1227": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1228": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1229": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "GAS",
      "path": "3"
    },
    "1230": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "1231": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1232": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1233": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1234": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4DF"
    },
    "1237": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1238": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1239": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1241": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1242": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1243": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1244": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1246": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1247": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1248": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1249": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1250": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1251": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "POP",
      "path": "3"
    },
    "1252": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1254": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1255": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1256": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1258": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1259": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "LT",
      "path": "3"
    },
    "1260": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1261": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F5"
    },
    "1264": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1265": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1267": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1268": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1269": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1270": {
      "op": "POP"
    },
    "1271": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1272": {
      "fn": "Migrator.migrate",
      "offset": [
        1160,
        1186
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1273": {
      "op": "POP"
    },
    "1274": {
      "branch": 15,
      "fn": "Migrator.migrate",
      "offset": [
        1200,
        1207
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1275": {
      "fn": "Migrator.migrate",
      "offset": [
        1196,
        1220
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x509"
    },
    "1278": {
      "branch": 15,
      "fn": "Migrator.migrate",
      "offset": [
        1196,
        1220
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1279": {
      "op": "POP"
    },
    "1280": {
      "fn": "Migrator.migrate",
      "offset": [
        1216,
        1220
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 4
    },
    "1281": {
      "op": "POP"
    },
    "1282": {
      "fn": "Migrator.migrate",
      "offset": [
        1209,
        1220
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x686"
    },
    "1285": {
      "fn": "Migrator.migrate",
      "offset": [
        1209,
        1220
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1286": {
      "op": "POP"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "fn": "Migrator.migrate",
      "offset": [
        1209,
        1220
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1289": {
      "fn": "Migrator.migrate",
      "offset": [
        1196,
        1220
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1290": {
      "fn": "Migrator.migrate",
      "offset": [
        1230,
        1246
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x4"
    },
    "1292": {
      "fn": "Migrator.migrate",
      "offset": [
        1230,
        1251
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1293": {
      "fn": "Migrator.migrate",
      "offset": [
        1230,
        1251
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1294": {
      "fn": "Migrator.migrate",
      "offset": [
        1230,
        1251
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1295": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x40"
    },
    "1297": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1298": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1299": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1306": {
      "op": "SHL"
    },
    "1307": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1308": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1309": {
      "fn": "Migrator.migrate",
      "offset": [
        1279,
        1289
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1310": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1311": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1312": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ADD",
      "path": "3"
    },
    "1313": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1314": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1315": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1316": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1323": {
      "op": "SHL"
    },
    "1324": {
      "op": "SUB"
    },
    "1325": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1326": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "AND",
      "path": "3"
    },
    "1327": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1329": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1330": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ADD",
      "path": "3"
    },
    "1331": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1332": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1333": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1334": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1336": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1337": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ADD",
      "path": "3"
    },
    "1338": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1339": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1340": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1341": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1342": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1343": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1344": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1345": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "1350": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1351": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x64"
    },
    "1353": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1354": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1355": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ADD",
      "path": "3"
    },
    "1356": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1357": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1359": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1360": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1361": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1362": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1363": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1364": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "SUB",
      "path": "3"
    },
    "1365": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ADD",
      "path": "3"
    },
    "1366": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1369": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1278
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1370": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1371": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1372": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1373": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1374": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1375": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x567"
    },
    "1378": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1379": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1381": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1382": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1383": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1384": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "POP",
      "path": "3"
    },
    "1385": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "GAS",
      "path": "3"
    },
    "1386": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "CALL",
      "path": "3"
    },
    "1387": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1388": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1389": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1390": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57B"
    },
    "1393": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1394": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1395": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1397": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1398": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1399": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1400": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1402": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1403": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1404": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "POP",
      "path": "3"
    },
    "1405": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "POP",
      "path": "3"
    },
    "1406": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "POP",
      "path": "3"
    },
    "1407": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "POP",
      "path": "3"
    },
    "1408": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1410": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1411": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1412": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1414": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1415": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "LT",
      "path": "3"
    },
    "1416": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1417": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x591"
    },
    "1420": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1421": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1423": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1424": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1425": {
      "fn": "Migrator.migrate",
      "offset": [
        1261,
        1309
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "op": "POP"
    },
    "1428": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 7,
      "value": "0x40"
    },
    "1430": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1431": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1432": {
      "op": "PUSH4",
      "value": "0x226BF2D1"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1439": {
      "op": "SHL"
    },
    "1440": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1441": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1451": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1452": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "AND",
      "path": "3"
    },
    "1453": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1455": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1456": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ADD",
      "path": "3"
    },
    "1457": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1458": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1459": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1460": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1461": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1462": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "AND",
      "path": "3"
    },
    "1463": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1464": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x89AFCB44"
    },
    "1469": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1470": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1472": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1473": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1474": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ADD",
      "path": "3"
    },
    "1475": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1476": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1477": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1478": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1479": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "SUB",
      "path": "3"
    },
    "1480": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ADD",
      "path": "3"
    },
    "1481": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1484": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1328
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1485": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1486": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1487": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1488": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1489": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1490": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DA"
    },
    "1493": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1494": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1496": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1497": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1498": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1499": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "POP",
      "path": "3"
    },
    "1500": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "GAS",
      "path": "3"
    },
    "1501": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "CALL",
      "path": "3"
    },
    "1502": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1503": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1504": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1505": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5EE"
    },
    "1508": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1509": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1510": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1512": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1513": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1514": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1515": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1517": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1518": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1519": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "POP",
      "path": "3"
    },
    "1520": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "POP",
      "path": "3"
    },
    "1521": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "POP",
      "path": "3"
    },
    "1522": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "POP",
      "path": "3"
    },
    "1523": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1525": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1526": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1527": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1529": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1530": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "LT",
      "path": "3"
    },
    "1531": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1532": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x604"
    },
    "1535": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1536": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1538": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1539": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1540": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1541": {
      "op": "POP"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1545": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 8
    },
    "1546": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1547": {
      "op": "PUSH4",
      "value": "0x35313C21"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1554": {
      "op": "SHL"
    },
    "1555": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1556": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1557": {
      "fn": "Migrator.migrate",
      "offset": [
        1363,
        1373
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1558": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1560": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1561": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ADD",
      "path": "3"
    },
    "1562": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1563": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1564": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1571": {
      "op": "SHL"
    },
    "1572": {
      "op": "SUB"
    },
    "1573": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1362
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1574": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1362
      ],
      "op": "AND",
      "path": "3"
    },
    "1575": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1362
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1576": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1362
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6A627842"
    },
    "1581": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1362
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1582": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1584": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1585": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1586": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ADD",
      "path": "3"
    },
    "1587": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1588": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1590": {
      "fn": "Migrator.migrate",
      "offset": [
        1319,
        1343
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1591": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1592": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1593": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1594": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1595": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "SUB",
      "path": "3"
    },
    "1596": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ADD",
      "path": "3"
    },
    "1597": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1600": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1362
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1601": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1602": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "1603": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1604": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1605": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1606": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x64E"
    },
    "1609": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1610": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1612": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1613": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1614": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1615": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "POP",
      "path": "3"
    },
    "1616": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "GAS",
      "path": "3"
    },
    "1617": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "CALL",
      "path": "3"
    },
    "1618": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1619": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1620": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1621": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x662"
    },
    "1624": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1625": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1626": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1628": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1629": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "1630": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1631": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1633": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1634": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1635": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "POP",
      "path": "3"
    },
    "1636": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "POP",
      "path": "3"
    },
    "1637": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "POP",
      "path": "3"
    },
    "1638": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "POP",
      "path": "3"
    },
    "1639": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1641": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1642": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "1643": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1645": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1646": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "LT",
      "path": "3"
    },
    "1647": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1648": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x678"
    },
    "1651": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1652": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1654": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1655": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1656": {
      "fn": "Migrator.migrate",
      "offset": [
        1353,
        1374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1657": {
      "op": "POP"
    },
    "1658": {
      "op": "POP"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1661": {
      "op": "NOT"
    },
    "1662": {
      "fn": "Migrator.migrate",
      "offset": [
        1384,
        1400
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 9,
      "value": "0x4"
    },
    "1664": {
      "fn": "Migrator.migrate",
      "offset": [
        1384,
        1414
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1665": {
      "op": "POP"
    },
    "1666": {
      "fn": "Migrator.migrate",
      "offset": [
        1431,
        1435
      ],
      "op": "SWAP3",
      "path": "3",
      "statement": 10
    },
    "1667": {
      "op": "POP"
    },
    "1668": {
      "op": "POP"
    },
    "1669": {
      "op": "POP"
    },
    "1670": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1671": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1672": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1673": {
      "fn": "Migrator.migrate",
      "offset": [
        602,
        1442
      ],
      "op": "POP",
      "path": "3"
    },
    "1674": {
      "fn": "Migrator.migrate",
      "jump": "o",
      "offset": [
        602,
        1442
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "58749d04ac0816f594fd4cea745e60f9138654dd",
  "source": "pragma solidity 0.6.12;\n\nimport \"./lib/ezzc/interfaces/IEZZCPair.sol\";\nimport \"./lib/ezzc/interfaces/IEZZCFactory.sol\";\n\n\ncontract Migrator {\n    address public chef;\n    address public oldFactory;\n    IEZZCFactory public factory;\n    uint256 public notBeforeBlock;\n    uint256 public desiredLiquidity = uint256(-1);\n\n    constructor(\n        address _chef,\n        address _oldFactory,\n        IEZZCFactory _factory,\n        uint256 _notBeforeBlock\n    ) public {\n        chef = _chef;\n        oldFactory = _oldFactory;\n        factory = _factory;\n        notBeforeBlock = _notBeforeBlock;\n    }\n\n    function migrate(IEZZCPair orig) public returns (IEZZCPair) {\n        require(msg.sender == chef, \"not from master chef\");\n        require(block.number >= notBeforeBlock, \"too early to migrate\");\n        require(orig.factory() == oldFactory, \"not from old factory\");\n        address token0 = orig.token0();\n        address token1 = orig.token1();\n        IEZZCPair pair = IEZZCPair(factory.getPair(token0, token1));\n        if (pair == IEZZCPair(address(0))) {\n            pair = IEZZCPair(factory.createPair(token0, token1));\n        }\n        uint256 lp = orig.balanceOf(msg.sender);\n        if (lp == 0) return pair;\n        desiredLiquidity = lp;\n        orig.transferFrom(msg.sender, address(orig), lp);\n        orig.burn(address(pair));\n        pair.mint(msg.sender);\n        desiredLiquidity = uint256(-1);\n        return pair;\n    }\n}\n",
  "sourceMap": "122:1322:3:-:0;;;-1:-1:-1;;270:45:3;;322:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;322:274:3;;;;;;;;;;;;;;;473:4;:12;;-1:-1:-1;;;;;;473:12:3;;;-1:-1:-1;;;;;473:12:3;;;;;;-1:-1:-1;495:24:3;;;;;;;;;;;;;;529:7;:18;;;;;;;;;;;;;;;557:14;:32;122:1322;;;;;;;;",
  "sourcePath": "contracts/Migrator.sol",
  "type": "contract"
}
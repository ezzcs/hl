{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/lib/GSN/Context.sol",
    "42": "contracts/lib/math/SafeMath.sol",
    "44": "contracts/lib/token/ERC20/ERC20.sol",
    "49": "contracts/lib/token/ERC20/IERC20.sol",
    "60": "contracts/lib/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/lib/token/ERC20/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        13227
      ]
    },
    "id": 13228,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12722,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:44"
      },
      {
        "absolutePath": "contracts/lib/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 12723,
        "nodeType": "ImportDirective",
        "scope": 13228,
        "sourceUnit": 4808,
        "src": "25:31:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/token/ERC20/IERC20.sol",
        "file": "./IERC20.sol",
        "id": 12724,
        "nodeType": "ImportDirective",
        "scope": 13228,
        "sourceUnit": 13792,
        "src": "57:22:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 12725,
        "nodeType": "ImportDirective",
        "scope": 13228,
        "sourceUnit": 12542,
        "src": "80:33:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/lib/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 12726,
        "nodeType": "ImportDirective",
        "scope": 13228,
        "sourceUnit": 15525,
        "src": "114:33:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12728,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4807,
              "src": "1330:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$4807",
                "typeString": "contract Context"
              }
            },
            "id": 12729,
            "nodeType": "InheritanceSpecifier",
            "src": "1330:7:44"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12730,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13791,
              "src": "1339:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$13791",
                "typeString": "contract IERC20"
              }
            },
            "id": 12731,
            "nodeType": "InheritanceSpecifier",
            "src": "1339:6:44"
          }
        ],
        "contractDependencies": [
          4807,
          13791
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 12727,
          "nodeType": "StructuredDocumentation",
          "src": "149:1162:44",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 13227,
        "linearizedBaseContracts": [
          13227,
          13791,
          4807
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12734,
            "libraryName": {
              "contractScope": null,
              "id": 12732,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12468,
              "src": "1358:8:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$12468",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1352:27:44",
            "typeName": {
              "id": 12733,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1371:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 12737,
            "libraryName": {
              "contractScope": null,
              "id": 12735,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15524,
              "src": "1390:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$15524",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1384:26:44",
            "typeName": {
              "id": 12736,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1402:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 12741,
            "mutability": "mutable",
            "name": "_balances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 13227,
            "src": "1416:46:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 12740,
              "keyType": {
                "id": 12738,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1425:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1416:28:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 12739,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1436:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12747,
            "mutability": "mutable",
            "name": "_allowances",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 13227,
            "src": "1469:69:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 12746,
              "keyType": {
                "id": 12742,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1478:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1469:49:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 12745,
                "keyType": {
                  "id": 12743,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1498:7:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1489:28:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 12744,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1509:7:44",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12749,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 13227,
            "src": "1545:28:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12748,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1545:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12751,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 13227,
            "src": "1580:20:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 12750,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1580:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12753,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 13227,
            "src": "1606:22:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 12752,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1606:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12755,
            "mutability": "mutable",
            "name": "_decimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 13227,
            "src": "1634:23:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 12754,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1634:5:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 12775,
              "nodeType": "Block",
              "src": "2042:79:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12763,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12751,
                      "src": "2052:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12764,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12758,
                      "src": "2060:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2052:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 12766,
                  "nodeType": "ExpressionStatement",
                  "src": "2052:12:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12767,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12753,
                      "src": "2074:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12768,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12760,
                      "src": "2084:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2074:16:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 12770,
                  "nodeType": "ExpressionStatement",
                  "src": "2074:16:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12771,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12755,
                      "src": "2100:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 12772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2112:2:44",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2100:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 12774,
                  "nodeType": "ExpressionStatement",
                  "src": "2100:14:44"
                }
              ]
            },
            "documentation": {
              "id": 12756,
              "nodeType": "StructuredDocumentation",
              "src": "1664:311:44",
              "text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
            },
            "id": 12776,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12758,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12776,
                  "src": "1993:18:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1993:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12760,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12776,
                  "src": "2013:20:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12759,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2013:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1992:42:44"
            },
            "returnParameters": {
              "id": 12762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2042:0:44"
            },
            "scope": 13227,
            "src": "1980:141:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12784,
              "nodeType": "Block",
              "src": "2238:29:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12782,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12751,
                    "src": "2255:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 12781,
                  "id": 12783,
                  "nodeType": "Return",
                  "src": "2248:12:44"
                }
              ]
            },
            "documentation": {
              "id": 12777,
              "nodeType": "StructuredDocumentation",
              "src": "2127:54:44",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 12785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2199:2:44"
            },
            "returnParameters": {
              "id": 12781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12780,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12785,
                  "src": "2223:13:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2222:15:44"
            },
            "scope": 13227,
            "src": "2186:81:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12793,
              "nodeType": "Block",
              "src": "2434:31:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12791,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12753,
                    "src": "2451:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 12790,
                  "id": 12792,
                  "nodeType": "Return",
                  "src": "2444:14:44"
                }
              ]
            },
            "documentation": {
              "id": 12786,
              "nodeType": "StructuredDocumentation",
              "src": "2273:102:44",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 12794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2395:2:44"
            },
            "returnParameters": {
              "id": 12790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12789,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12794,
                  "src": "2419:13:44",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12788,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2418:15:44"
            },
            "scope": 13227,
            "src": "2380:85:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12802,
              "nodeType": "Block",
              "src": "3136:33:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12800,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12755,
                    "src": "3153:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 12799,
                  "id": 12801,
                  "nodeType": "Return",
                  "src": "3146:16:44"
                }
              ]
            },
            "documentation": {
              "id": 12795,
              "nodeType": "StructuredDocumentation",
              "src": "2471:612:44",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 12803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3105:2:44"
            },
            "returnParameters": {
              "id": 12799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12798,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12803,
                  "src": "3129:5:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 12797,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3129:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3128:7:44"
            },
            "scope": 13227,
            "src": "3088:81:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13722
            ],
            "body": {
              "id": 12812,
              "nodeType": "Block",
              "src": "3291:36:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12810,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12749,
                    "src": "3308:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12809,
                  "id": 12811,
                  "nodeType": "Return",
                  "src": "3301:19:44"
                }
              ]
            },
            "documentation": {
              "id": 12804,
              "nodeType": "StructuredDocumentation",
              "src": "3175:49:44",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 12813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12806,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3264:8:44"
            },
            "parameters": {
              "id": 12805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3249:2:44"
            },
            "returnParameters": {
              "id": 12809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12808,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12813,
                  "src": "3282:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3282:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3281:9:44"
            },
            "scope": 13227,
            "src": "3229:98:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13730
            ],
            "body": {
              "id": 12826,
              "nodeType": "Block",
              "src": "3460:42:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 12822,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12741,
                      "src": "3477:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12824,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12823,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12816,
                      "src": "3487:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3477:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12821,
                  "id": 12825,
                  "nodeType": "Return",
                  "src": "3470:25:44"
                }
              ]
            },
            "documentation": {
              "id": 12814,
              "nodeType": "StructuredDocumentation",
              "src": "3333:47:44",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 12827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12818,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3433:8:44"
            },
            "parameters": {
              "id": 12817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12816,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12827,
                  "src": "3404:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3403:17:44"
            },
            "returnParameters": {
              "id": 12821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12820,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12827,
                  "src": "3451:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3450:9:44"
            },
            "scope": 13227,
            "src": "3385:117:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13740
            ],
            "body": {
              "id": 12847,
              "nodeType": "Block",
              "src": "3797:80:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12839,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4795,
                          "src": "3817:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3817:12:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12841,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12830,
                        "src": "3831:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12842,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12832,
                        "src": "3842:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12838,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13048,
                      "src": "3807:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3807:42:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12844,
                  "nodeType": "ExpressionStatement",
                  "src": "3807:42:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3866:4:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12837,
                  "id": 12846,
                  "nodeType": "Return",
                  "src": "3859:11:44"
                }
              ]
            },
            "documentation": {
              "id": 12828,
              "nodeType": "StructuredDocumentation",
              "src": "3508:192:44",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 12848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12834,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3773:8:44"
            },
            "parameters": {
              "id": 12833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12830,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12848,
                  "src": "3723:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3723:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12832,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12848,
                  "src": "3742:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3742:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3722:35:44"
            },
            "returnParameters": {
              "id": 12837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12836,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12848,
                  "src": "3791:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12835,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3791:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3790:6:44"
            },
            "scope": 13227,
            "src": "3705:172:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13750
            ],
            "body": {
              "id": 12865,
              "nodeType": "Block",
              "src": "4033:51:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12859,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12747,
                        "src": "4050:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 12861,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12860,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12851,
                        "src": "4062:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4050:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 12863,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 12862,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12853,
                      "src": "4069:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4050:27:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12858,
                  "id": 12864,
                  "nodeType": "Return",
                  "src": "4043:34:44"
                }
              ]
            },
            "documentation": {
              "id": 12849,
              "nodeType": "StructuredDocumentation",
              "src": "3883:47:44",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 12866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12855,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4006:8:44"
            },
            "parameters": {
              "id": 12854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12851,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12866,
                  "src": "3954:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12853,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12866,
                  "src": "3969:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3969:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3953:32:44"
            },
            "returnParameters": {
              "id": 12858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12857,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12866,
                  "src": "4024:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4024:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4023:9:44"
            },
            "scope": 13227,
            "src": "3935:149:44",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13760
            ],
            "body": {
              "id": 12886,
              "nodeType": "Block",
              "src": "4311:77:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12878,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4795,
                          "src": "4330:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4330:12:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12880,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12869,
                        "src": "4344:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12881,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12871,
                        "src": "4353:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12877,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13204,
                      "src": "4321:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4321:39:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12883,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:39:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4377:4:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12876,
                  "id": 12885,
                  "nodeType": "Return",
                  "src": "4370:11:44"
                }
              ]
            },
            "documentation": {
              "id": 12867,
              "nodeType": "StructuredDocumentation",
              "src": "4090:127:44",
              "text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 12887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4287:8:44"
            },
            "parameters": {
              "id": 12872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12869,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12887,
                  "src": "4239:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4239:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12871,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12887,
                  "src": "4256:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4256:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4238:33:44"
            },
            "returnParameters": {
              "id": 12876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12875,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12887,
                  "src": "4305:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12874,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4305:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4304:6:44"
            },
            "scope": 13227,
            "src": "4222:166:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              13772
            ],
            "body": {
              "id": 12924,
              "nodeType": "Block",
              "src": "4960:205:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12901,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12890,
                        "src": "4980:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12902,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12892,
                        "src": "4988:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12903,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12894,
                        "src": "4999:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12900,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13048,
                      "src": "4970:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4970:36:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12905,
                  "nodeType": "ExpressionStatement",
                  "src": "4970:36:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12907,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12890,
                        "src": "5025:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12908,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4795,
                          "src": "5033:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5033:12:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12917,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12894,
                            "src": "5085:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                            "id": 12918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5093:42:44",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            },
                            "value": "ERC20: transfer amount exceeds allowance"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                              "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12910,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12747,
                                "src": "5047:11:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 12912,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 12911,
                                "name": "sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12890,
                                "src": "5059:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5047:19:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 12915,
                            "indexExpression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 12913,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4795,
                                "src": "5067:10:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 12914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5067:12:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5047:33:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12346,
                          "src": "5047:37:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 12919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5047:89:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12906,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13204,
                      "src": "5016:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5016:121:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12921,
                  "nodeType": "ExpressionStatement",
                  "src": "5016:121:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5154:4:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12899,
                  "id": 12923,
                  "nodeType": "Return",
                  "src": "5147:11:44"
                }
              ]
            },
            "documentation": {
              "id": 12888,
              "nodeType": "StructuredDocumentation",
              "src": "4394:449:44",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 12925,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12896,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4936:8:44"
            },
            "parameters": {
              "id": 12895,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12890,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12925,
                  "src": "4870:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12889,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12892,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12925,
                  "src": "4886:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4886:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12894,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12925,
                  "src": "4905:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12893,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4905:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4869:51:44"
            },
            "returnParameters": {
              "id": 12899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12898,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12925,
                  "src": "4954:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12897,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4954:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4953:6:44"
            },
            "scope": 13227,
            "src": "4848:317:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12952,
              "nodeType": "Block",
              "src": "5654:121:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12936,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4795,
                          "src": "5673:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5673:12:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12938,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12928,
                        "src": "5687:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12946,
                            "name": "addedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12930,
                            "src": "5735:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12939,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12747,
                                "src": "5696:11:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 12942,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 12940,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4795,
                                  "src": "5708:10:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 12941,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5708:12:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5696:25:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 12944,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12943,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12928,
                              "src": "5722:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5696:34:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12301,
                          "src": "5696:38:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 12947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5696:50:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12935,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13204,
                      "src": "5664:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5664:83:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12949,
                  "nodeType": "ExpressionStatement",
                  "src": "5664:83:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5764:4:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12934,
                  "id": 12951,
                  "nodeType": "Return",
                  "src": "5757:11:44"
                }
              ]
            },
            "documentation": {
              "id": 12926,
              "nodeType": "StructuredDocumentation",
              "src": "5171:384:44",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 12953,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12928,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12953,
                  "src": "5587:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5587:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12930,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12953,
                  "src": "5604:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5604:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5586:37:44"
            },
            "returnParameters": {
              "id": 12934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12933,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12953,
                  "src": "5648:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12932,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5647:6:44"
            },
            "scope": 13227,
            "src": "5560:215:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12981,
              "nodeType": "Block",
              "src": "6361:167:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12964,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4795,
                          "src": "6380:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6380:12:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12966,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12956,
                        "src": "6394:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12974,
                            "name": "subtractedValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12958,
                            "src": "6442:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                            "id": 12975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6459:39:44",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            },
                            "value": "ERC20: decreased allowance below zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                              "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 12967,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12747,
                                "src": "6403:11:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 12970,
                              "indexExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 12968,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4795,
                                  "src": "6415:10:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                    "typeString": "function () view returns (address payable)"
                                  }
                                },
                                "id": 12969,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6415:12:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6403:25:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 12972,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 12971,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12956,
                              "src": "6429:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6403:34:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 12973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sub",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12346,
                          "src": "6403:38:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                          }
                        },
                        "id": 12976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6403:96:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12963,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13204,
                      "src": "6371:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 12977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6371:129:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12978,
                  "nodeType": "ExpressionStatement",
                  "src": "6371:129:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 12979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6517:4:44",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 12962,
                  "id": 12980,
                  "nodeType": "Return",
                  "src": "6510:11:44"
                }
              ]
            },
            "documentation": {
              "id": 12954,
              "nodeType": "StructuredDocumentation",
              "src": "5781:476:44",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 12982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12956,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12982,
                  "src": "6289:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12955,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6289:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12958,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12982,
                  "src": "6306:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12957,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6306:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6288:42:44"
            },
            "returnParameters": {
              "id": 12962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12961,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12982,
                  "src": "6355:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12960,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6355:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6354:6:44"
            },
            "scope": 13227,
            "src": "6262:266:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13047,
              "nodeType": "Block",
              "src": "7089:443:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 12993,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12985,
                          "src": "7107:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 12996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7125:1:44",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7117:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12994,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7117:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 12997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7117:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7107:20:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 12999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7129:39:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 12992,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7099:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7099:70:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13001,
                  "nodeType": "ExpressionStatement",
                  "src": "7099:70:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13003,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12987,
                          "src": "7187:9:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7208:1:44",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7200:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13004,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7200:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7200:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7187:23:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 13009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7212:37:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 13002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7179:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7179:71:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13011,
                  "nodeType": "ExpressionStatement",
                  "src": "7179:71:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13013,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "7282:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13014,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12987,
                        "src": "7290:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13015,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12989,
                        "src": "7301:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13012,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13226,
                      "src": "7261:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7261:47:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13017,
                  "nodeType": "ExpressionStatement",
                  "src": "7261:47:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13018,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12741,
                        "src": "7319:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13020,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13019,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "7329:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7319:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13025,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12989,
                          "src": "7361:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                          "id": 13026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7369:40:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          },
                          "value": "ERC20: transfer amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                            "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 13021,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12741,
                            "src": "7339:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13023,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 13022,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12985,
                            "src": "7349:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7339:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12346,
                        "src": "7339:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 13027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7339:71:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7319:91:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13029,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:91:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13030,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12741,
                        "src": "7420:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13032,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13031,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12987,
                        "src": "7430:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7420:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13037,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12989,
                          "src": "7468:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 13033,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12741,
                            "src": "7443:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13035,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 13034,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12987,
                            "src": "7453:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7443:20:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12301,
                        "src": "7443:24:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7443:32:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7420:55:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13040,
                  "nodeType": "ExpressionStatement",
                  "src": "7420:55:44"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13042,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12985,
                        "src": "7499:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13043,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12987,
                        "src": "7507:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13044,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12989,
                        "src": "7518:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13041,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13781,
                      "src": "7490:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7490:35:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13046,
                  "nodeType": "EmitStatement",
                  "src": "7485:40:44"
                }
              ]
            },
            "documentation": {
              "id": 12983,
              "nodeType": "StructuredDocumentation",
              "src": "6534:463:44",
              "text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 13048,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12985,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13048,
                  "src": "7021:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7021:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12987,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13048,
                  "src": "7037:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7037:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12989,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13048,
                  "src": "7056:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12988,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7056:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7020:51:44"
            },
            "returnParameters": {
              "id": 12991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7089:0:44"
            },
            "scope": 13227,
            "src": "7002:530:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13102,
              "nodeType": "Block",
              "src": "7867:305:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13057,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13051,
                          "src": "7885:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13060,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7904:1:44",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7896:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13058,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7896:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7896:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7885:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 13063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7908:33:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 13056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7877:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7877:65:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13065,
                  "nodeType": "ExpressionStatement",
                  "src": "7877:65:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 13069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7982:1:44",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7974:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7974:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7974:10:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13071,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13051,
                        "src": "7986:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13072,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13053,
                        "src": "7995:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13066,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13226,
                      "src": "7953:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7953:49:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13074,
                  "nodeType": "ExpressionStatement",
                  "src": "7953:49:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13075,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12749,
                      "src": "8013:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13078,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13053,
                          "src": "8045:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 13076,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12749,
                          "src": "8028:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12301,
                        "src": "8028:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8028:24:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8013:39:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13081,
                  "nodeType": "ExpressionStatement",
                  "src": "8013:39:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13082,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12741,
                        "src": "8062:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13084,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13083,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13051,
                        "src": "8072:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8062:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13089,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13053,
                          "src": "8106:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 13085,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12741,
                            "src": "8083:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13087,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 13086,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13051,
                            "src": "8093:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8083:18:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12301,
                        "src": "8083:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8083:30:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8062:51:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13092,
                  "nodeType": "ExpressionStatement",
                  "src": "8062:51:44"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 13096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8145:1:44",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8137:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8137:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8137:10:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13098,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13051,
                        "src": "8149:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13099,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13053,
                        "src": "8158:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13093,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13781,
                      "src": "8128:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8128:37:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13101,
                  "nodeType": "EmitStatement",
                  "src": "8123:42:44"
                }
              ]
            },
            "documentation": {
              "id": 13049,
              "nodeType": "StructuredDocumentation",
              "src": "7538:259:44",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
            },
            "id": 13103,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13051,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13103,
                  "src": "7817:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7817:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13053,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13103,
                  "src": "7834:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13052,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7834:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7816:33:44"
            },
            "returnParameters": {
              "id": 13055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7867:0:44"
            },
            "scope": 13227,
            "src": "7802:370:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13158,
              "nodeType": "Block",
              "src": "8556:345:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13112,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13106,
                          "src": "8574:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8593:1:44",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8585:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13113,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8585:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8585:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "8574:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 13118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8597:35:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 13111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8566:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8566:67:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13120,
                  "nodeType": "ExpressionStatement",
                  "src": "8566:67:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13122,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13106,
                        "src": "8665:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 13125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8682:1:44",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8674:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13123,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8674:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8674:10:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13127,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13108,
                        "src": "8686:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13121,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13226,
                      "src": "8644:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8644:49:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13129,
                  "nodeType": "ExpressionStatement",
                  "src": "8644:49:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 13130,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12741,
                        "src": "8704:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13132,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13131,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13106,
                        "src": "8714:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8704:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13137,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13108,
                          "src": "8748:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                          "id": 13138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8756:36:44",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          },
                          "value": "ERC20: burn amount exceeds balance"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                            "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 13133,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12741,
                            "src": "8725:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 13135,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 13134,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13106,
                            "src": "8735:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8725:18:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12346,
                        "src": "8725:22:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                        }
                      },
                      "id": 13139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8725:68:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8704:89:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13141,
                  "nodeType": "ExpressionStatement",
                  "src": "8704:89:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13142,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12749,
                      "src": "8803:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13145,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13108,
                          "src": "8835:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 13143,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12749,
                          "src": "8818:12:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 13144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 12318,
                        "src": "8818:16:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 13146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8818:24:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8803:39:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13148,
                  "nodeType": "ExpressionStatement",
                  "src": "8803:39:44"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13150,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13106,
                        "src": "8866:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 13153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8883:1:44",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 13152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8875:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 13151,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8875:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 13154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8875:10:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13155,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13108,
                        "src": "8887:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13149,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13781,
                      "src": "8857:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8857:37:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13157,
                  "nodeType": "EmitStatement",
                  "src": "8852:42:44"
                }
              ]
            },
            "documentation": {
              "id": 13104,
              "nodeType": "StructuredDocumentation",
              "src": "8178:308:44",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 13159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13106,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13159,
                  "src": "8506:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8506:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13108,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13159,
                  "src": "8523:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8523:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8505:33:44"
            },
            "returnParameters": {
              "id": 13110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8556:0:44"
            },
            "scope": 13227,
            "src": "8491:410:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13203,
              "nodeType": "Block",
              "src": "9407:257:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13170,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13162,
                          "src": "9425:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9442:1:44",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9434:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13171,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9434:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9434:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9425:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 13176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9446:38:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 13169,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9417:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9417:68:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13178,
                  "nodeType": "ExpressionStatement",
                  "src": "9417:68:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 13185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 13180,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13164,
                          "src": "9503:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 13183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9522:1:44",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 13182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9514:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 13181,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9514:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 13184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9514:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9503:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 13186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9526:36:44",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 13179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9495:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9495:68:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13188,
                  "nodeType": "ExpressionStatement",
                  "src": "9495:68:44"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13189,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12747,
                          "src": "9574:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 13192,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13190,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13162,
                          "src": "9586:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9574:18:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 13193,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13191,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13164,
                        "src": "9593:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9574:27:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13194,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13166,
                      "src": "9604:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9574:36:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 13196,
                  "nodeType": "ExpressionStatement",
                  "src": "9574:36:44"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13198,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13162,
                        "src": "9634:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13199,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13164,
                        "src": "9641:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13200,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13166,
                        "src": "9650:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13197,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13790,
                      "src": "9625:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 13201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9625:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13202,
                  "nodeType": "EmitStatement",
                  "src": "9620:37:44"
                }
              ]
            },
            "documentation": {
              "id": 13160,
              "nodeType": "StructuredDocumentation",
              "src": "8907:412:44",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 13204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13162,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13204,
                  "src": "9342:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9342:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13164,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13204,
                  "src": "9357:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9357:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13166,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13204,
                  "src": "9374:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9374:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9341:48:44"
            },
            "returnParameters": {
              "id": 13168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9407:0:44"
            },
            "scope": 13227,
            "src": "9324:340:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13214,
              "nodeType": "Block",
              "src": "10037:38:44",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13210,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12755,
                      "src": "10047:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 13211,
                      "name": "decimals_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13207,
                      "src": "10059:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10047:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 13213,
                  "nodeType": "ExpressionStatement",
                  "src": "10047:21:44"
                }
              ]
            },
            "documentation": {
              "id": 13205,
              "nodeType": "StructuredDocumentation",
              "src": "9670:312:44",
              "text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
            },
            "id": 13215,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setupDecimals",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13207,
                  "mutability": "mutable",
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13215,
                  "src": "10011:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 13206,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "10011:5:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10010:17:44"
            },
            "returnParameters": {
              "id": 13209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10037:0:44"
            },
            "scope": 13227,
            "src": "9987:88:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 13225,
              "nodeType": "Block",
              "src": "10751:3:44",
              "statements": []
            },
            "documentation": {
              "id": 13216,
              "nodeType": "StructuredDocumentation",
              "src": "10081:576:44",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 13226,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13218,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13226,
                  "src": "10692:12:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10692:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13220,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13226,
                  "src": "10706:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10706:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13222,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13226,
                  "src": "10718:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13221,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10718:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10691:42:44"
            },
            "returnParameters": {
              "id": 13224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10751:0:44"
            },
            "scope": 13227,
            "src": "10662:92:44",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 13228,
        "src": "1312:9444:44"
      }
    ],
    "src": "0:10757:44"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405162000c6238038062000c628339818101604052604081101561003557600080fd5b810190808051604051939291908464010000000082111561005557600080fd5b90830190602082018581111561006a57600080fd5b825164010000000081118282018810171561008457600080fd5b82525081516020918201929091019080838360005b838110156100b1578181015183820152602001610099565b50505050905090810190601f1680156100de5780820380516001836020036101000a031916815260200191505b506040526020018051604051939291908464010000000082111561010157600080fd5b90830190602082018581111561011657600080fd5b825164010000000081118282018810171561013057600080fd5b82525081516020918201929091019080838360005b8381101561015d578181015183820152602001610145565b50505050905090810190601f16801561018a5780820380516001836020036101000a031916815260200191505b50604052505082516101a4915060039060208501906101cd565b5080516101b89060049060208401906101cd565b50506005805460ff1916601217905550610260565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020e57805160ff191683800117855561023b565b8280016001018555821561023b579182015b8281111561023b578251825591602001919060010190610220565b5061024792915061024b565b5090565b5b80821115610247576000815560010161024c565b6109f280620002706000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e91c91131eaa5455d5f6bd50378f09bd55248c1c2aae70e0421c632320e07be664736f6c634300060c0033",
  "bytecodeSha1": "5f752f651d57bcdbb64c8d6e1654bb78df527095",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "12": {},
      "42": {
        "SafeMath.add": {
          "33": [
            953,
            959,
            true
          ]
        },
        "SafeMath.sub": {
          "32": [
            1826,
            1832,
            true
          ]
        }
      },
      "44": {
        "ERC20._approve": {
          "28": [
            9425,
            9444,
            true
          ],
          "29": [
            9503,
            9524,
            true
          ]
        },
        "ERC20._transfer": {
          "30": [
            7107,
            7127,
            true
          ],
          "31": [
            7187,
            7210,
            true
          ]
        }
      },
      "49": {},
      "60": {}
    },
    "statements": {
      "12": {
        "Context._msgSender": {
          "14": [
            637,
            654
          ]
        }
      },
      "42": {
        "SafeMath.add": {
          "26": [
            945,
            991
          ],
          "27": [
            1002,
            1010
          ]
        },
        "SafeMath.sub": {
          "25": [
            1818,
            1847
          ]
        }
      },
      "44": {
        "ERC20._approve": {
          "15": [
            9417,
            9485
          ],
          "16": [
            9495,
            9563
          ],
          "17": [
            9574,
            9610
          ],
          "18": [
            9620,
            9657
          ]
        },
        "ERC20._transfer": {
          "19": [
            7099,
            7169
          ],
          "20": [
            7179,
            7250
          ],
          "21": [
            7261,
            7308
          ],
          "22": [
            7319,
            7410
          ],
          "23": [
            7420,
            7475
          ],
          "24": [
            7485,
            7525
          ]
        },
        "ERC20.allowance": {
          "13": [
            4043,
            4077
          ]
        },
        "ERC20.approve": {
          "1": [
            4321,
            4360
          ],
          "2": [
            4370,
            4381
          ]
        },
        "ERC20.balanceOf": {
          "9": [
            3470,
            3495
          ]
        },
        "ERC20.decimals": {
          "7": [
            3146,
            3162
          ]
        },
        "ERC20.decreaseAllowance": {
          "11": [
            6371,
            6500
          ]
        },
        "ERC20.increaseAllowance": {
          "8": [
            5664,
            5747
          ]
        },
        "ERC20.name": {
          "0": [
            2248,
            2260
          ]
        },
        "ERC20.symbol": {
          "10": [
            2444,
            2458
          ]
        },
        "ERC20.totalSupply": {
          "3": [
            3301,
            3320
          ]
        },
        "ERC20.transfer": {
          "12": [
            3807,
            3849
          ]
        },
        "ERC20.transferFrom": {
          "4": [
            4970,
            5006
          ],
          "5": [
            5016,
            5137
          ],
          "6": [
            5147,
            5158
          ]
        }
      },
      "49": {},
      "60": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC20",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220e91c91131eaa5455d5f6bd50378f09bd55248c1c2aae70e0421c632320e07be664736f6c634300060c0033",
  "deployedSourceMap": "1312:9444:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:81;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4222:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4222:166:44;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3229:98;;;:::i;:::-;;;;;;;;;;;;;;;;4848:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4848:317:44;;;;;;;;;;;;;;;;;:::i;3088:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5560:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5560:215:44;;;;;;;;:::i;3385:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3385:117:44;-1:-1:-1;;;;;3385:117:44;;:::i;2380:85::-;;;:::i;6262:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6262:266:44;;;;;;;;:::i;3705:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3705:172:44;;;;;;;;:::i;3935:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3935:149:44;;;;;;;;;;:::i;2186:81::-;2255:5;2248:12;;;;;;;;-1:-1:-1;;2248:12:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2223:13;;2248:12;;2255:5;;2248:12;;2255:5;2248:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2186:81;:::o;4222:166::-;4305:4;4321:39;4330:12;:10;:12::i;:::-;4344:7;4353:6;4321:8;:39::i;:::-;-1:-1:-1;4377:4:44;4222:166;;;;:::o;3229:98::-;3308:12;;3229:98;:::o;4848:317::-;4954:4;4970:36;4980:6;4988:9;4999:6;4970:9;:36::i;:::-;5016:121;5025:6;5033:12;:10;:12::i;:::-;5047:89;5085:6;5047:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5047:19:44;;;;;;:11;:19;;;;;;5067:12;:10;:12::i;:::-;-1:-1:-1;;;;;5047:33:44;;;;;;;;;;;;-1:-1:-1;5047:33:44;;;:89;:37;:89::i;:::-;5016:8;:121::i;:::-;-1:-1:-1;5154:4:44;4848:317;;;;;:::o;3088:81::-;3153:9;;;;3088:81;:::o;5560:215::-;5648:4;5664:83;5673:12;:10;:12::i;:::-;5687:7;5696:50;5735:10;5696:11;:25;5708:12;:10;:12::i;:::-;-1:-1:-1;;;;;5696:25:44;;;;;;;;;;;;;;;;;-1:-1:-1;5696:25:44;;;:34;;;;;;;;;;;:38;:50::i;3385:117::-;-1:-1:-1;;;;;3477:18:44;3451:7;3477:18;;;;;;;;;;;;3385:117::o;2380:85::-;2451:7;2444:14;;;;;;;;-1:-1:-1;;2444:14:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2419:13;;2444:14;;2451:7;;2444:14;;2451:7;2444:14;;;;;;;;;;;;;;;;;;;;;;;;6262:266;6355:4;6371:129;6380:12;:10;:12::i;:::-;6394:7;6403:96;6442:15;6403:96;;;;;;;;;;;;;;;;;:11;:25;6415:12;:10;:12::i;:::-;-1:-1:-1;;;;;6403:25:44;;;;;;;;;;;;;;;;;-1:-1:-1;6403:25:44;;;:34;;;;;;;;;;;:96;:38;:96::i;3705:172::-;3791:4;3807:42;3817:12;:10;:12::i;:::-;3831:9;3842:6;3807:9;:42::i;3935:149::-;-1:-1:-1;;;;;4050:18:44;;;4024:7;4050:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3935:149::o;557:104:12:-;644:10;557:104;:::o;9324:340:44:-;-1:-1:-1;;;;;9425:19:44;;9417:68;;;;-1:-1:-1;;;9417:68:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9503:21:44;;9495:68;;;;-1:-1:-1;;;9495:68:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9574:18:44;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9625:32;;;;;;;;;;;;;;;;;9324:340;;;:::o;7002:530::-;-1:-1:-1;;;;;7107:20:44;;7099:70;;;;-1:-1:-1;;;7099:70:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7187:23:44;;7179:71;;;;-1:-1:-1;;;7179:71:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:47;7282:6;7290:9;7301:6;7261:20;:47::i;:::-;7339:71;7361:6;7339:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7339:17:44;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;7319:17:44;;;:9;:17;;;;;;;;;;;:91;;;;7443:20;;;;;;;:32;;7468:6;7443:24;:32::i;:::-;-1:-1:-1;;;;;7420:20:44;;;:9;:20;;;;;;;;;;;;:55;;;;7490:35;;;;;;;7420:20;;7490:35;;;;;;;;;;;;;7002:530;;;:::o;1713:187:42:-;1799:7;1834:12;1826:6;;;;1818:29;;;;-1:-1:-1;;;1818:29:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1869:5:42;;;1713:187::o;841:176::-;899:7;930:5;;;953:6;;;;945:46;;;;;-1:-1:-1;;;945:46:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;1009:1;841:176;-1:-1:-1;;;841:176:42:o;10662:92:44:-;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    1312,
    10756
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220E91C SWAP2 SGT 0x1E 0xAA SLOAD SSTORE 0xD5 0xF6 0xBD POP CALLDATACOPY DUP16 MULMOD 0xBD SSTORE 0x24 DUP13 SHR 0x2A 0xAE PUSH17 0xE0421C632320E07BE664736F6C63430006 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "5": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "CALLVALUE",
      "path": "44"
    },
    "6": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "7": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "8": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "12": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "REVERT",
      "path": "44"
    },
    "16": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "17": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "POP",
      "path": "44"
    },
    "18": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "21": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "LT",
      "path": "44"
    },
    "22": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA9"
    },
    "25": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "26": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "29": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "SHR",
      "path": "44"
    },
    "32": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "33": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x39509351"
    },
    "38": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "GT",
      "path": "44"
    },
    "39": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "43": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "44": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x39509351"
    },
    "49": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "50": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1D9"
    },
    "53": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "54": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "55": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x70A08231"
    },
    "60": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "61": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x205"
    },
    "64": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "65": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "66": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x95D89B41"
    },
    "71": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "72": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x22B"
    },
    "75": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "76": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "77": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA457C2D7"
    },
    "82": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "83": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x233"
    },
    "86": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "87": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "88": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xA9059CBB"
    },
    "93": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "94": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x25F"
    },
    "97": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "98": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "99": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0xDD62ED3E"
    },
    "104": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "105": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x28B"
    },
    "108": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "109": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xA9"
    },
    "112": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMP",
      "path": "44"
    },
    "113": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "114": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "115": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x6FDDE03"
    },
    "120": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "121": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xAE"
    },
    "124": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "125": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "126": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x95EA7B3"
    },
    "131": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "132": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x12B"
    },
    "135": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "136": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "137": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x18160DDD"
    },
    "142": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "143": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x16B"
    },
    "146": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "147": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "148": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x23B872DD"
    },
    "153": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "154": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x185"
    },
    "157": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "158": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "159": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH4",
      "path": "44",
      "value": "0x313CE567"
    },
    "164": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "EQ",
      "path": "44"
    },
    "165": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1BB"
    },
    "168": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "169": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "170": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "172": {
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "DUP1",
      "path": "44"
    },
    "173": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1312,
        10756
      ],
      "op": "REVERT",
      "path": "44"
    },
    "174": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "175": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "178": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2B9"
    },
    "181": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMP",
      "path": "44"
    },
    "182": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "183": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "185": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "186": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "187": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "189": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "190": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP3",
      "path": "44"
    },
    "191": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "192": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "193": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "194": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP2",
      "path": "44"
    },
    "195": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "196": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "197": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "198": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "199": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "200": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "201": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "202": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "203": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "204": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "205": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "206": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "207": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "208": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP6",
      "path": "44"
    },
    "209": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "210": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "211": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "212": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "214": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "216": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "217": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "218": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP2",
      "path": "44"
    },
    "219": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "LT",
      "path": "44"
    },
    "220": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xF0"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "225": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP2",
      "path": "44"
    },
    "226": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP2",
      "path": "44"
    },
    "227": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "230": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP3",
      "path": "44"
    },
    "231": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "232": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "233": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "235": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "236": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xD8"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMP",
      "path": "44"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "242": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "243": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "244": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "245": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "246": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "247": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "248": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP2",
      "path": "44"
    },
    "249": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "250": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "251": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "253": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "AND",
      "path": "44"
    },
    "254": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "255": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "256": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x11D"
    },
    "259": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "260": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "261": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP3",
      "path": "44"
    },
    "262": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SUB",
      "path": "44"
    },
    "263": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "264": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "265": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "267": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP4",
      "path": "44"
    },
    "268": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "270": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SUB",
      "path": "44"
    },
    "271": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x100"
    },
    "274": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "EXP",
      "path": "44"
    },
    "275": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SUB",
      "path": "44"
    },
    "276": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "NOT",
      "path": "44"
    },
    "277": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "AND",
      "path": "44"
    },
    "278": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP2",
      "path": "44"
    },
    "279": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "280": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "282": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "ADD",
      "path": "44"
    },
    "283": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "284": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "285": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "286": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "287": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "288": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "289": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "290": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "POP",
      "path": "44"
    },
    "291": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "293": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "294": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "DUP1",
      "path": "44"
    },
    "295": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "296": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SUB",
      "path": "44"
    },
    "297": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "298": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "RETURN",
      "path": "44"
    },
    "299": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "300": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x157"
    },
    "303": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "305": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP1",
      "path": "44"
    },
    "306": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "307": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SUB",
      "path": "44"
    },
    "308": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "310": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP2",
      "path": "44"
    },
    "311": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "LT",
      "path": "44"
    },
    "312": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "313": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x141"
    },
    "316": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "317": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "319": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP1",
      "path": "44"
    },
    "320": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "REVERT",
      "path": "44"
    },
    "321": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP2",
      "path": "44"
    },
    "332": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "333": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "AND",
      "path": "44"
    },
    "334": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "335": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "337": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "ADD",
      "path": "44"
    },
    "338": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "339": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x34F"
    },
    "342": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMP",
      "path": "44"
    },
    "343": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "344": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "346": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP1",
      "path": "44"
    },
    "347": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "348": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "349": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "350": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "351": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP3",
      "path": "44"
    },
    "352": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "353": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "354": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "355": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "DUP2",
      "path": "44"
    },
    "356": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "357": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SUB",
      "path": "44"
    },
    "358": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "360": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "ADD",
      "path": "44"
    },
    "361": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "362": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "RETURN",
      "path": "44"
    },
    "363": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "364": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x173"
    },
    "367": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x36C"
    },
    "370": {
      "fn": "ERC20.totalSupply",
      "jump": "i",
      "offset": [
        3229,
        3327
      ],
      "op": "JUMP",
      "path": "44"
    },
    "371": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "372": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "374": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "DUP1",
      "path": "44"
    },
    "375": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "376": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "377": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "DUP3",
      "path": "44"
    },
    "378": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "379": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "380": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "381": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "DUP2",
      "path": "44"
    },
    "382": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "383": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "SUB",
      "path": "44"
    },
    "384": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "386": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "ADD",
      "path": "44"
    },
    "387": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "388": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "RETURN",
      "path": "44"
    },
    "389": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "390": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x157"
    },
    "393": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "395": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "DUP1",
      "path": "44"
    },
    "396": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "397": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SUB",
      "path": "44"
    },
    "398": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "400": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "401": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "LT",
      "path": "44"
    },
    "402": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "403": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x19B"
    },
    "406": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "407": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "409": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "DUP1",
      "path": "44"
    },
    "410": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "REVERT",
      "path": "44"
    },
    "411": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "412": {
      "op": "POP"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "op": "SUB"
    },
    "421": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "422": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "423": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "424": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "AND",
      "path": "44"
    },
    "425": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "426": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "428": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "DUP2",
      "path": "44"
    },
    "429": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "ADD",
      "path": "44"
    },
    "430": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "431": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "432": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "433": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "AND",
      "path": "44"
    },
    "434": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "435": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "437": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "ADD",
      "path": "44"
    },
    "438": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "439": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x372"
    },
    "442": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4848,
        5165
      ],
      "op": "JUMP",
      "path": "44"
    },
    "443": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "444": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1C3"
    },
    "447": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3F9"
    },
    "450": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        3088,
        3169
      ],
      "op": "JUMP",
      "path": "44"
    },
    "451": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "452": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "454": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "DUP1",
      "path": "44"
    },
    "455": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "456": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xFF"
    },
    "458": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "459": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "460": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "AND",
      "path": "44"
    },
    "461": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "DUP3",
      "path": "44"
    },
    "462": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "463": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "464": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "465": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "DUP2",
      "path": "44"
    },
    "466": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "467": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SUB",
      "path": "44"
    },
    "468": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "470": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "ADD",
      "path": "44"
    },
    "471": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "472": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "RETURN",
      "path": "44"
    },
    "473": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "474": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x157"
    },
    "477": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "479": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "DUP1",
      "path": "44"
    },
    "480": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "481": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "SUB",
      "path": "44"
    },
    "482": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "484": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "DUP2",
      "path": "44"
    },
    "485": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "LT",
      "path": "44"
    },
    "486": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "487": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x1EF"
    },
    "490": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "491": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "493": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "DUP1",
      "path": "44"
    },
    "494": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "REVERT",
      "path": "44"
    },
    "495": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "496": {
      "op": "POP"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "503": {
      "op": "SHL"
    },
    "504": {
      "op": "SUB"
    },
    "505": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "DUP2",
      "path": "44"
    },
    "506": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "507": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "AND",
      "path": "44"
    },
    "508": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "509": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "511": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "ADD",
      "path": "44"
    },
    "512": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "513": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x402"
    },
    "516": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5560,
        5775
      ],
      "op": "JUMP",
      "path": "44"
    },
    "517": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "518": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x173"
    },
    "521": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "523": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "DUP1",
      "path": "44"
    },
    "524": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "525": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "SUB",
      "path": "44"
    },
    "526": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "528": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "DUP2",
      "path": "44"
    },
    "529": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "LT",
      "path": "44"
    },
    "530": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "531": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x21B"
    },
    "534": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "535": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "537": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "DUP1",
      "path": "44"
    },
    "538": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "REVERT",
      "path": "44"
    },
    "539": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "540": {
      "op": "POP"
    },
    "541": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "548": {
      "op": "SHL"
    },
    "549": {
      "op": "SUB"
    },
    "550": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "AND",
      "path": "44"
    },
    "551": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x450"
    },
    "554": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3385,
        3502
      ],
      "op": "JUMP",
      "path": "44"
    },
    "555": {
      "fn": "ERC20.symbol",
      "offset": [
        2380,
        2465
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "556": {
      "fn": "ERC20.symbol",
      "offset": [
        2380,
        2465
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0xB6"
    },
    "559": {
      "fn": "ERC20.symbol",
      "offset": [
        2380,
        2465
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x46B"
    },
    "562": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2380,
        2465
      ],
      "op": "JUMP",
      "path": "44"
    },
    "563": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "564": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x157"
    },
    "567": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "569": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "DUP1",
      "path": "44"
    },
    "570": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "571": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "SUB",
      "path": "44"
    },
    "572": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "574": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "DUP2",
      "path": "44"
    },
    "575": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "LT",
      "path": "44"
    },
    "576": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "577": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x249"
    },
    "580": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "581": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "583": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "DUP1",
      "path": "44"
    },
    "584": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "REVERT",
      "path": "44"
    },
    "585": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "586": {
      "op": "POP"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "SUB"
    },
    "595": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "DUP2",
      "path": "44"
    },
    "596": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "597": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "AND",
      "path": "44"
    },
    "598": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "599": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "601": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "ADD",
      "path": "44"
    },
    "602": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "603": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4CC"
    },
    "606": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6262,
        6528
      ],
      "op": "JUMP",
      "path": "44"
    },
    "607": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "608": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x157"
    },
    "611": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "613": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "DUP1",
      "path": "44"
    },
    "614": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "615": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "SUB",
      "path": "44"
    },
    "616": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "618": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "DUP2",
      "path": "44"
    },
    "619": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "LT",
      "path": "44"
    },
    "620": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "621": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x275"
    },
    "624": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "625": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "627": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "DUP1",
      "path": "44"
    },
    "628": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "REVERT",
      "path": "44"
    },
    "629": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "630": {
      "op": "POP"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "637": {
      "op": "SHL"
    },
    "638": {
      "op": "SUB"
    },
    "639": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "DUP2",
      "path": "44"
    },
    "640": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "641": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "AND",
      "path": "44"
    },
    "642": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "643": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "645": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "ADD",
      "path": "44"
    },
    "646": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "647": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x534"
    },
    "650": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3705,
        3877
      ],
      "op": "JUMP",
      "path": "44"
    },
    "651": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "652": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x173"
    },
    "655": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "657": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "DUP1",
      "path": "44"
    },
    "658": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "CALLDATASIZE",
      "path": "44"
    },
    "659": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "SUB",
      "path": "44"
    },
    "660": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "662": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "DUP2",
      "path": "44"
    },
    "663": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "LT",
      "path": "44"
    },
    "664": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "665": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x2A1"
    },
    "668": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "669": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "671": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "DUP1",
      "path": "44"
    },
    "672": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "REVERT",
      "path": "44"
    },
    "673": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "SHL"
    },
    "682": {
      "op": "SUB"
    },
    "683": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "DUP2",
      "path": "44"
    },
    "684": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "685": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "DUP2",
      "path": "44"
    },
    "686": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "AND",
      "path": "44"
    },
    "687": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "688": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "690": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "ADD",
      "path": "44"
    },
    "691": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "CALLDATALOAD",
      "path": "44"
    },
    "692": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "AND",
      "path": "44"
    },
    "693": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x548"
    },
    "696": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3935,
        4084
      ],
      "op": "JUMP",
      "path": "44"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "698": {
      "fn": "ERC20.name",
      "offset": [
        2255,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 0,
      "value": "0x3"
    },
    "700": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP1",
      "path": "44"
    },
    "701": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "702": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP1",
      "path": "44"
    },
    "705": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "706": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "708": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "710": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "714": {
      "op": "NOT"
    },
    "715": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x100"
    },
    "718": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "720": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP9",
      "path": "44"
    },
    "721": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "AND",
      "path": "44"
    },
    "722": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "723": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MUL",
      "path": "44"
    },
    "724": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "725": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "726": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "727": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "AND",
      "path": "44"
    },
    "728": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "729": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "730": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "731": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DIV",
      "path": "44"
    },
    "732": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "733": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP5",
      "path": "44"
    },
    "734": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "735": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP2",
      "path": "44"
    },
    "736": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "737": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DIV",
      "path": "44"
    },
    "738": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP2",
      "path": "44"
    },
    "739": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MUL",
      "path": "44"
    },
    "740": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "741": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "742": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP2",
      "path": "44"
    },
    "743": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "744": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "745": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "746": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "747": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "748": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP2",
      "path": "44"
    },
    "749": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "750": {
      "fn": "ERC20.name",
      "offset": [
        2223,
        2236
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "752": {
      "fn": "ERC20.name",
      "offset": [
        2223,
        2236
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "753": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "754": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "755": {
      "fn": "ERC20.name",
      "offset": [
        2255,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "756": {
      "fn": "ERC20.name",
      "offset": [
        2255,
        2260
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "757": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP4",
      "path": "44"
    },
    "758": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "759": {
      "fn": "ERC20.name",
      "offset": [
        2255,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "760": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "761": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP1",
      "path": "44"
    },
    "762": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "763": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x345"
    },
    "766": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "767": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP1",
      "path": "44"
    },
    "768": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "770": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "LT",
      "path": "44"
    },
    "771": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x31A"
    },
    "774": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "775": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x100"
    },
    "778": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP1",
      "path": "44"
    },
    "779": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP4",
      "path": "44"
    },
    "780": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "781": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DIV",
      "path": "44"
    },
    "782": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MUL",
      "path": "44"
    },
    "783": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP4",
      "path": "44"
    },
    "784": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "785": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "786": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "788": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "789": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "790": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x345"
    },
    "793": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMP",
      "path": "44"
    },
    "794": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "795": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "796": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "797": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "798": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "799": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "801": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "802": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "804": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "806": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "807": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "808": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "809": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP2",
      "path": "44"
    },
    "810": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "811": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP2",
      "path": "44"
    },
    "812": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "813": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "814": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "816": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "817": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "818": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "820": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "821": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP1",
      "path": "44"
    },
    "822": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP4",
      "path": "44"
    },
    "823": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "GT",
      "path": "44"
    },
    "824": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x328"
    },
    "827": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "828": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "829": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "830": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SUB",
      "path": "44"
    },
    "831": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "833": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "AND",
      "path": "44"
    },
    "834": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "DUP3",
      "path": "44"
    },
    "835": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "ADD",
      "path": "44"
    },
    "836": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "837": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "838": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "POP",
      "path": "44"
    },
    "839": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "POP",
      "path": "44"
    },
    "840": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "POP",
      "path": "44"
    },
    "841": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "POP",
      "path": "44"
    },
    "842": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "POP",
      "path": "44"
    },
    "843": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "844": {
      "fn": "ERC20.name",
      "offset": [
        2248,
        2260
      ],
      "op": "POP",
      "path": "44"
    },
    "845": {
      "fn": "ERC20.name",
      "offset": [
        2186,
        2267
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "846": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2186,
        2267
      ],
      "op": "JUMP",
      "path": "44"
    },
    "847": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "848": {
      "fn": "ERC20.approve",
      "offset": [
        4305,
        4309
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "850": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4360
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 1,
      "value": "0x363"
    },
    "853": {
      "fn": "ERC20.approve",
      "offset": [
        4330,
        4342
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x35C"
    },
    "856": {
      "fn": "ERC20.approve",
      "offset": [
        4330,
        4340
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "859": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4330,
        4342
      ],
      "op": "JUMP",
      "path": "44"
    },
    "860": {
      "fn": "ERC20.approve",
      "offset": [
        4330,
        4342
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "861": {
      "fn": "ERC20.approve",
      "offset": [
        4344,
        4351
      ],
      "op": "DUP5",
      "path": "44"
    },
    "862": {
      "fn": "ERC20.approve",
      "offset": [
        4353,
        4359
      ],
      "op": "DUP5",
      "path": "44"
    },
    "863": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4329
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x577"
    },
    "866": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4321,
        4360
      ],
      "op": "JUMP",
      "path": "44"
    },
    "867": {
      "fn": "ERC20.approve",
      "offset": [
        4321,
        4360
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "868": {
      "op": "POP"
    },
    "869": {
      "fn": "ERC20.approve",
      "offset": [
        4377,
        4381
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 2,
      "value": "0x1"
    },
    "871": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "872": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "873": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "POP",
      "path": "44"
    },
    "874": {
      "fn": "ERC20.approve",
      "offset": [
        4222,
        4388
      ],
      "op": "POP",
      "path": "44"
    },
    "875": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4222,
        4388
      ],
      "op": "JUMP",
      "path": "44"
    },
    "876": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "877": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3308,
        3320
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 3,
      "value": "0x2"
    },
    "879": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3308,
        3320
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "880": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3229,
        3327
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "881": {
      "fn": "ERC20.totalSupply",
      "jump": "o",
      "offset": [
        3229,
        3327
      ],
      "op": "JUMP",
      "path": "44"
    },
    "882": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "883": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4954,
        4958
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "885": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4970,
        5006
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 4,
      "value": "0x37F"
    },
    "888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4980,
        4986
      ],
      "op": "DUP5",
      "path": "44"
    },
    "889": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4988,
        4997
      ],
      "op": "DUP5",
      "path": "44"
    },
    "890": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4999,
        5005
      ],
      "op": "DUP5",
      "path": "44"
    },
    "891": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4970,
        4979
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x663"
    },
    "894": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        4970,
        5006
      ],
      "op": "JUMP",
      "path": "44"
    },
    "895": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4970,
        5006
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "896": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5016,
        5137
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 5,
      "value": "0x3EF"
    },
    "899": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5025,
        5031
      ],
      "op": "DUP5",
      "path": "44"
    },
    "900": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5033,
        5045
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x38B"
    },
    "903": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5033,
        5043
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "906": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5033,
        5045
      ],
      "op": "JUMP",
      "path": "44"
    },
    "907": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5033,
        5045
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "908": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3EA"
    },
    "911": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5085,
        5091
      ],
      "op": "DUP6",
      "path": "44"
    },
    "912": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "914": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "915": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "DUP1",
      "path": "44"
    },
    "916": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "918": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "ADD",
      "path": "44"
    },
    "919": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "921": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "922": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "DUP1",
      "path": "44"
    },
    "923": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x28"
    },
    "925": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "DUP2",
      "path": "44"
    },
    "926": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "927": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "929": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "ADD",
      "path": "44"
    },
    "930": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x927"
    },
    "933": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x28"
    },
    "935": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "936": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "939": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "941": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "943": {
      "op": "SHL"
    },
    "944": {
      "op": "SUB"
    },
    "945": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "DUP11",
      "path": "44"
    },
    "946": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "AND",
      "path": "44"
    },
    "947": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "949": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "950": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "DUP2",
      "path": "44"
    },
    "951": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "952": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5058
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "954": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "956": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "957": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "959": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "DUP2",
      "path": "44"
    },
    "960": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "961": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5066
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "962": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5067,
        5079
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3C9"
    },
    "965": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5067,
        5077
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "968": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5067,
        5079
      ],
      "op": "JUMP",
      "path": "44"
    },
    "969": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5067,
        5079
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "AND",
      "path": "44"
    },
    "979": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "DUP2",
      "path": "44"
    },
    "980": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "981": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "983": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "DUP2",
      "path": "44"
    },
    "984": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "ADD",
      "path": "44"
    },
    "985": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "986": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "987": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "988": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "989": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "991": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "ADD",
      "path": "44"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "994": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "995": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "996": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5080
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "997": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "998": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5084
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7BE"
    },
    "1001": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5047,
        5136
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1002": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5047,
        5136
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1003": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5016,
        5024
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x577"
    },
    "1006": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5016,
        5137
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1007": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5016,
        5137
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5154,
        5158
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 6,
      "value": "0x1"
    },
    "1011": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1012": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1013": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "POP",
      "path": "44"
    },
    "1014": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "POP",
      "path": "44"
    },
    "1015": {
      "fn": "ERC20.transferFrom",
      "offset": [
        4848,
        5165
      ],
      "op": "POP",
      "path": "44"
    },
    "1016": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        4848,
        5165
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1017": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1018": {
      "fn": "ERC20.decimals",
      "offset": [
        3153,
        3162
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 7,
      "value": "0x5"
    },
    "1020": {
      "fn": "ERC20.decimals",
      "offset": [
        3153,
        3162
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1021": {
      "fn": "ERC20.decimals",
      "offset": [
        3153,
        3162
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0xFF"
    },
    "1023": {
      "fn": "ERC20.decimals",
      "offset": [
        3153,
        3162
      ],
      "op": "AND",
      "path": "44"
    },
    "1024": {
      "fn": "ERC20.decimals",
      "offset": [
        3088,
        3169
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1025": {
      "fn": "ERC20.decimals",
      "jump": "o",
      "offset": [
        3088,
        3169
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1026": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5560,
        5775
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1027": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5648,
        5652
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1029": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5664,
        5747
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 8,
      "value": "0x363"
    },
    "1032": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5673,
        5685
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x40F"
    },
    "1035": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5673,
        5683
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "1038": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5673,
        5685
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1039": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5673,
        5685
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1040": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5687,
        5694
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1041": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5746
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3EA"
    },
    "1044": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5735,
        5745
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1045": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5707
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1047": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1049": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5708,
        5720
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x420"
    },
    "1052": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5708,
        5718
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "1055": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5708,
        5720
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1056": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5708,
        5720
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1066": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1067": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "AND",
      "path": "44"
    },
    "1068": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1069": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1070": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1072": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1073": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1074": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "ADD",
      "path": "44"
    },
    "1075": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1076": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1077": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1078": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1079": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1081": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1082": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1083": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "ADD",
      "path": "44"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1086": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1087": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1088": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5721
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1089": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1090": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "DUP13",
      "path": "44"
    },
    "1091": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "AND",
      "path": "44"
    },
    "1092": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1093": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1094": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1095": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1096": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1097": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1098": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1099": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5730
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1100": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5696,
        5734
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x855"
    },
    "1103": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5696,
        5746
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1104": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3385,
        3502
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1111": {
      "op": "SHL"
    },
    "1112": {
      "op": "SUB"
    },
    "1113": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "AND",
      "path": "44",
      "statement": 9
    },
    "1114": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3451,
        3458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1116": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1117": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1118": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1119": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1121": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1122": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1123": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1124": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1126": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1127": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1128": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1129": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3477,
        3495
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1130": {
      "fn": "ERC20.balanceOf",
      "jump": "o",
      "offset": [
        3385,
        3502
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1131": {
      "fn": "ERC20.symbol",
      "offset": [
        2380,
        2465
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1132": {
      "fn": "ERC20.symbol",
      "offset": [
        2451,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "statement": 10,
      "value": "0x4"
    },
    "1134": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1135": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1136": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1138": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1139": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1140": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1142": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1144": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x2"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1148": {
      "op": "NOT"
    },
    "1149": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x100"
    },
    "1152": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1154": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP9",
      "path": "44"
    },
    "1155": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "AND",
      "path": "44"
    },
    "1156": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1157": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MUL",
      "path": "44"
    },
    "1158": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ADD",
      "path": "44"
    },
    "1159": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1160": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP6",
      "path": "44"
    },
    "1161": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "AND",
      "path": "44"
    },
    "1162": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1163": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1164": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1165": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DIV",
      "path": "44"
    },
    "1166": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1167": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1168": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ADD",
      "path": "44"
    },
    "1169": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1170": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1171": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DIV",
      "path": "44"
    },
    "1172": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1173": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MUL",
      "path": "44"
    },
    "1174": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1175": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ADD",
      "path": "44"
    },
    "1176": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1177": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ADD",
      "path": "44"
    },
    "1178": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1179": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1180": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1181": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1182": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1183": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1184": {
      "fn": "ERC20.symbol",
      "offset": [
        2419,
        2432
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1186": {
      "fn": "ERC20.symbol",
      "offset": [
        2419,
        2432
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1187": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1188": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1189": {
      "fn": "ERC20.symbol",
      "offset": [
        2451,
        2458
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1190": {
      "fn": "ERC20.symbol",
      "offset": [
        2451,
        2458
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1191": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1192": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ADD",
      "path": "44"
    },
    "1193": {
      "fn": "ERC20.symbol",
      "offset": [
        2451,
        2458
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1194": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1195": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1196": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ISZERO",
      "path": "44"
    },
    "1197": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x345"
    },
    "1200": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1201": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1202": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1F"
    },
    "1204": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "LT",
      "path": "44"
    },
    "1205": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x31A"
    },
    "1208": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1209": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x100"
    },
    "1212": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1213": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1214": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1215": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DIV",
      "path": "44"
    },
    "1216": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MUL",
      "path": "44"
    },
    "1217": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1218": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1219": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1220": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1222": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "ADD",
      "path": "44"
    },
    "1223": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1224": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x345"
    },
    "1227": {
      "fn": "ERC20.symbol",
      "offset": [
        2444,
        2458
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1228": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6262,
        6528
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1229": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6355,
        6359
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1231": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6371,
        6500
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 11,
      "value": "0x363"
    },
    "1234": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6380,
        6392
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x4D9"
    },
    "1237": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6380,
        6390
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "1240": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6380,
        6392
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1241": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6380,
        6392
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1242": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6394,
        6401
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1243": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x3EA"
    },
    "1246": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6442,
        6457
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1247": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1249": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1250": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1251": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1253": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "ADD",
      "path": "44"
    },
    "1254": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1256": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1257": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1258": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x25"
    },
    "1260": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1261": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1262": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1264": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "ADD",
      "path": "44"
    },
    "1265": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x998"
    },
    "1268": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x25"
    },
    "1270": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1271": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "1272": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6414
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1276": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6415,
        6427
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x503"
    },
    "1279": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6415,
        6425
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "1282": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6415,
        6427
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1283": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6415,
        6427
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1288": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1290": {
      "op": "SHL"
    },
    "1291": {
      "op": "SUB"
    },
    "1292": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1294": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "AND",
      "path": "44"
    },
    "1295": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1296": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1297": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1299": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1300": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1301": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "ADD",
      "path": "44"
    },
    "1302": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1303": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1304": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1305": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1306": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1308": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1309": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1310": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "ADD",
      "path": "44"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1313": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1314": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1315": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6428
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1316": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1317": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "DUP14",
      "path": "44"
    },
    "1318": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "AND",
      "path": "44"
    },
    "1319": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1320": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1321": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1322": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1323": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1324": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1325": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1326": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6437
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1327": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6499
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1328": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6403,
        6441
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7BE"
    },
    "1331": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6403,
        6499
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1332": {
      "fn": "ERC20.transfer",
      "offset": [
        3705,
        3877
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1333": {
      "fn": "ERC20.transfer",
      "offset": [
        3791,
        3795
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1335": {
      "fn": "ERC20.transfer",
      "offset": [
        3807,
        3849
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 12,
      "value": "0x363"
    },
    "1338": {
      "fn": "ERC20.transfer",
      "offset": [
        3817,
        3829
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x541"
    },
    "1341": {
      "fn": "ERC20.transfer",
      "offset": [
        3817,
        3827
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x573"
    },
    "1344": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3817,
        3829
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1345": {
      "fn": "ERC20.transfer",
      "offset": [
        3817,
        3829
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1346": {
      "fn": "ERC20.transfer",
      "offset": [
        3831,
        3840
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1347": {
      "fn": "ERC20.transfer",
      "offset": [
        3842,
        3848
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1348": {
      "fn": "ERC20.transfer",
      "offset": [
        3807,
        3816
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x663"
    },
    "1351": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3807,
        3849
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1352": {
      "fn": "ERC20.allowance",
      "offset": [
        3935,
        4084
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "SUB"
    },
    "1361": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "SWAP2",
      "path": "44",
      "statement": 13
    },
    "1362": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1363": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "AND",
      "path": "44"
    },
    "1364": {
      "fn": "ERC20.allowance",
      "offset": [
        4024,
        4031
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1366": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1367": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1368": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1369": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4061
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1371": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1373": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1374": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1375": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1376": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1378": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1379": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1380": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4068
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1381": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1382": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1383": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1384": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "AND",
      "path": "44"
    },
    "1385": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1386": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1387": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1388": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1389": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1390": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1391": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1392": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1393": {
      "fn": "ERC20.allowance",
      "offset": [
        4050,
        4077
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1394": {
      "fn": "ERC20.allowance",
      "jump": "o",
      "offset": [
        3935,
        4084
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1395": {
      "fn": "Context._msgSender",
      "offset": [
        557,
        661
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1396": {
      "fn": "Context._msgSender",
      "offset": [
        644,
        654
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 14
    },
    "1397": {
      "fn": "Context._msgSender",
      "offset": [
        557,
        661
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "1398": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        557,
        661
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1399": {
      "fn": "ERC20._approve",
      "offset": [
        9324,
        9664
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "op": "SUB"
    },
    "1408": {
      "fn": "ERC20._approve",
      "offset": [
        9425,
        9444
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 15
    },
    "1409": {
      "branch": 28,
      "fn": "ERC20._approve",
      "offset": [
        9425,
        9444
      ],
      "op": "AND",
      "path": "44"
    },
    "1410": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x5BC"
    },
    "1413": {
      "branch": 28,
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1414": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1416": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1417": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1423": {
      "op": "SHL"
    },
    "1424": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1425": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1426": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1428": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "ADD",
      "path": "44"
    },
    "1429": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1430": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1431": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1433": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "ADD",
      "path": "44"
    },
    "1434": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1435": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1436": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "SUB",
      "path": "44"
    },
    "1437": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1438": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1439": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x24"
    },
    "1441": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1442": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1443": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1445": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "ADD",
      "path": "44"
    },
    "1446": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1447": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x974"
    },
    "1450": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x24"
    },
    "1452": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1453": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "1454": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1456": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "ADD",
      "path": "44"
    },
    "1457": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1458": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "POP",
      "path": "44"
    },
    "1459": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "POP",
      "path": "44"
    },
    "1460": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1462": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1463": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1464": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1465": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "SUB",
      "path": "44"
    },
    "1466": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1467": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1468": {
      "fn": "ERC20._approve",
      "offset": [
        9417,
        9485
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1475": {
      "op": "SHL"
    },
    "1476": {
      "op": "SUB"
    },
    "1477": {
      "fn": "ERC20._approve",
      "offset": [
        9503,
        9524
      ],
      "op": "DUP3",
      "path": "44",
      "statement": 16
    },
    "1478": {
      "branch": 29,
      "fn": "ERC20._approve",
      "offset": [
        9503,
        9524
      ],
      "op": "AND",
      "path": "44"
    },
    "1479": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x601"
    },
    "1482": {
      "branch": 29,
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1483": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1485": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1492": {
      "op": "SHL"
    },
    "1493": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1494": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1495": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1497": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "ADD",
      "path": "44"
    },
    "1498": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1499": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1500": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1502": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "ADD",
      "path": "44"
    },
    "1503": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1504": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1505": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "SUB",
      "path": "44"
    },
    "1506": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1507": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1508": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x22"
    },
    "1510": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1511": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1512": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1514": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "ADD",
      "path": "44"
    },
    "1515": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1516": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8DF"
    },
    "1519": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x22"
    },
    "1521": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1522": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "1523": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1525": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "ADD",
      "path": "44"
    },
    "1526": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1527": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "POP",
      "path": "44"
    },
    "1528": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "POP",
      "path": "44"
    },
    "1529": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1531": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1532": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1533": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1534": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "SUB",
      "path": "44"
    },
    "1535": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1536": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1537": {
      "fn": "ERC20._approve",
      "offset": [
        9495,
        9563
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1544": {
      "op": "SHL"
    },
    "1545": {
      "op": "SUB"
    },
    "1546": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 17
    },
    "1547": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1548": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "AND",
      "path": "44"
    },
    "1549": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1551": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1552": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1553": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1554": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9585
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x1"
    },
    "1556": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1558": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1559": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1560": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1561": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1563": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1564": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1565": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9592
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1566": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1567": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1568": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "AND",
      "path": "44"
    },
    "1569": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1570": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1571": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1572": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1573": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1574": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1575": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1576": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1577": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1578": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9601
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1579": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9610
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1580": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9610
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1581": {
      "fn": "ERC20._approve",
      "offset": [
        9574,
        9610
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1582": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "DUP2",
      "path": "44",
      "statement": 18
    },
    "1583": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1584": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1585": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1586": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1587": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1588": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1589": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1622": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1623": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1624": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1625": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SUB",
      "path": "44"
    },
    "1626": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1627": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1628": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "ADD",
      "path": "44"
    },
    "1629": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1630": {
      "fn": "ERC20._approve",
      "offset": [
        9625,
        9657
      ],
      "op": "LOG3",
      "path": "44"
    },
    "1631": {
      "fn": "ERC20._approve",
      "offset": [
        9324,
        9664
      ],
      "op": "POP",
      "path": "44"
    },
    "1632": {
      "fn": "ERC20._approve",
      "offset": [
        9324,
        9664
      ],
      "op": "POP",
      "path": "44"
    },
    "1633": {
      "fn": "ERC20._approve",
      "offset": [
        9324,
        9664
      ],
      "op": "POP",
      "path": "44"
    },
    "1634": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9324,
        9664
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1635": {
      "fn": "ERC20._transfer",
      "offset": [
        7002,
        7532
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1642": {
      "op": "SHL"
    },
    "1643": {
      "op": "SUB"
    },
    "1644": {
      "fn": "ERC20._transfer",
      "offset": [
        7107,
        7127
      ],
      "op": "DUP4",
      "path": "44",
      "statement": 19
    },
    "1645": {
      "branch": 30,
      "fn": "ERC20._transfer",
      "offset": [
        7107,
        7127
      ],
      "op": "AND",
      "path": "44"
    },
    "1646": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6A8"
    },
    "1649": {
      "branch": 30,
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1650": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1652": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1659": {
      "op": "SHL"
    },
    "1660": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1661": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1662": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1664": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "ADD",
      "path": "44"
    },
    "1665": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1666": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1667": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1669": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "ADD",
      "path": "44"
    },
    "1670": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1671": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1672": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "SUB",
      "path": "44"
    },
    "1673": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1674": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1675": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x25"
    },
    "1677": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1678": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1679": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1681": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "ADD",
      "path": "44"
    },
    "1682": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1683": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x94F"
    },
    "1686": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x25"
    },
    "1688": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1689": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "1690": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1692": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "ADD",
      "path": "44"
    },
    "1693": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1694": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "POP",
      "path": "44"
    },
    "1695": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "POP",
      "path": "44"
    },
    "1696": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1698": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1699": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1700": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1701": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "SUB",
      "path": "44"
    },
    "1702": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1703": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1704": {
      "fn": "ERC20._transfer",
      "offset": [
        7099,
        7169
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "ERC20._transfer",
      "offset": [
        7187,
        7210
      ],
      "op": "DUP3",
      "path": "44",
      "statement": 20
    },
    "1714": {
      "branch": 31,
      "fn": "ERC20._transfer",
      "offset": [
        7187,
        7210
      ],
      "op": "AND",
      "path": "44"
    },
    "1715": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x6ED"
    },
    "1718": {
      "branch": 31,
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "JUMPI",
      "path": "44"
    },
    "1719": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1721": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1728": {
      "op": "SHL"
    },
    "1729": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1730": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1731": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x4"
    },
    "1733": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "ADD",
      "path": "44"
    },
    "1734": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1735": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1736": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1738": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "ADD",
      "path": "44"
    },
    "1739": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1740": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1741": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "SUB",
      "path": "44"
    },
    "1742": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1743": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1744": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x23"
    },
    "1746": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1747": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1748": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1750": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "ADD",
      "path": "44"
    },
    "1751": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1752": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8BC"
    },
    "1755": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x23"
    },
    "1757": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1758": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "1759": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1761": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "ADD",
      "path": "44"
    },
    "1762": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1763": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "POP",
      "path": "44"
    },
    "1764": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "POP",
      "path": "44"
    },
    "1765": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1767": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1768": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1769": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1770": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "SUB",
      "path": "44"
    },
    "1771": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1772": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "REVERT",
      "path": "44"
    },
    "1773": {
      "fn": "ERC20._transfer",
      "offset": [
        7179,
        7250
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1774": {
      "fn": "ERC20._transfer",
      "offset": [
        7261,
        7308
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 21,
      "value": "0x6F8"
    },
    "1777": {
      "fn": "ERC20._transfer",
      "offset": [
        7282,
        7288
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1778": {
      "fn": "ERC20._transfer",
      "offset": [
        7290,
        7299
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1779": {
      "fn": "ERC20._transfer",
      "offset": [
        7301,
        7307
      ],
      "op": "DUP4",
      "path": "44"
    },
    "1780": {
      "fn": "ERC20._transfer",
      "offset": [
        7261,
        7281
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x8B6"
    },
    "1783": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7261,
        7308
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1784": {
      "fn": "ERC20._transfer",
      "offset": [
        7261,
        7308
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1785": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH2",
      "path": "44",
      "statement": 22,
      "value": "0x735"
    },
    "1788": {
      "fn": "ERC20._transfer",
      "offset": [
        7361,
        7367
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1789": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1791": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1792": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1793": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x60"
    },
    "1795": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "ADD",
      "path": "44"
    },
    "1796": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1799": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1800": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x26"
    },
    "1802": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1803": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1804": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1806": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "ADD",
      "path": "44"
    },
    "1807": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x901"
    },
    "1810": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x26"
    },
    "1812": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1813": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "CODECOPY",
      "path": "44"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1820": {
      "op": "SHL"
    },
    "1821": {
      "op": "SUB"
    },
    "1822": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "DUP7",
      "path": "44"
    },
    "1823": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "AND",
      "path": "44"
    },
    "1824": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7348
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1826": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1827": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1828": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1829": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1831": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1832": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1833": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1834": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1836": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1837": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1838": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1839": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7356
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1840": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1841": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7360
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x7BE"
    },
    "1844": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7339,
        7410
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1845": {
      "fn": "ERC20._transfer",
      "offset": [
        7339,
        7410
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "SUB"
    },
    "1854": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1855": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1856": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "AND",
      "path": "44"
    },
    "1857": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7328
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1859": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1860": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1861": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1862": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1864": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1865": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1866": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1867": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1869": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1870": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1871": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7336
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1872": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7410
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1873": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7410
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1874": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7410
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1875": {
      "fn": "ERC20._transfer",
      "offset": [
        7319,
        7410
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1876": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "SWAP1",
      "path": "44",
      "statement": 23
    },
    "1877": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1878": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "AND",
      "path": "44"
    },
    "1879": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1880": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1881": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1882": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7463
      ],
      "op": "SLOAD",
      "path": "44"
    },
    "1883": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7475
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x764"
    },
    "1886": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7475
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1887": {
      "fn": "ERC20._transfer",
      "offset": [
        7468,
        7474
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1888": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7467
      ],
      "op": "PUSH2",
      "path": "44",
      "value": "0x855"
    },
    "1891": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        7443,
        7475
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1892": {
      "fn": "ERC20._transfer",
      "offset": [
        7443,
        7475
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP1",
      "path": "44"
    },
    "1902": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP5",
      "path": "44"
    },
    "1903": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "AND",
      "path": "44"
    },
    "1904": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7429
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x0"
    },
    "1906": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1907": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1908": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1909": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x20"
    },
    "1911": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1912": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1913": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1914": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "PUSH1",
      "path": "44",
      "value": "0x40"
    },
    "1916": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1917": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1918": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1919": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "KECCAK256",
      "path": "44"
    },
    "1920": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7475
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1921": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7475
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1922": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7475
      ],
      "op": "SWAP5",
      "path": "44"
    },
    "1923": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7475
      ],
      "op": "SSTORE",
      "path": "44"
    },
    "1924": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "DUP1",
      "path": "44",
      "statement": 24
    },
    "1925": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1926": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "DUP6",
      "path": "44"
    },
    "1927": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "DUP2",
      "path": "44"
    },
    "1928": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "MSTORE",
      "path": "44"
    },
    "1929": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1930": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "MLOAD",
      "path": "44"
    },
    "1931": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1932": {
      "fn": "ERC20._transfer",
      "offset": [
        7420,
        7440
      ],
      "op": "SWAP4",
      "path": "44"
    },
    "1933": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1934": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "DUP8",
      "path": "44"
    },
    "1935": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "AND",
      "path": "44"
    },
    "1936": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1937": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "PUSH32",
      "path": "44",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1970": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP3",
      "path": "44"
    },
    "1971": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP2",
      "path": "44"
    },
    "1972": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "DUP3",
      "path": "44"
    },
    "1973": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1974": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SUB",
      "path": "44"
    },
    "1975": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "ADD",
      "path": "44"
    },
    "1976": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "SWAP1",
      "path": "44"
    },
    "1977": {
      "fn": "ERC20._transfer",
      "offset": [
        7490,
        7525
      ],
      "op": "LOG3",
      "path": "44"
    },
    "1978": {
      "fn": "ERC20._transfer",
      "offset": [
        7002,
        7532
      ],
      "op": "POP",
      "path": "44"
    },
    "1979": {
      "fn": "ERC20._transfer",
      "offset": [
        7002,
        7532
      ],
      "op": "POP",
      "path": "44"
    },
    "1980": {
      "fn": "ERC20._transfer",
      "offset": [
        7002,
        7532
      ],
      "op": "POP",
      "path": "44"
    },
    "1981": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        7002,
        7532
      ],
      "op": "JUMP",
      "path": "44"
    },
    "1982": {
      "fn": "SafeMath.sub",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "1983": {
      "fn": "SafeMath.sub",
      "offset": [
        1799,
        1806
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "1985": {
      "fn": "SafeMath.sub",
      "offset": [
        1834,
        1846
      ],
      "op": "DUP2",
      "path": "42",
      "statement": 25
    },
    "1986": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1987": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "DUP5",
      "path": "42"
    },
    "1988": {
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "GT",
      "path": "42"
    },
    "1989": {
      "branch": 32,
      "fn": "SafeMath.sub",
      "offset": [
        1826,
        1832
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "1990": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x84D"
    },
    "1993": {
      "branch": 32,
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "1994": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "1996": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "1997": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2001": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2003": {
      "op": "SHL"
    },
    "2004": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2005": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2006": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2008": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2009": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2010": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2011": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2013": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2014": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2015": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2016": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SUB",
      "path": "42"
    },
    "2017": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2018": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2019": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2020": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2021": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2022": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2023": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2024": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2025": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2027": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2028": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2029": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2030": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2031": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2032": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2033": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2035": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2036": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2037": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2038": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2039": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2040": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2042": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2043": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2044": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2045": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "LT",
      "path": "42"
    },
    "2046": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2047": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x812"
    },
    "2050": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2051": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2052": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2053": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2054": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2055": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2056": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2057": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2058": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2059": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2061": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2062": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x7FA"
    },
    "2065": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2066": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2067": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2068": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2069": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2070": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2071": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2072": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2073": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2074": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2075": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2076": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2077": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1F"
    },
    "2079": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "AND",
      "path": "42"
    },
    "2080": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2081": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2082": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x83F"
    },
    "2085": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2086": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2087": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2088": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SUB",
      "path": "42"
    },
    "2089": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2090": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2091": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1"
    },
    "2093": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP4",
      "path": "42"
    },
    "2094": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2096": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SUB",
      "path": "42"
    },
    "2097": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x100"
    },
    "2100": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "EXP",
      "path": "42"
    },
    "2101": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SUB",
      "path": "42"
    },
    "2102": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "NOT",
      "path": "42"
    },
    "2103": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "AND",
      "path": "42"
    },
    "2104": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2105": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2106": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2108": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "ADD",
      "path": "42"
    },
    "2109": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2110": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2111": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2112": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2113": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "2114": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2115": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2116": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "POP",
      "path": "42"
    },
    "2117": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2119": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2120": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2121": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP2",
      "path": "42"
    },
    "2122": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SUB",
      "path": "42"
    },
    "2123": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2124": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2125": {
      "fn": "SafeMath.sub",
      "offset": [
        1818,
        1847
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "op": "POP"
    },
    "2129": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2130": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SUB",
      "path": "42"
    },
    "2131": {
      "fn": "SafeMath.sub",
      "offset": [
        1869,
        1874
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2132": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1713,
        1900
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2133": {
      "fn": "SafeMath.add",
      "offset": [
        841,
        1017
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2134": {
      "fn": "SafeMath.add",
      "offset": [
        899,
        906
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x0"
    },
    "2136": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2137": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2138": {
      "fn": "SafeMath.add",
      "offset": [
        930,
        935
      ],
      "op": "ADD",
      "path": "42"
    },
    "2139": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP4",
      "path": "42",
      "statement": 26
    },
    "2140": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2141": {
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "LT",
      "path": "42"
    },
    "2142": {
      "branch": 33,
      "fn": "SafeMath.add",
      "offset": [
        953,
        959
      ],
      "op": "ISZERO",
      "path": "42"
    },
    "2143": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH2",
      "path": "42",
      "value": "0x8AF"
    },
    "2146": {
      "branch": 33,
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "JUMPI",
      "path": "42"
    },
    "2147": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x40"
    },
    "2149": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP1",
      "path": "42"
    },
    "2150": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2151": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2159": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2160": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x20"
    },
    "2162": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x4"
    },
    "2164": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2165": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "42"
    },
    "2166": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2167": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x1B"
    },
    "2169": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x24"
    },
    "2171": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2172": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "42"
    },
    "2173": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2174": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH32",
      "path": "42",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "2207": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x44"
    },
    "2209": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP3",
      "path": "42"
    },
    "2210": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "42"
    },
    "2211": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MSTORE",
      "path": "42"
    },
    "2212": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2213": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "MLOAD",
      "path": "42"
    },
    "2214": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2215": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "DUP2",
      "path": "42"
    },
    "2216": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2217": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SUB",
      "path": "42"
    },
    "2218": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "PUSH1",
      "path": "42",
      "value": "0x64"
    },
    "2220": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "ADD",
      "path": "42"
    },
    "2221": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "SWAP1",
      "path": "42"
    },
    "2222": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "REVERT",
      "path": "42"
    },
    "2223": {
      "fn": "SafeMath.add",
      "offset": [
        945,
        991
      ],
      "op": "JUMPDEST",
      "path": "42"
    },
    "2224": {
      "fn": "SafeMath.add",
      "offset": [
        1009,
        1010
      ],
      "op": "SWAP4",
      "path": "42",
      "statement": 27
    },
    "2225": {
      "fn": "SafeMath.add",
      "offset": [
        841,
        1017
      ],
      "op": "SWAP3",
      "path": "42"
    },
    "2226": {
      "op": "POP"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "op": "POP"
    },
    "2229": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        841,
        1017
      ],
      "op": "JUMP",
      "path": "42"
    },
    "2230": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10662,
        10754
      ],
      "op": "JUMPDEST",
      "path": "44"
    },
    "2231": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10662,
        10754
      ],
      "op": "POP",
      "path": "44"
    },
    "2232": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10662,
        10754
      ],
      "op": "POP",
      "path": "44"
    },
    "2233": {
      "fn": "ERC20._beforeTokenTransfer",
      "offset": [
        10662,
        10754
      ],
      "op": "POP",
      "path": "44"
    },
    "2234": {
      "fn": "ERC20._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        10662,
        10754
      ],
      "op": "JUMP",
      "path": "44"
    }
  },
  "sha1": "fb438b35fce1e8d7adda82b34309422318516996",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20};\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n",
  "sourceMap": "1312:9444:44:-:0;;;1980:141;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1980:141:44;;;;;;;;;;-1:-1:-1;1980:141:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1980:141:44;;;;;;;;;;-1:-1:-1;1980:141:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1980:141:44;;-1:-1:-1;;2052:12:44;;;;-1:-1:-1;2052:5:44;;:12;;;;;:::i;:::-;-1:-1:-1;2074:16:44;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2100:9:44;:14;;-1:-1:-1;;2100:14:44;2112:2;2100:14;;;-1:-1:-1;1312:9444:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1312:9444:44;;;-1:-1:-1;1312:9444:44;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/lib/token/ERC20/ERC20.sol",
  "type": "contract"
}